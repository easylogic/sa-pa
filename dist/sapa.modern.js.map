{"version":3,"file":"sapa.modern.js","sources":["../src/Event.js","../src/functions/func.js","../src/functions/DomDiff.js","../src/functions/Dom.js","../src/handler/BaseHandler.js","../src/handler/DomEventHandler.js","../src/handler/BindHandler.js","../src/functions/registElement.js","../src/functions/uuid.js","../src/EventMachine.js","../src/BaseStore.js","../src/App.js","../src/UIElement.js"],"sourcesContent":["export const MAGIC_METHOD = \"@magic:\";\n\nexport const makeEventChecker = (value, split = CHECK_SAPARATOR) => {\n  return ` ${split} ${value}`;\n}\n\n// event name regular expression\nexport const CHECK_DOM_EVENT_PATTERN = /domevent (.*)/gi;\nexport const CHECK_LOAD_PATTERN = /load (.*)/gi;\nexport const CHECK_BIND_PATTERN = /bind (.*)/gi;\nexport const CHECK_SUBSCRIBE_PATTERN = /subscribe (.*)/gi;\n\nconst SPLITTER = \"|\";\n\nexport const PIPE = (...args) => {\n  return args.join(SPLITTER);\n};\n\nexport const NAME_SAPARATOR = \":\";\nexport const CHECK_SAPARATOR = \"|\";\nexport const DOM_EVENT_SAPARATOR = `${MAGIC_METHOD}domevent `;\nexport const LOAD_SAPARATOR = `${MAGIC_METHOD}load `;\nexport const BIND_SAPARATOR = `${MAGIC_METHOD}bind `;\nexport const SUBSCRIBE_SAPARATOR = `${MAGIC_METHOD}subscribe `;\n\nexport const SAPARATOR = ' ';\n\nconst refManager = {};\n\nconst DOM_EVENT_MAKE = (...keys) => {\n  var key = keys.join(NAME_SAPARATOR);\n  return (...args) => {\n    return DOM_EVENT_SAPARATOR + [key, ...args].join(SAPARATOR);\n  };\n};\n\nconst SUBSCRIBE_EVENT_MAKE = (...args) => {\n  return SUBSCRIBE_SAPARATOR + args.join(CHECK_SAPARATOR);\n}\n\n\n// Predefined CHECKER\nexport const CHECKER = (value, split = CHECK_SAPARATOR) => {\n  return makeEventChecker(value, split);\n};\n\nexport const AFTER = (value, split = CHECK_SAPARATOR) => {\n  return makeEventChecker(`after(${value})`, split);\n};\n\nexport const BEFORE = (value, split = CHECK_SAPARATOR) => {\n  return makeEventChecker(`before(${value})`, split);  \n};\n\nexport const IF = CHECKER;\nexport const KEY = CHECKER; \n\nexport const ARROW_UP = CHECKER('ArrowUp');\nexport const ARROW_DOWN = CHECKER('ArrowDown');\nexport const ARROW_LEFT = CHECKER('ArrowLeft');\nexport const ARROW_RIGHT = CHECKER('ArrowRight');\nexport const ENTER = CHECKER('Enter');\nexport const SPACE = CHECKER('Space');\nexport const ESCAPE = CHECKER('Escape');\n\nexport const ALT = CHECKER(\"isAltKey\");\nexport const SHIFT = CHECKER(\"isShiftKey\");\nexport const META = CHECKER(\"isMetaKey\");\nexport const CONTROL = CHECKER(\"isCtrlKey\");\nexport const MOUSE = CHECKER(\"hasMouse\");\nexport const TOUCH = CHECKER(\"hasTouch\");\nexport const PEN = CHECKER(\"hasPen\");\nexport const SELF = CHECKER(\"self\");\nexport const LEFT_BUTTON = CHECKER(\"isMouseLeftButton\")\nexport const RIGHT_BUTTON = CHECKER(\"isMouseRightButton\")\n\nexport const FIT = CHECKER(\"fit\");\nexport const PASSIVE = CHECKER(\"passive\");\nexport const DOMDIFF = CHECKER('domdiff');\n\n// event config method\nexport const DEBOUNCE = (t = 100) => {\n  return CHECKER(`debounce(${t})`);\n};\n\nexport const DELAY = (t = 300) => {\n  return CHECKER(`delay(${t})`);\n};\n\nexport const D1000 = DEBOUNCE(1000)\n\nexport const THROTTLE = (t = 100) => {\n  return CHECKER(`throttle(${t})`);\n};\nexport const ALL_TRIGGER = CHECKER(\"allTrigger()\");\nexport const SELF_TRIGGER = CHECKER(\"selfTrigger()\");\n\nexport const CAPTURE = CHECKER(\"capture()\");\n\n// event config method\n\n// before method\n\n// after method\nexport const PREVENT = AFTER(`preventDefault`);\nexport const STOP = AFTER(`stopPropagation`);\n\nexport const SUBSCRIBE = SUBSCRIBE_EVENT_MAKE;\nexport const SUBSCRIBE_ALL = (...args) => SUBSCRIBE_EVENT_MAKE(...args, ALL_TRIGGER);\nexport const SUBSCRIBE_SELF = (...args) => SUBSCRIBE_EVENT_MAKE(...args, SELF_TRIGGER);\nexport const CONFIG = (config, ...args) => SUBSCRIBE_EVENT_MAKE(`config:${config}`, ...args);\nexport const CUSTOM = DOM_EVENT_MAKE;\nexport const CLICK = DOM_EVENT_MAKE(\"click\");\nexport const DOUBLECLICK = DOM_EVENT_MAKE(\"dblclick\");\nexport const MOUSEDOWN = DOM_EVENT_MAKE(\"mousedown\");\nexport const MOUSEUP = DOM_EVENT_MAKE(\"mouseup\");\nexport const MOUSEMOVE = DOM_EVENT_MAKE(\"mousemove\");\nexport const MOUSEOVER = DOM_EVENT_MAKE(\"mouseover\");\nexport const MOUSEOUT = DOM_EVENT_MAKE(\"mouseout\");\nexport const MOUSEENTER = DOM_EVENT_MAKE(\"mouseenter\");\nexport const MOUSELEAVE = DOM_EVENT_MAKE(\"mouseleave\");\nexport const TOUCHSTART = DOM_EVENT_MAKE(\"touchstart\");\nexport const TOUCHMOVE = DOM_EVENT_MAKE(\"touchmove\");\nexport const TOUCHEND = DOM_EVENT_MAKE(\"touchend\");\nexport const KEYDOWN = DOM_EVENT_MAKE(\"keydown\");\nexport const KEYUP = DOM_EVENT_MAKE(\"keyup\");\nexport const KEYPRESS = DOM_EVENT_MAKE(\"keypress\");\nexport const DRAG = DOM_EVENT_MAKE(\"drag\");\nexport const DRAGSTART = DOM_EVENT_MAKE(\"dragstart\");\nexport const DROP = DOM_EVENT_MAKE(\"drop\");\nexport const DRAGOVER = DOM_EVENT_MAKE(\"dragover\");\nexport const DRAGENTER = DOM_EVENT_MAKE(\"dragenter\");\nexport const DRAGLEAVE = DOM_EVENT_MAKE(\"dragleave\");\nexport const DRAGEXIT = DOM_EVENT_MAKE(\"dragexit\");\nexport const DRAGOUT = DOM_EVENT_MAKE(\"dragout\");\nexport const DRAGEND = DOM_EVENT_MAKE(\"dragend\");\nexport const CONTEXTMENU = DOM_EVENT_MAKE(\"contextmenu\");\nexport const CHANGE = DOM_EVENT_MAKE(\"change\");\nexport const INPUT = DOM_EVENT_MAKE(\"input\");\nexport const FOCUS = DOM_EVENT_MAKE(\"focus\");\nexport const FOCUSIN = DOM_EVENT_MAKE(\"focusin\");\nexport const FOCUSOUT = DOM_EVENT_MAKE(\"focusout\");\nexport const BLUR = DOM_EVENT_MAKE(\"blur\");\nexport const PASTE = DOM_EVENT_MAKE(\"paste\");\nexport const RESIZE = DOM_EVENT_MAKE(\"resize\");\nexport const SCROLL = DOM_EVENT_MAKE(\"scroll\");\nexport const SUBMIT = DOM_EVENT_MAKE(\"submit\");\n\n// pointerstart 의 경우 drag 를 위한 시작점이기 때문에  left button 만 허용한다. \n// context 메뉴나 wheel 은 허용하지 않는다. \nexport const POINTERSTART = (...args) => {\n  return (CUSTOM(\"pointerdown\")(...args) + LEFT_BUTTON);\n}\n// \n\nexport const POINTEROVER = CUSTOM(\"pointerover\");\nexport const POINTERENTER = CUSTOM(\"pointerenter\");\nexport const POINTEROUT = CUSTOM(\"pointerout\");\nexport const POINTERMOVE = CUSTOM(\"pointermove\");\nexport const POINTEREND = CUSTOM(\"pointerup\");\nexport const CHANGEINPUT = CUSTOM(\"change\", \"input\");\nexport const WHEEL = CUSTOM(\"wheel\", \"mousewheel\", \"DOMMouseScroll\");\nexport const ANIMATIONSTART = DOM_EVENT_MAKE('animationstart');\nexport const ANIMATIONEND = DOM_EVENT_MAKE('animationend');\nexport const ANIMATIONITERATION = DOM_EVENT_MAKE('animationiteration');\nexport const TRANSITIONSTART = DOM_EVENT_MAKE('transitionstart');\nexport const TRANSITIONEND = DOM_EVENT_MAKE('transitionend');\nexport const TRANSITIONRUN = DOM_EVENT_MAKE('transitionrun');\nexport const TRANSITIONCANCEL = DOM_EVENT_MAKE('transitioncancel');\nexport const DOUBLETAB = CUSTOM('doubletab')\n\n\n// Predefined LOADER\nexport const LOAD = (value = \"$el\") => {\n  return LOAD_SAPARATOR + value;\n};\n\nexport const getRef = id => {\n  return refManager[id] || '';\n};\n\nexport const BIND_CHECK_FUNCTION = field => {\n  return function() {\n    return this.prevState[field] != this.state[field];\n  };\n};\n\nexport const BIND_CHECK_DEFAULT_FUNCTION = () => {\n  return true;\n};\n\nexport const BIND = (value = \"$el\") => {\n  return (\n    BIND_SAPARATOR + value\n  );\n};\n\nexport function normalizeWheelEvent (e) {\n  let dx = e.deltaX;\n  let dy = e.deltaY;\n\n\n  if (dx === 0 && e.shiftKey) {\n    [dy, dx] = [dx, dy];\n  }  \n\n  if (e.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n    dy *= 8;\n  } else if (e.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n    dy *= 24; \n  }\n\n\n  return [\n    limit(dx, 24), \n    limit(dy, 24), \n    0\n  ]\n}\n\nfunction limit (delta, maxDelta) {\n  return Math.sign(delta) * Math.min( maxDelta, Math.abs(delta))\n}\n\nexport default {\n  addDomEvent(dom, eventName, callback, useCapture = false) {\n    if (dom) {\n      dom.addEventListener(eventName, callback, useCapture);\n    }\n  },\n\n  removeDomEvent(dom, eventName, callback) {\n    if (dom) {\n      dom.removeEventListener(eventName, callback);\n    }\n  },\n\n  pos(e) {\n    if (e.touches && e.touches[0]) {\n      return e.touches[0];\n    }\n\n    return e;\n  },\n\n  posXY(e) {\n    var pos = this.pos(e);\n    return {\n      x: pos.pageX,\n      y: pos.pageY\n    };\n  }\n};\n","\nconst identity = () => true; \n\n/**\n * property 수집하기\n * 상위 클래스의 모든 property 를 수집해서 리턴한다.\n * \n * @param {Object} root  상속관계에 있는 인스턴스 \n * @param {Object} expectMethod 제외될 필드 리스트 { [field]: true }\n * @returns {string[]} 나의 상위 모든 메소드를 수집해서 리턴한다. \n */\nexport function collectProps(root, checkFunction = identity) {\n\n    let p = root;\n    let results = [];\n    do {\n        const isObject = p instanceof Object;\n\n        if (isObject === false) {\n            break;\n        }\n\n        const names = Object.getOwnPropertyNames(p).filter(name => {\n            return root && isFunction(root[name]) && checkFunction(name);\n        });\n\n        results.push.apply(results, names);\n    } while (p = Object.getPrototypeOf(p));\n\n\n    return results;\n}\n\nexport function debounce(callback, delay = 0) {\n\n    if (delay === 0) {\n        return callback;\n    }\n\n    var t = undefined;\n\n    return function ($1, $2, $3, $4, $5) {\n        if (t) {\n            clearTimeout(t);\n        }\n\n        t = setTimeout(function () {\n            callback($1, $2, $3, $4, $5);\n        }, delay || 300);\n    }\n}\n\n\nexport function throttle(callback, delay) {\n\n    var t = undefined;\n\n    return function ($1, $2, $3, $4, $5) {\n        if (!t) {\n            t = setTimeout(function () {\n                callback($1, $2, $3, $4, $5);\n                t = null;\n            }, delay || 300);\n        }\n\n    }\n}\n\nexport function ifCheck(callback, context, checkMethods) {\n    return (...args) => {\n        const ifResult = checkMethods.every(check => {\n            return context[check.target].apply(context, args);\n        });\n\n        if (ifResult) {\n            callback.apply(context, args);\n        }\n    }\n}\n\nexport function keyEach(obj, callback) {\n    Object.keys(obj).forEach((key, index) => {\n        callback(key, obj[key], index);\n    })\n}\n\nexport function get(obj, key, callback) {\n\n    var returnValue = defaultValue(obj[key], key);\n\n    if (isFunction(callback)) {\n        return callback(returnValue);\n    }\n\n    return returnValue;\n}\n\nexport function defaultValue(value, defaultValue) {\n    return typeof value == 'undefined' ? defaultValue : value;\n}\n\nexport function isUndefined(value) {\n    return typeof value == 'undefined' || value === null;\n}\n\nexport function isNotUndefined(value) {\n    return isUndefined(value) === false;\n}\n\nexport function isBoolean(value) {\n    return typeof value == 'boolean'\n}\n\nexport function isString(value) {\n    return typeof value == 'string'\n}\n\nexport function isNotString(value) {\n    return isString(value) === false;\n}\n\nexport function isObject(value) {\n    return typeof value == 'object' && !Array.isArray(value) && !isNumber(value) && !isString(value) && value !== null;\n}\n\nexport function isFunction(value) {\n    return typeof value == 'function'\n}\n\nexport function isNumber(value) {\n    return typeof value == 'number';\n}\n\nexport function isZero(num) {\n    return num === 0;\n}\n\nexport function isNotZero(num) {\n    return !isZero(num);\n}\n\nexport function clone(obj) {\n    if (isUndefined(obj)) return undefined;\n    return JSON.parse(JSON.stringify(obj));\n}\n\n\nexport function combineKeyArray(obj) {\n    Object.keys(obj).forEach(key => {\n        if (Array.isArray(obj[key])) {\n            obj[key] = obj[key].join(', ')\n        }\n    })\n\n    return obj;\n}\n\n\n\nconst short_tag_regexp = /\\<(\\w*)([^\\>]*)\\/\\>/gim;\n\nconst HTML_TAG = {\n    'image': true,\n    'input': true,\n    'br': true,\n    'path': true,\n    'line': true,\n    'circle': true,\n    'rect': true,\n    'path': true,\n    'polygon': true,\n    'polyline': true,\n    'use': true\n}\n\n\nexport const html = (strings, ...args) => {\n\n    var results = strings.map((it, index) => {\n\n        var results = args[index] || ''\n\n        if (isFunction(results)) {\n            console.log(results);\n            // results = results()\n        }\n\n        if (!Array.isArray(results)) {\n            results = [results]\n        }\n\n        results = results.join('')\n\n        return it + results;\n    }).join('');\n\n    results = results.replace(short_tag_regexp, function (match, p1) {\n        if (HTML_TAG[p1.toLowerCase()]) {\n            return match;\n        } else {\n            return match.replace('/>', `></${p1}>`)\n        }\n    })\n\n    return results;\n}\n\n\n/**\n * 전체 문자열에서 특정 키워드 함수를 사용하는 패턴을 찾아 리턴해준다. \n * \n * @param {string[]} arr \n * @param {string} keyword \n */\nexport const splitMethodByKeyword = (arr, keyword) => {\n    const filterKeys = arr.filter(code => code.indexOf(`${keyword}(`) > -1);\n    const filterMaps = filterKeys.map(code => {\n        const [target, param] = code\n            .split(`${keyword}(`)[1]\n            .split(\")\")[0]\n            .trim()\n            .split(\" \");\n\n        return { target, param };\n    });\n\n    return [filterKeys, filterMaps];\n};","const setBooleanProp = (el, name, value) => {\n    if (value) {\n        el.setAttribute(name, name);\n        el[name] = value;\n    } else {\n        el.removeAttribute(name);\n        el[name] = value;\n    }\n  };\n  \nconst setProp = (el, name, value) => {\n    if (typeof value === 'boolean') {\n        setBooleanProp(el, name, value);\n    } else {\n        el.setAttribute(name, value);\n    }\n};\n\n\nconst removeBooleanProp = (node, name) => {\n    node.removeAttribute(name);\n    node[name] = false;\n};\n\nconst removeUndefinedProp = (node, name) => {\n    node.removeAttribute(name);\n}\n  \nconst removeProp = (node, name, value) => {\n    if (typeof value === 'boolean') {\n        removeBooleanProp(node, name);\n    } else if (name) {\n        removeUndefinedProp(node, name);\n    }\n};\n  \n\nconst updateProp = (node, name, newValue, oldValue) => {\n    if (!newValue) {\n      removeProp(node, name, oldValue);\n    } else if (!oldValue || newValue !== oldValue) {\n      setProp(node, name, newValue);\n    }\n  };\n\n\nconst updateProps = (node, newProps = {}, oldProps = {}) => {\n\n    const keyList = [];\n    keyList.push.apply(keyList, Object.keys(newProps))\n    keyList.push.apply(keyList, Object.keys(oldProps))\n\n    const props = [...new Set(keyList)]\n  \n    for(var i = 0, len = props.length; i < len; i++) {\n        const key = props[i];\n        updateProp(node, key, newProps[key], oldProps[key]);\n    }\n    // props.forEach((name) => {\n    //   updateProp(node, name, newProps[name], oldProps[name]);\n    // });\n};\n\n/**\n * TEXT_NODE 일 때   둘 다 공백일 때는  비교하지 않는다. \n * \n * @param {*} node1 \n * @param {*} node2 \n */\nfunction changed(node1, node2) {\n    return (\n        (node1.nodeType === Node.TEXT_NODE && node1.textContent !== node2.textContent) \n        || node1.nodeName !== node2.nodeName\n    ) \n}\n\nfunction hasPassed(node1) {\n    return (\n        (node1.nodeType !== Node.TEXT_NODE && node1.getAttribute('data-domdiff-pass') === 'true') \n    ) \n}\n\n/**\n * refClass 속성을 가지고 있으면 기존 el 을 대체한다. \n * \n */ \nfunction hasRefClass(node1) {\n    return (\n        (node1.nodeType !== Node.TEXT_NODE && (node1.getAttribute('refClass'))) \n    ) \n}\n\nfunction getProps (attributes) {\n    var results = {}\n    const len = attributes.length;\n    for(let i = 0; i < len; i++) {\n        const t = attributes[i];\n        results[t.name] = t.value;        \n    }\n\n    return results;\n    \n}\n\nfunction updateElement (parentElement, oldEl, newEl, i) {\n\n    if (!oldEl) {\n        // console.log('replace');        \n        parentElement.appendChild(newEl.cloneNode(true));\n    } else if (!newEl) {\n        // console.log('replace');        \n        parentElement.removeChild(oldEl);\n    } else if (hasPassed(oldEl) || hasPassed(newEl)) {\n        // NOOP\n        // data-domdiff-pass=\"true\" 일 때는 아무것도 비교하지 않고 끝낸다. \n        // console.log(oldEl, newEl, 'passed');\n    } else if (changed(newEl, oldEl) || hasRefClass(newEl)) {\n        // node 가 같지 않으면 바꾸고, refClass 속성이 있으면 바꾸고\n        parentElement.replaceChild(newEl.cloneNode(true), oldEl);\n    } else if (\n        newEl.nodeType !== Node.TEXT_NODE \n\n        && newEl.nodeType !== Node.COMMENT_NODE\n        && newEl.toString() !== \"[object HTMLUnknownElement]\"\n    ) {\n        // console.log(newEl);\n        updateProps(oldEl, getProps(newEl.attributes), getProps(oldEl.attributes)); // added        \n        var oldChildren = children(oldEl);\n        var newChildren = children(newEl);\n        var max = Math.max(oldChildren.length, newChildren.length);\n\n        for (var i = 0; i < max; i++) {\n            updateElement(oldEl, oldChildren[i], newChildren[i], i);\n        }\n    }\n\n}\n\nconst children = (el) => {\n    var element = el.firstChild; \n\n    if (!element) {\n        return [] \n    }\n\n    var results = [] \n\n    do {\n        results.push(element);\n        element = element.nextSibling;\n    } while (element);\n\n    return results; \n}\n\n\nexport function DomDiff (A, B) {\n\n    A = A.el || A; \n    B = B.el || B; \n\n    var childrenA = children(A);\n    var childrenB = children(B); \n\n    var len = Math.max(childrenA.length, childrenB.length);\n    for (var i = 0; i < len; i++) {\n        updateElement(A, childrenA[i], childrenB[i], i);\n    }\n}\n","import { DomDiff } from \"./DomDiff\";\n\n/**\n * Dom 유틸리티 \n * \n */ \nexport class Dom {\n  constructor(tag, className, attr) {\n    if (typeof tag !== 'string') {\n      this.el = tag;\n    } else {\n      var el = document.createElement(tag);\n\n      if (className) {\n        el.className = className;\n      }\n \n      attr = attr || {};\n\n      for (var k in attr) {\n        el.setAttribute(k, attr[k]);\n      }\n\n      this.el = el;\n    }\n  }\n\n  static create (tag, className, attr) {\n    return new Dom(tag, className, attr);\n  }\n \n  static createByHTML (htmlString) {\n    var div = Dom.create('div')\n    var list = div.html(htmlString).children();\n\n    if (list.length) {\n      return Dom.create(list[0].el);\n    }\n\n    return null; \n  }\n\n  static getScrollTop() {\n    return Math.max(\n      window.pageYOffset,\n      document.documentElement.scrollTop,\n      document.body.scrollTop\n    );\n  }\n\n  static getScrollLeft() {\n    return Math.max(\n      window.pageXOffset,\n      document.documentElement.scrollLeft,\n      document.body.scrollLeft\n    );\n  }\n\n  static parse(html) {\n    var parser = DOMParser();\n    return parser.parseFromString(html, \"text/htmll\");\n  }\n\n  static body () {\n    return Dom.create(document.body)\n  }\n\n  setAttr (obj) {\n    Object.keys(obj).forEach(key => {\n      this.attr(key, obj[key])\n    })\n    return this;  \n  }\n\n  setAttrNS (obj, namespace = 'http://www.w3.org/2000/svg') {\n    Object.keys(obj).forEach(key => {\n      this.attr(key, obj[key], namespace)\n    })\n    return this;  \n  }  \n\n  setProp (obj) {\n    Object.keys(obj).forEach(key => {\n      // 동일한 값을 갱신하지 않는다. \n      if (this.el[key] != obj[key]) {\n        this.el[key] = obj[key];\n      }\n    })\n    return this;  \n  }\n\n  /**\n   * data-xxx 속성을 관리한다. \n   * \n   * @param {string} key \n   * @param {any} value \n   */\n  data (key, value) {\n    if (arguments.length === 1) {\n      return this.attr('data-' + key);\n    } else if (arguments.length === 2) {\n      return this.attr('data-' + key, value);\n    }\n\n    //TODO:  data 속성을 모두 {[key]: value} 형태로 리턴하기 \n\n    return this; \n  }\n\n  /**\n   * Dom attribute 얻기 또는 설정 \n   * \n   * get ->  Dom.create(targetElement).attr('key');\n   * set -> Dom.create(targetElement).attr('key', value);\n   * \n   * @param {string} key \n   * @param {[string]} value \n   */\n  attr(key, value) {\n    if (arguments.length == 1) {\n      return this.el.getAttribute(key);\n    }\n\n    // 동일한 속성 값이 있다면 변경하지 않는다. \n    if (this.el.getAttribute(key) != value) {\n      this.el.setAttribute(key, value);\n    }\n\n    return this;\n  }\n\n  attrNS(key, value, namespace = 'http://www.w3.org/2000/svg') {\n    if (arguments.length == 1) {\n      return this.el.getAttributeNS(namespace, key);\n    }\n\n    // 동일한 속성 값이 있다면 변경하지 않는다. \n    if (this.el.getAttributeNS(namespace, key) != value) {\n      this.el.setAttributeNS(namespace, key, value);\n    }\n\n    return this;\n  }  \n\n  attrKeyValue(keyField) {\n    return {\n      [this.el.getAttribute(keyField)]: this.val()\n    }\n  }\n\n  attrs(...args) {\n    return args.map(key => {\n      return this.el.getAttribute(key);\n    });\n  }\n\n  styles(...args) {\n    return args.map(key => {\n      return this.el.style[key];\n    });\n  }  \n\n  removeAttr(key) {\n    this.el.removeAttribute(key);\n\n    return this;\n  }\n\n  removeStyle(key) {\n    this.el.style.removeProperty(key);\n    return this;\n  }\n\n  is(checkElement) {\n    return this.el === (checkElement.el || checkElement);\n  }\n\n  isTag(tag) {\n    return this.el.tagName.toLowerCase() === tag.toLowerCase()\n  }\n\n  closest(cls) {\n    var temp = this;\n    var checkCls = false;\n\n    while (!(checkCls = temp.hasClass(cls))) {\n      if (temp.el.parentNode) {\n        temp = Dom.create(temp.el.parentNode);\n      } else {\n        return null;\n      }\n    }\n\n    if (checkCls) {\n      return temp;\n    }\n\n    return null;\n  }\n\n  path() {\n\n    if (!this.el) return [];\n\n    const $parentNode = this.parent(); \n\n    if ($parentNode) {\n      return [...$parentNode.path(), this]\n    } else {\n      return [this]\n    }\n\n\n  }\n\n  parent() {\n    return Dom.create(this.el.parentNode);\n  }\n\n  hasParent () {\n    return !!this.el.parentNode\n  }\n\n  removeClass(...args) {\n    this.el.classList.remove(...args);\n    return this;\n  }\n\n  hasClass(cls) {\n    if (!this.el.classList) return false;\n    return this.el.classList.contains(cls);\n  }\n\n  addClass(...args) {\n    this.el.classList.add(...args);\n\n    return this;\n  }\n\n  onlyOneClass(cls) {\n    var parent = this.parent();\n\n    parent.children().forEach(it => {\n      it.removeClass(cls);\n    })\n\n    this.addClass(cls);\n  }\n\n  toggleClass(cls, isForce) {\n    this.el.classList.toggle(cls, isForce);\n    return this; \n  }\n\n  html(html) {\n    if (typeof html === 'undefined') {\n      return this.el.innerHTML;\n    }\n\n    if (typeof html === 'string') {\n      this.el.innerHTML = html;\n    } else {\n      this.empty().append(html);\n    }\n\n    return this;\n  }\n\n  htmlDiff(fragment) {\n    DomDiff(this, fragment);\n  }\n  updateDiff (html, rootElement = 'div') {\n    DomDiff(this, Dom.create(rootElement).html(html))\n  }\n\n  updateSVGDiff (html, rootElement = 'div') {\n    DomDiff(this, Dom.create(rootElement).html(`<svg>${html}</svg>`).firstChild.firstChild)\n  }  \n\n  find(selector) {\n    return this.el.querySelector(selector);\n  }\n\n  $(selector) {\n    var node = this.find(selector);\n    return node ? Dom.create(node) : null;\n  }\n\n  findAll(selector) {\n    return Array.from(this.el.querySelectorAll(selector));\n  }\n\n  $$(selector) {\n    var arr = this.findAll(selector);\n    return arr.map(node => Dom.create(node));\n  }\n\n  empty() {\n    while (this.el.firstChild) this.el.removeChild(this.el.firstChild);\n    return this;\n  }\n\n  append(el) {\n    if (typeof el === 'string') {\n      this.el.appendChild(document.createTextNode(el));\n    } else {\n      this.el.appendChild(el.el || el);\n    }\n\n    return this;\n  }\n\n  prepend(el) {\n    if (typeof el === 'string') {\n      this.el.prepend(document.createTextNode(el));\n    } else {\n      this.el.prepend(el.el || el);\n    }\n\n    return this;    \n  }\n\n  prependHTML(html) {\n    var $dom = Dom.create(\"div\").html(html);\n\n    this.prepend($dom.createChildrenFragment());\n\n    return $dom;\n  }\n\n  appendHTML(html) {\n    var $dom = Dom.create(\"div\").html(html);\n\n    this.append($dom.createChildrenFragment());\n\n    return $dom;\n  }\n\n  /**\n   * create document fragment with children dom\n   */\n  createChildrenFragment() {\n    const list = this.children();\n\n    var fragment = document.createDocumentFragment();\n    list.forEach($el => fragment.appendChild($el.el));\n\n    return fragment;\n  }\n\n  appendTo(target) {\n    var t = target.el ? target.el : target;\n\n    t.appendChild(this.el);\n\n    return this;\n  }\n\n  remove() {\n    if (this.el.parentNode) {\n      this.el.parentNode.removeChild(this.el);\n    }\n\n    return this;\n  }\n\n  removeChild(el) {\n    this.el.removeChild(el.el || el);\n    return this; \n  }\n\n  /**\n   * \n   * @param {string} value \n   * @returns {string} 파라미터가 없을 때  textContent 를 리턴한다. \n   */\n  text(value) {\n    if (typeof value === 'undefined') {\n      return this.el.textContent;\n    } else {\n      var tempText = value;\n\n      if (value instanceof Dom) {\n        tempText = value.text();\n      }\n\n      // 값의 변경 사항이 없으면 업데이트 하지 않는다. \n      if (this.el.textContent !== tempText) {\n        this.el.textContent = tempText;\n      }\n\n      return this;\n    }\n  }\n\n  /**\n   *\n   * $el.css`\n   *  border-color: yellow;\n   * `\n   *\n   * @param {*} key\n   * @param {*} value\n   */\n\n  css(key, value) {\n    if (typeof key !== 'undefined' && typeof value !== 'undefined') {\n      if (key.indexOf('--') === 0 &&  typeof value !== 'undefined' ) {\n        this.el.style.setProperty(key, value);\n      } else {\n        this.el.style[key] = value;\n      }\n    } else if (typeof key !== 'undefined') {\n      if (typeof key === 'string') {\n        return getComputedStyle(this.el)[key];  \n      } else {\n        Object.entries(key).forEach(([localKey, value]) => {\n          if (localKey.indexOf('--') === 0 && typeof value !== 'undefined' ) {\n            this.el.style.setProperty(localKey, value);\n          } else {\n            this.el.style[localKey] = value;\n          }          \n        })\n      }\n    }\n\n    return this;\n  }\n\n  getComputedStyle (...list) {\n    var css = getComputedStyle(this.el);\n\n    var obj = {}\n    list.forEach(it => {\n      obj[it] = css[it]\n    })\n\n    return obj; \n  }\n\n  getStyleList(...list) {\n    var style = {};\n\n    var len = this.el.style.length;\n    for (var i = 0; i < len; i++) {\n      var key = this.el.style[i];\n\n      style[key] = this.el.style[key];\n    }\n\n    list.forEach(key => {\n      style[key] = this.css(key);\n    });\n\n    return style;\n  }\n\n  cssText(value) {\n    if (typeof value === 'undefined') {\n      return this.el.style.cssText;\n    }\n\n    if (value != this.el.tempCssText) {\n      this.el.style.cssText = value;\n      this.el.tempCssText = value; \n    } \n\n    return this;\n  }\n\n  cssArray(arr) {\n    if (arr[0]) this.el.style[arr[0]] = arr[1];\n    if (arr[2]) this.el.style[arr[2]] = arr[3];\n    if (arr[4]) this.el.style[arr[4]] = arr[5];\n    if (arr[6]) this.el.style[arr[6]] = arr[7];\n    if (arr[8]) this.el.style[arr[8]] = arr[9];\n\n    return this;\n  }\n\n  cssFloat(key) {\n    return parseFloat(this.css(key));\n  }\n\n  cssInt(key) {\n    return parseInt(this.css(key));\n  }\n\n  px(key, value) {\n    return this.css(key, `${value}px`);\n  }\n\n  rect() {\n    return this.el.getBoundingClientRect();\n  }\n\n  bbox () {\n    return this.el.getBBox();\n  }\n\n  isSVG () {\n    return this.el.tagName.toUpperCase() === 'SVG';\n  }\n\n  offsetRect() {\n\n    if (this.isSVG()) {\n      const parentBox = this.parent().rect();\n      const box = this.rect();\n\n      return {\n        x: box.x - parentBox.x,\n        y: box.y - parentBox.y,\n        top: box.x - parentBox.x,\n        left: box.y - parentBox.y,\n        width: box.width,\n        height: box.height\n      }\n    }\n\n    return {\n      x: this.el.offsetLeft,\n      y: this.el.offsetTop,\n      top: this.el.offsetTop,\n      left: this.el.offsetLeft,\n      width: this.el.offsetWidth,\n      height: this.el.offsetHeight\n    };\n  }\n\n  offset() {\n    var rect = this.rect();\n\n    var scrollTop = Dom.getScrollTop();\n    var scrollLeft = Dom.getScrollLeft();\n\n    return {\n      top: rect.top + scrollTop,\n      left: rect.left + scrollLeft\n    };\n  }\n\n  offsetLeft() {\n    return this.offset().left;\n  }\n\n  offsetTop() {\n    return this.offset().top;\n  }\n\n  position() {\n    if (this.el.style.top) {\n      return {\n        top: parseFloat(this.css(\"top\")),\n        left: parseFloat(this.css(\"left\"))\n      };\n    } else {\n      return this.rect();\n    }\n  }\n\n  size() {\n    return [this.width(), this.height()];\n  }\n\n  width() {\n    return this.el.offsetWidth || this.rect().width;\n  }\n\n  contentWidth() {\n    return (\n      this.width() -\n      this.cssFloat(\"padding-left\") -\n      this.cssFloat(\"padding-right\")\n    );\n  }\n\n  height() {\n    return this.el.offsetHeight || this.rect().height;\n  }\n\n  contentHeight() {\n    return (\n      this.height() -\n      this.cssFloat(\"padding-top\") -\n      this.cssFloat(\"padding-bottom\")\n    );\n  }\n\n  val(value) {\n    if (typeof value === 'undefined') {\n      return this.el.value;\n    } else if (typeof value !== 'undefined') {\n      var tempValue = value;\n\n      if (value instanceof Dom) {\n        tempValue = value.val();\n      }\n\n      this.el.value = tempValue;\n    }\n\n    return this;\n  }\n\n  matches (selector) {\n    if (this.el) {\n\n      if (!this.el.matches) return null;\n\n      if (this.el.matches(selector)) {\n        return this;\n      }\n      return this.parent().matches(selector);\n    }\n\n    return null;\n}  \n\n\n  get value() {\n    return this.el.value;\n  }\n\n  get naturalWidth () {\n    return this.el.naturalWidth\n  }\n\n  get naturalHeight () {\n    return this.el.naturalHeight\n  }  \n\n  get files() {\n    return this.el.files ? [...this.el.files] : [];\n  }\n\n  realVal() {\n    switch (this.el.nodeType) {\n      case \"INPUT\":\n        var type = this.attr(\"type\");\n        if (type == \"checkbox\" || type == \"radio\") {\n          return this.checked();\n        }\n      case \"SELECT\":\n      case \"TEXTAREA\":\n        return this.el.value;\n    }\n\n    return \"\";\n  }\n\n  int() {\n    return parseInt(this.val(), 10);\n  }\n\n  float() {\n    return parseFloat(this.val());\n  }\n\n  show(displayType = \"block\") {\n    this.el.style.display = displayType != \"none\" ? displayType : \"block\"\n\n    return this; \n  }\n\n  hide() {\n    this.el.style.display = 'none';\n\n    return this; \n  }\n\n  isHide () {\n    return this.el.style.display  === \"none\"\n  }\n\n  isShow () {\n    return !this.isHide();\n  }\n\n  toggle(isForce) {\n    var currentHide = this.isHide();\n\n    if (arguments.length == 1) {\n      if (isForce) {\n        return this.show();\n      } else {\n        return this.hide();\n      }\n    } else {\n      if (currentHide) {\n        return this.show();\n      } else {\n        return this.hide();\n      }\n    }\n  }\n\n  get totalLength () {\n    return this.el.getTotalLength()\n  }\n\n  scrollIntoView () {\n    this.el.scrollIntoView()\n  }\n\n  addScrollLeft (dt) {\n    this.el.scrollLeft += dt; \n    return this; \n  }\n\n  addScrollTop (dt) {\n    this.el.scrollTop += dt; \n    return this; \n  }  \n\n  setScrollTop(scrollTop) {\n    this.el.scrollTop = scrollTop;\n    return this;\n  }\n\n  setScrollLeft(scrollLeft) {\n    this.el.scrollLeft = scrollLeft;\n    return this;\n  }\n\n  scrollTop() {\n    if (this.el === document.body) {\n      return Dom.getScrollTop();\n    }\n\n    return this.el.scrollTop;\n  }\n\n  scrollLeft() {\n    if (this.el === document.body) {\n      return Dom.getScrollLeft();\n    }\n\n    return this.el.scrollLeft;\n  }\n\n  scrollHeight() {\n    return this.el.scrollHeight;\n  }\n\n  scrollWidth() {\n    return this.el.scrollWidth;\n  }  \n\n  on(eventName, callback, opt1, opt2) {\n    this.el.addEventListener(eventName, callback, opt1, opt2);\n\n    return this;\n  }\n\n  off(eventName, callback) {\n    this.el.removeEventListener(eventName, callback);\n\n    return this;\n  }\n\n  getElement() {\n    return this.el;\n  }\n\n  createChild(tag, className = '', attrs = {}, css = {}) {\n    let $element = Dom.create(tag, className, attrs);\n    $element.css(css);\n\n    this.append($element);\n\n    return $element;\n  }\n\n  get firstChild() {\n    return Dom.create(this.el.firstElementChild);\n  }\n\n  children() {\n    var element = this.el.firstElementChild;\n\n    if (!element) {\n      return [];\n    }\n\n    var results = [];\n\n    do {\n      results.push(Dom.create(element));\n      element = element.nextElementSibling;\n    } while (element);\n\n    return results;\n  }\n\n  childLength() {\n    return this.el.children.length;\n  }\n\n  replace(newElement) {\n\n    if (this.el.parentNode) {\n      this.el.parentNode.replaceChild(newElement.el || newElement, this.el);\n    }\n\n    return this;\n  }\n\n  replaceChild(oldElement, newElement) {\n    this.el.replaceChild(newElement.el || newElement, oldElement.el || oldElement);\n\n    return this;\n  }  \n\n  checked(isChecked = false) {\n    if (arguments.length == 0) {\n      return !!this.el.checked;\n    }\n\n    this.el.checked = !!isChecked;\n\n    return this;\n  }\n\n\n  click () {\n    this.el.click();\n\n    return this; \n  }  \n\n  focus() {\n    this.el.focus();\n\n    return this;\n  }\n\n  select() {\n    // contenteditable 의 경우 selection api 를 사용해서 select() 를 수행한다.\n    if (this.attr('contenteditable') === 'true') {\n      var range = document.createRange();\n      range.selectNodeContents(this.el);\n      var sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n    } else {\n      this.el.select();\n    }\n\n    return this;\n  }\n\n  blur() {\n    this.el.blur();\n\n    return this;\n  }\n\n  // canvas functions\n\n  context(contextType = \"2d\") {\n    if (!this._initContext) {\n      this._initContext = this.el.getContext(contextType);\n    }\n\n    return this._initContext;\n  }\n\n  resize({ width, height }) {\n    // support hi-dpi for retina display\n    this._initContext = null;\n    var ctx = this.context();\n    var scale = window.devicePixelRatio || 1;\n\n    this.px(\"width\", +width);\n    this.px(\"height\", +height);\n\n    this.el.width = width * scale;\n    this.el.height = height * scale;\n\n    ctx.scale(scale, scale);\n  }\n\n  toDataURL (type = 'image/png', quality = 1) {\n    return this.el.toDataURL(type, quality)\n  }\n\n  clear() {\n    this.context().clearRect(0, 0, this.el.width, this.el.height);\n  }\n\n  update(callback) {\n    this.clear();\n    callback.call(this, this);\n  }\n\n  drawImage (img, dx = 0, dy = 0) {\n    var ctx = this.context()\n    var scale = window.devicePixelRatio || 1;    \n    ctx.drawImage(img, dx, dy, img.width, img.height, 0, 0, this.el.width / scale, this.el.height / scale);\n  }\n\n  drawOption(option = {}) {\n    var ctx = this.context();\n    Object.assign(ctx, option);\n  }\n\n  drawLine(x1, y1, x2, y2) {\n    var ctx = this.context();\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  drawPath(...path) {\n    var ctx = this.context();\n\n    ctx.beginPath();\n\n    path.forEach((p, index) => {\n      if (index == 0) {\n        ctx.moveTo(p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    });\n    ctx.stroke();\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  drawCircle(cx, cy, r) {\n    var ctx = this.context();\n    ctx.beginPath();\n    ctx.arc(cx, cy, r, 0, 2 * Math.PI);\n    ctx.stroke();\n    ctx.fill();\n  }\n\n  drawText(x, y, text) {\n    this.context().fillText(text, x, y);\n  }\n}\n","export class BaseHandler {\n    /**\n     * \n     * @param {EventMachine} context \n     * @param {*} options \n     */\n    constructor (context, options = {}) {\n        this.context = context;\n        this.options = options;\n    }\n\n    // 초기화 설정 \n    initialize () {\n\n    }\n\n    // html 을 로드 할 때 \n    load () {\n\n    }\n\n    // 새로고침 할 때 \n    refresh () {\n\n    }\n    \n    // 화면에 그린 이후에 실행 되는 로직들 \n    render () {\n\n    }\n\n    getRef(id) {\n        return this.context.getRef(id);\n    }\n\n    run () {\n\n    }\n\n    destroy() {\n\n    }\n}","\nimport Event, { CHECK_SAPARATOR, DOM_EVENT_SAPARATOR, SAPARATOR, NAME_SAPARATOR, CHECK_DOM_EVENT_PATTERN } from \"../Event\";\nimport { Dom } from \"../functions/Dom\";\nimport { debounce, throttle, isNotUndefined, isFunction, splitMethodByKeyword } from \"../functions/func\";\nimport { BaseHandler } from \"./BaseHandler\";\n\n\nconst scrollBlockingEvents = {\n    'touchstart': true,\n    'touchmove': true,\n    'mousedown': true,\n    'mouseup': true,\n    'mousemove': true,\n    // wheel, mousewheel 은 prevent 를 해야한다. 그래서 scroll blocking 을 막아야 한다. \n    // 'wheel': true,   \n    // 'mousewheel': true\n}\n\nconst eventConverts = {\n  'doubletab': 'touchend'\n}\n\nconst customEventNames = {\n  'doubletab': true \n}\n\nexport class DomEventHandler extends BaseHandler {\n\n\n    initialize() {\n        this.destroy();\n\n        if (!this._domEvents) {\n          this._domEvents = this.context.filterProps(CHECK_DOM_EVENT_PATTERN)\n        }\n\n        this._domEvents.forEach(key => this.parseDomEvent(key));\n    }\n\n    destroy() {\n        this.removeEventAll();\n    }\n\n\n    removeEventAll() {\n        this.getBindings().forEach(obj => {\n          this.removeDomEvent(obj);\n        });\n        this.initBindings();\n    }\n\n    removeDomEvent({ eventName, dom, callback }) {\n        Event.removeDomEvent(dom, eventName, callback);\n    }    \n\n    getBindings() {\n        if (!this._bindings) {\n          this.initBindings();\n        }\n    \n        return this._bindings;\n    }\n\n    addBinding(obj) {\n        this.getBindings().push(obj);\n    }\n\n    initBindings() {\n        this._bindings = [];\n    }    \n\n\n    matchPath (el, selector) {\n        if (el) {\n          if (el.matches(selector)) {\n            return el;\n          }\n          return this.matchPath(el.parentElement, selector);\n        }\n        return null;\n    }\n      \n    hasDelegate (e, eventObject) {\n        return this.matchPath(e.target || e.srcElement, eventObject.delegate);\n    }\n      \n    makeCallback (eventObject, callback) {\n      if (eventObject.delegate) {\n        return this.makeDelegateCallback(eventObject, callback);\n      } else {\n        return this.makeDefaultCallback(eventObject, callback);\n      }\n    }\n      \n    makeDefaultCallback (eventObject, callback) {\n        return e => {\n          var returnValue = this.runEventCallback(e, eventObject, callback);\n          if (isNotUndefined(returnValue)) {\n            return returnValue;\n          }\n        };\n    }\n      \n    makeDelegateCallback (eventObject, callback) {\n        return e => {\n          const delegateTarget = this.hasDelegate(e, eventObject);\n      \n          if (delegateTarget) {\n            // delegate target 이 있는 경우만 callback 실행\n            e.$dt = Dom.create(delegateTarget);      \n      \n            var returnValue = this.runEventCallback(e, eventObject, callback);\n            if (isNotUndefined(returnValue)) {\n              return returnValue;\n            }\n          }\n        };\n    }\n      \n    runEventCallback (e, eventObject, callback) {\n        const context = this.context;\n        e.xy = Event.posXY(e);\n      \n        if (eventObject.beforeMethods.length) {\n          eventObject.beforeMethods.every(before => {\n            return context[before.target].call(context, e, before.param);\n          });\n        }\n      \n        if (this.checkEventType(e, eventObject)) {\n          var returnValue = callback(e, e.$dt, e.xy); \n      \n          if (returnValue !== false && eventObject.afterMethods.length) {\n            eventObject.afterMethods.forEach(after => {\n              return context[after.target].call(context, e, after.param)\n            });\n          }\n      \n          return returnValue;\n        }\n    }\n      \n    checkEventType (e, eventObject) {\n        const context = this.context;\n        // 특정 keycode 를 가지고 있는지 체크\n        var hasKeyCode = true;\n        if (eventObject.codes.length) {\n          hasKeyCode =\n            (e.code ? eventObject.codes.indexOf(e.code.toLowerCase()) > -1 : false) ||\n            (e.key ? eventObject.codes.indexOf(e.key.toLowerCase()) > -1 : false);\n        }\n      \n        // 체크 메소드들은 모든 메소드를 다 적용해야한다.\n        var isAllCheck = true;\n        if (eventObject.checkMethodList.length) {\n          isAllCheck = eventObject.checkMethodList.every(field => {\n            var fieldValue = context[field];    \n            if (isFunction(fieldValue) && fieldValue) {\n              // check method\n              return fieldValue.call(context, e);\n            } else if (isNotUndefined(fieldValue)) {\n      \n              // check field value\n              return !!fieldValue;\n            }\n            return true;\n          });\n        }\n      \n        return hasKeyCode && isAllCheck;\n    }\n      \n    getDefaultDomElement(dom) {\n        const context = this.context;\n        let el;\n      \n        if (dom) {\n          el = context.refs[dom] || context[dom] || window[dom];\n        } else {\n          el = context.el || context.$el || context.$root;\n        }\n      \n        if (el instanceof Dom) {\n          return el.getElement();\n        }\n      \n        return el;\n    };\n      \n    getRealEventName (eventName) {\n      return eventConverts[eventName] || eventName;\n    }\n\n    getCustomEventName (eventName) {\n      return customEventNames[eventName] ? eventName:  '';\n    }\n\n    /**\n     * \n     * doubletab -> touchend 로 바뀜 \n     * \n     * @param {string} eventName  이벤트 이름 \n     * @param {array} checkMethodFilters 매직 필터 목록  \n     */\n    getDefaultEventObject (eventName, checkMethodFilters) {\n        const context = this.context;\n        let arr = checkMethodFilters;\n      \n        // context 에 속한 변수나 메소드 리스트 체크\n        const checkMethodList = arr.filter(code => !!context[code]);\n      \n        // 이벤트 정의 시점에 적용 되어야 하는 것들은 모두 method() 화 해서 정의한다.\n        const [afters, afterMethods] = splitMethodByKeyword(arr, \"after\");\n        const [befores, beforeMethods] = splitMethodByKeyword(arr, \"before\");\n        const [debounces, debounceMethods] = splitMethodByKeyword(arr, \"debounce\");\n        const [delays, delayMethods] = splitMethodByKeyword(arr, \"delay\");        \n        const [throttles, throttleMethods] = splitMethodByKeyword(arr, \"throttle\");\n        const [captures] = splitMethodByKeyword(arr, \"capture\");\n      \n        // 위의 5개 필터 이외에 있는 코드들은 keycode 로 인식한다.\n        const filteredList = [\n          ...checkMethodList,\n          ...afters,\n          ...befores,\n          ...delays,\n          ...debounces,\n          ...throttles,\n          ...captures\n        ];\n      \n        var codes = arr\n          .filter(code => filteredList.indexOf(code) === -1)\n          .map(code => code.toLowerCase());\n      \n        return {\n          eventName: this.getRealEventName(eventName),\n          customEventName: this.getCustomEventName(eventName), \n          codes,\n          captures,\n          afterMethods,\n          beforeMethods,\n          delayMethods,\n          debounceMethods,\n          throttleMethods,\n          checkMethodList\n        };\n    }\n      \n      \n    addDomEvent (eventObject, callback) {\n        eventObject.callback = this.makeCallback(eventObject, callback);\n        this.addBinding(eventObject);\n      \n        var options = !!eventObject.captures.length\n      \n        if (scrollBlockingEvents[eventObject.eventName]) {\n          options = {\n            passive: true,\n            capture: options  \n          }\n        }\n      \n        Event.addDomEvent(\n          eventObject.dom,\n          eventObject.eventName,\n          eventObject.callback,\n          options\n        );\n    }\n\n    makeCustomEventCallback (eventObject, callback) {\n\n      if (eventObject.customEventName === 'doubletab') {\n        var delay = 300;\n        \n        if (eventObject.delayMethods.length) {\n          delay = +eventObject.delayMethods[0].target;\n        }\n        return (...args) => {\n\n          if (!this.doubleTab) {\n            this.doubleTab = {\n                time: performance.now(),\n            }\n          } else {\n            if (performance.now() - this.doubleTab.time < delay) {\n              callback(...args);\n            }\n\n            this.doubleTab = null;\n          }\n        }\n\n      } \n\n      return callback; \n    }\n      \n    bindingDomEvent ( [eventName, dom, ...delegate], checkMethodFilters, callback ) {\n        let eventObject = this.getDefaultEventObject(eventName, checkMethodFilters);\n      \n        eventObject.dom = this.getDefaultDomElement(dom);\n        eventObject.delegate = delegate.join(SAPARATOR);\n\n        \n        if (eventObject.debounceMethods.length) {\n          var debounceTime = +eventObject.debounceMethods[0].target;\n          callback = debounce(callback, debounceTime);\n        } else if (eventObject.throttleMethods.length) {\n          var throttleTime = +eventObject.throttleMethods[0].target;\n          callback = throttle(callback, throttleTime);\n        }\n\n        // custom event callback 만들기 \n        callback = this.makeCustomEventCallback(eventObject, callback)\n      \n        this.addDomEvent(eventObject, callback);\n    };\n      \n    getEventNames (eventName) {\n        let results = [];\n        \n        eventName.split(NAME_SAPARATOR).forEach(e => {\n            var arr = e.split(NAME_SAPARATOR);\n        \n            results.push.apply(results, arr);\n        });\n        \n        return results;\n    }\n    \n    /**\n     * 이벤트 문자열 파싱하기 \n     * \n     * @param {string} key \n     */\n    parseDomEvent (key) {\n        const context = this.context;\n        let checkMethodFilters = key.split(CHECK_SAPARATOR).map(it => it.trim()).filter(Boolean);\n        \n        var prefix = checkMethodFilters.shift()\n        var eventSelectorAndBehave = prefix.split(DOM_EVENT_SAPARATOR)[1];\n        \n        var arr = eventSelectorAndBehave.split(SAPARATOR);\n        var eventNames = this.getEventNames(arr[0]);\n\n        var callback = context[key].bind(context);\n        \n        for(let i = 0, len = eventNames.length; i< len; i++) {\n          arr[0] = eventNames[i];\n          this.bindingDomEvent(arr, checkMethodFilters, callback);\n        }\n    }  \n}","\nimport { isObject } from \"../functions/func\";\nimport { CHECK_BIND_PATTERN, BIND_CHECK_FUNCTION, CHECK_SAPARATOR, BIND_CHECK_DEFAULT_FUNCTION, BIND_SAPARATOR } from \"../Event\";\nimport { Dom } from \"../functions/Dom\";\nimport { BaseHandler } from \"./BaseHandler\";\n\n/**\n * \n * @param {Dom} $element \n * @param {string} key \n * @param {any} value \n */\nconst applyElementAttribute = ($element, key, value) => {\n\n  if (key === 'cssText') {\n    /**\n     * cssText: 'position:absolute'\n     */\n    $element.cssText(value);\n    return; \n  } else if (key === \"style\") {\n    /**\n     * style: { key: value }\n     */\n    if (typeof(value) !== 'string') {\n      $element.css(value);\n    }\n\n    return;\n  } else if (key === \"class\") {\n    //  \"class\" : [ 'className', 'className' ] \n    //  \"class\" : { key: true, key: false } \n    //  \"class\" : 'string-class' \n\n    if (Array.isArray(value)) {\n      $element.addClass(...value.filter(Boolean));\n    } else if (isObject(value)) {\n      const keys = Object.keys(value);\n      for(var i = 0, len = keys.length; i < len; i++) {\n        const className = keys[i];\n        const hasClass = value[className];\n\n        $element.toggleClass(className, hasClass);\n      }\n    } else {\n      $element.el.className  = value;\n    }\n\n    return;\n  } else if (key === 'callback') {\n    if (typeof value === 'function') {\n      value ();\n      return; \n    }\n  }\n\n  if (typeof value === 'undefined') {\n    $element.removeAttr(key);\n  } else {\n    if ($element.el.nodeName === \"TEXTAREA\" && key === \"value\") {\n      $element.text(value);\n    } else if (key === 'text' || key === 'textContent') {\n      $element.text(value);\n    } else if (key === 'innerHTML' || key === 'html') {\n      $element.html(value);\n    } else if (key === 'htmlDiff') {\n      $element.updateDiff(value);\n    } else if (key === 'svgDiff') {\n      $element.updateSVGDiff(value);\n    } else if (key === 'value') {\n      $element.val(value);\n    } else {\n      $element.attr(key, value);\n    }\n  }\n};\n\nexport class BindHandler extends BaseHandler {\n\n    load (...args) {\n      this.bindData(...args);\n    }\n\n    // 어떻게 실행하는게 좋을까? \n    // this.runHandle('bind', ...);\n    bindData (...args) {\n      if (!this._bindMethods) {\n        this._bindMethods = this.context.filterProps(CHECK_BIND_PATTERN);\n      }\n      /**\n       * BIND 를 해보자.\n       * 이시점에 하는게 맞는지는 모르겠지만 일단은 해보자.\n       * BIND 는 특정 element 에 html 이 아닌 데이타를 업데이트하기 위한 간단한 로직이다.\n       */\n      const bindList = this._bindMethods\n        .filter(originalCallbackName => {\n          if (!args.length) return true; \n          var [callbackName, id] = originalCallbackName.split(CHECK_SAPARATOR);        \n  \n          var [_, $bind] = callbackName.split(' ')\n  \n          return args.indexOf($bind) >  -1 \n        })\n\n        bindList.forEach(async (callbackName) => {\n          const bindMethod = this.context[callbackName];\n          var [callbackName, id] = callbackName.split(CHECK_SAPARATOR);\n  \n          const refObject = this.getRef(id);\n          let refCallback = BIND_CHECK_DEFAULT_FUNCTION;\n  \n          if (refObject != '' && typeof(refObject) === 'string') {\n            refCallback = BIND_CHECK_FUNCTION(refObject);\n          } else if (typeof refObject === 'function') {\n            refCallback = refObject;\n          }\n  \n          const elName = callbackName.split(BIND_SAPARATOR)[1];\n          let $element = this.context.refs[elName];\n  \n          // isBindCheck 는 binding 하기 전에 변화된 지점을 찾아서 업데이트를 제한한다.\n          const isBindCheck = typeof(refCallback) === 'function' && refCallback.call(this.context);\n          if ($element && isBindCheck) {\n            const results = await bindMethod.call(this.context, ...args);\n\n            if (!results) return;\n  \n            const keys = Object.keys(results);\n            for(var elementKeyIndex = 0, len = keys.length; elementKeyIndex < len; elementKeyIndex++) {\n              const key = keys[elementKeyIndex];\n              const value = results[key];\n\n              applyElementAttribute($element, key, value);\n            }\n          }\n        });\n    }    \n\n    destroy() {\n      this._bindMethods = undefined\n    }\n\n\n}","const map = new Map();\n\n/**\n * Element 등록\n * \n * @param {object} classes 클래스명 리스트 \n */ \nexport function registElement(classes = {}) {\n\n    Object.keys(classes).forEach(key => {\n        if (map.has(key)) {\n            // console.warn(`${key} element is duplicated.`)\n            return;\n        } \n\n        map.set(key, classes[key]);\n    })\n}\n\nexport function retriveElement(className) {\n    return map.get(className);\n}","\nconst UUID_REG = /[xy]/g\n\nexport function uuid() {\n    var dt = new Date().getTime();\n    var uuid = 'xxx12-xx-34xx'.replace(UUID_REG, function (c) {\n        var r = (dt + Math.random() * 16) % 16 | 0;\n        dt = Math.floor(dt / 16);\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n    return uuid;\n}\n\nexport function uuidShort() {\n    var dt = new Date().getTime();\n    var uuid = 'idxxxxxxx'.replace(UUID_REG, function (c) {\n        var r = (dt + Math.random() * 16) % 16 | 0;\n        dt = Math.floor(dt / 16);\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n    return uuid;\n}\n","import {\n  CHECK_SAPARATOR,\n  CHECK_LOAD_PATTERN,\n  LOAD_SAPARATOR,\n  DOMDIFF,\n  getRef,\n  MAGIC_METHOD,\n} from \"./Event\";\n\nimport {\n  isFunction,\n  // Array.isArray,\n  html,\n  keyEach,\n  collectProps,\n  isString\n} from \"./functions/func\";\n\nimport {DomEventHandler} from \"./handler/DomEventHandler\";\nimport {BindHandler} from \"./handler/BindHandler\";\nimport { retriveElement } from \"./functions/registElement\";\nimport { uuid, uuidShort } from \"./functions/uuid\";\nimport { Dom } from \"./functions/Dom\";\n\n\nconst REFERENCE_PROPERTY = \"ref\";\nconst TEMP_DIV = Dom.create(\"div\");\nconst QUERY_PROPERTY = `[${REFERENCE_PROPERTY}]`;\nconst REF_CLASS = 'refclass';\nconst REF_CLASS_PROPERTY = `[${REF_CLASS}]`\nconst VARIABLE_SAPARATOR = \"__ref__variable:\";\n\n\nexport class EventMachine {\n  constructor(opt, props) {\n    this.state = {};\n    this.prevState = {};\n    this.refs = {};\n    this.children = {};\n    this._bindings = [];\n    this.id = uuid();    \n    this.__tempVariables = new Map();\n    this.handlers = this.initializeHandler()\n\n    this.initializeProperty(opt, props);\n\n    this.initComponents();\n  }\n\n\n  /**\n   * UIElement instance 에 필요한 기본 속성 설정 \n   */\n  initializeProperty (opt, props = {}) {\n\n    this.opt = opt || {};\n    this.parent = this.opt;\n    this.props = props;\n    this.source = uuid();\n    this.sourceName = this.constructor.name;  \n\n\n\n  }\n\n  initComponents() {\n    this.childComponents = this.components() \n  }\n\n  initializeHandler () {\n    return [\n      new BindHandler(this),\n      new DomEventHandler(this)\n    ]\n  }\n\n  /**\n   * state 를 초기화 한것을 리턴한다. \n   * \n   * @protected\n   * @returns {Object} \n   */\n  initState() {\n    return {};\n  }\n\n  /**\n   * state 를 변경한다. \n   * \n   * @param {Object} state  새로운 state \n   * @param {Boolean} isLoad  다시 로드 할 것인지 체크 , true 면 state 변경후 다시 로드 \n   */\n  setState(state = {}, isLoad = true) {\n    this.prevState = this.state;\n    this.state = Object.assign({}, this.state, state );\n    if (isLoad) {\n      this.load();\n    }\n  }\n\n  /**\n   * state 에 있는 key 필드의 값을 토글한다. \n   * Boolean 형태의 값만 동작한다. \n   * \n   * @param {string} key \n   * @param {Boolean} isLoad \n   */\n  toggleState(key, isLoad = true) {\n    this.setState({\n      [key]: !(this.state[key])\n    }, isLoad)\n  }\n\n  /**\n   * props 를 넘길 때 해당 참조를 그대로 넘기기 위한 함수 \n   * \n   * @param {any} value\n   * @returns {string} 참조 id 생성 \n   */ \n  variable(value) {\n    const id = `${VARIABLE_SAPARATOR}${uuidShort()}`;\n\n    this.__tempVariables.set(id, value);\n\n    return id;\n  }\n\n  /**\n   * 참조 id 를 가지고 있는 variable 을 복구한다. \n   * \n   * @param {string} id\n   * @returns {any}\n   */ \n  recoverVariable(id) {\n    if (isString(id) === false) {\n      return id;\n    }\n\n    let value = id;\n\n    if (this.__tempVariables.has(id)) {\n      value = this.__tempVariables.get(id);\n\n      this.__tempVariables.delete(id);\n    }\n\n    return value;\n  }\n\n  /**\n   * 객체를 다시 그릴 때 사용한다. \n   * \n   * @param {*} props \n   * @protected\n   */\n  _reload(props) {\n    this.props = props;\n    this.state = {}; \n    this.setState(this.initState(), false);\n    this.refresh(true);\n  }\n\n  /**\n   * template 을 렌더링 한다. \n   * \n   * @param {Dom|undefined} $container  컴포넌트가 그려질 대상 \n   */\n  render($container) {\n    this.$el = this.parseTemplate(\n      html`\n        ${this.template()}\n      `\n    );\n    this.refs.$el = this.$el;\n\n    if ($container) {\n      $container.append(this.$el);\n    }\n\n    // LOAD 로 정의된 것들을 수행한다. \n    this.load();\n\n    // render 이후에 실행될 콜백을 정의한다. \n    this.afterRender();\n  }\n\n  initialize() {\n    this.state = this.initState();\n  }\n\n  /**\n   * render 이후에 실행될 함수 \n   * dom 이 실제로 생성된 이후에 수행할 작업들을 정의한다. \n   * \n   * @protected\n   */\n  afterRender() {}\n\n  /**\n   * 하위에 연결될 객체들을 정의한다 \n   * \n   * @protected\n   * @returns {Object}\n   */\n  components() {\n    return {};\n  }\n\n  /**\n   * ref 이름을 가진 Component 를 가지고 온다. \n   * \n   * @param  {any[]} args \n   * @returns {EventMachine}\n   */\n  getRef(...args) {\n    const key = args.join('')\n    return this.refs[key];\n  }\n\n  /**\n   * template() 함수의 결과물을 파싱해서 dom element 를 생성한다. \n   * \n   * @param {string} html \n   * @param {Boolean} [isLoad=false] \n   */\n  parseTemplate(html, isLoad) {\n    //FIXME: html string, element 형태 모두 array 로 받을 수 있도록 해보자. \n    if (Array.isArray(html)) {\n      html = html.join('');\n    }\n\n    html = html.trim();\n    const list = TEMP_DIV.html(html).children();\n    /////////////////////////////////\n\n    for(var i = 0, len = list.length; i < len; i++) {\n      const $el = list[i];\n\n      var ref = $el.attr(REFERENCE_PROPERTY)\n      if (ref) {\n        this.refs[ref] = $el;\n      }\n\n      var refs = $el.$$(QUERY_PROPERTY);\n      var temp = {} \n\n      for(var refsIndex = 0, refsLen = refs.length; refsIndex < refsLen; refsIndex++) {\n        const $dom = refs[refsIndex];\n\n        const name = $dom.attr(REFERENCE_PROPERTY);\n        if (temp[name]) {\n          console.warn(`${ref} is duplicated. - ${this.sourceName}`, this)\n        } else {\n          temp[name] = true; \n        }\n\n        this.refs[name] = $dom;             \n      }\n    }\n\n    if (!isLoad && list.length) {\n      return list[0];\n    }\n\n    return Dom.create(TEMP_DIV.createChildrenFragment());\n  }\n\n  parseProperty ($dom) {\n    let props = {};\n\n    // parse properties \n    for(var t of $dom.el.attributes) {\n      props[t.nodeName] = this.recoverVariable(t.nodeValue);\n    }\n\n    if (props['props']) {\n      props = {\n        ...props,\n        ...getRef(props['props'])\n      }\n    }\n\n    $dom.$$('property').forEach($p => {\n      const [name, value, valueType] = $p.attrs('name', 'value', 'valueType')\n\n      let realValue = value || $p.text();\n\n      if (valueType === 'json') {          \n        realValue = JSON.parse(realValue);\n      }\n    \n      props[name] = realValue; \n    })\n\n    return props;\n  }\n\n  parseSourceName(obj) {\n\n    if (obj.parent) {\n      return [obj.sourceName, ...this.parseSourceName(obj.parent)]\n    }\n\n    return [obj.sourceName]\n  }\n\n  getEventMachineComponent (refClassName) {\n    var EventMachineComponent = retriveElement(refClassName) || this.childComponents[refClassName];\n\n    return EventMachineComponent;\n  }\n\n  parseComponent() {\n    const $el = this.$el;\n\n    let targets = $el.$$(REF_CLASS_PROPERTY);\n\n    targets.forEach($dom => {\n\n      const EventMachineComponent = this.getEventMachineComponent($dom.attr(REF_CLASS))\n\n      if (EventMachineComponent) {\n        let props = this.parseProperty($dom);\n  \n        // create component \n        let refName = $dom.attr(REFERENCE_PROPERTY);\n        var instance = null; \n  \n        // 동일한 refName 의 EventMachine 이 존재하면  해당 컴포넌트는 다시 그려진다. \n        // 루트 element 는 변경되지 않는다. \n        if (this.children[refName]) {\n          instance = this.children[refName] \n          instance._reload(props);\n        } else {\n          // 기존의 refName 이 존재하지 않으면 Component 를 생성해서 element 를 교체한다. \n          instance = new EventMachineComponent(this, props);\n  \n          this.children[refName || instance.id] = instance;\n  \n          instance.render();\n        }\n        \n\n        if (instance.renderTarget) {\n          instance.$el?.appendTo(instance.renderTarget);\n          $dom.remove();\n        } else {\n          $dom.replace(instance.$el);     \n        }\n\n      } else {\n        $dom.remove();\n      }\n \n  \n    })\n\n    keyEach(this.children, (key, obj) => {\n      if (obj && obj.clean()) {\n        delete this.children[key]\n      }\n    })\n  }\n\n  clean () {\n    if (this.$el && !this.$el.hasParent()) {\n\n      keyEach(this.children, (key, child) => {\n        child.clean();\n      })\n\n      this.destroy();  \n\n      this.$el = null;\n      return true; \n    }\n  }\n\n  /**\n   * refresh 는 load 함수들을 실행한다. \n   */\n  refresh() {\n    this.load()\n  }\n\n  _afterLoad () {\n\n    this.runHandlers('initialize');\n\n    this.bindData();\n\n    this.parseComponent();\n  }\n\n  async load(...args) {\n    if (!this._loadMethods) {\n      this._loadMethods = this.filterProps(CHECK_LOAD_PATTERN);\n    }\n\n    // loop 가 비동기라 await 로 대기를 시켜줘야 나머지 html 업데이트에 대한 순서를 맞출 수 있다. \n    const localLoadMethods = this._loadMethods.filter(callbackName => {\n        const elName = callbackName.split(LOAD_SAPARATOR)[1]\n                                  .split(CHECK_SAPARATOR)\n                                  .map(it => it.trim())[0];\n        if (!args.length) return true; \n        return args.indexOf(elName) > -1\n      })\n\n\n\n    await localLoadMethods.forEach(async (callbackName) => {\n      let methodName = callbackName.split(LOAD_SAPARATOR)[1];\n      var [elName, ...checker] = methodName.split(CHECK_SAPARATOR).map(it => it.trim())\n\n      checker = checker.map(it => it.trim())\n      \n      const isDomDiff = Boolean(checker.filter(it => DOMDIFF.includes(it)).length);\n\n      if (this.refs[elName]) {        \n        var newTemplate = await this[callbackName].call(this, ...args);\n\n        if (Array.isArray(newTemplate)) {\n          newTemplate = newTemplate.join('');\n        }\n\n        // create fragment \n        const fragment = this.parseTemplate(html`${newTemplate}`, true);\n        if (isDomDiff) {\n          this.refs[elName].htmlDiff(fragment);\n        } else {\n          this.refs[elName].html(fragment);\n        }\n\n      }\n    });\n\n    this._afterLoad();\n\n  }\n\n  runHandlers(func = 'run', ...args) {\n    this.handlers.forEach(h => h[func](...args));\n  }\n\n  bindData (...args) {\n    this.runHandlers('load', ...args);\n  }\n\n  /**\n   * 템플릿 지정 \n   * \n   * 템플릿을 null 로 지정하면 자동으로 DocumentFragment 을 생성한다.\n   * 화면에는 보이지 않지만 document, window 처럼 다른 영역의 이벤트로 정의하거나 subscribe 형태로 가져올 수 있다.\n   * \n   */ \n  template() {\n    return null;\n  }\n\n  eachChildren(callback) {\n    if (!isFunction(callback)) return;\n\n    keyEach(this.children, (_, Component) => {\n      callback(Component);\n    });\n  }\n\n  rerender () {\n    var $parent = this.$el.parent();\n    this.destroy();\n    this.render($parent);  \n  }\n\n  /**\n   * 자원을 해제한다.\n   * 이것도 역시 자식 컴포넌트까지 제어하기 때문에 가장 최상위 부모에서 한번만 호출되도 된다.\n   * \n   */\n  destroy() {\n    this.eachChildren(childComponent => {\n      childComponent.destroy();\n    });\n\n    this.runHandlers('destroy');\n    if (this.$el) {\n      this.$el.remove();\n    }\n\n    this.$el = null; \n    this.refs = {} \n    this.children = {} \n  }\n\n  /**\n   * property 수집하기\n   * 상위 클래스의 모든 property 를 수집해서 리턴한다.\n   * \n   * @returns {string[]} 나의 상위 모든 메소드를 수집해서 리턴한다. \n   */\n  collectProps() {\n\n    if (!this.__cachedMethodList){\n      this.__cachedMethodList = collectProps(this, (name) => {\n        return name.indexOf(MAGIC_METHOD) === 0; \n      });\n    }\n\n    return this.__cachedMethodList;\n  }\n\n  filterProps(pattern) {\n    return this.collectProps().filter(key => {\n      return key.match(pattern);\n    });\n  }\n\n  /* magic check method  */\n\n  self(e) {\n    return e && e.$dt && e.$dt.is(e.target);\n  }\n  isAltKey(e) {\n    return e.altKey;\n  }\n  isCtrlKey(e) {\n    return e.ctrlKey;\n  }\n  isShiftKey(e) {\n    return e.shiftKey;\n  }\n  isMetaKey(e) {\n    return e.metaKey || e.key == 'Meta' || e.code.indexOf('Meta') > -1 ;\n  }\n  isMouseLeftButton(e) {\n    return e.buttons === 1;     // 1 is left button \n  }\n\n  isMouseRightButton(e) {\n    return e.buttons === 2;     // 2 is right button \n  }  \n\n  hasMouse(e) { \n    return e.pointerType === 'mouse';\n  }\n\n  hasTouch(e) {\n    return e.pointerType === 'touch';\n  }\n\n  hasPen(e) {\n    return e.pointerType === 'pen';\n  }  \n\n  /** before check method */\n\n  /* after check method */\n\n  preventDefault(e) {\n    e.preventDefault();\n    return true;\n  }\n\n  stopPropagation(e) {\n    e.stopPropagation();\n    return true;\n  }\n}\n","import { EventMachine } from \"./EventMachine\";\nimport { debounce, ifCheck, isFunction, throttle } from \"./functions/func\";\n \n/**\n * @class BaseStore\n * @description BaseStore is the base class for all stores.\n * \n */ \nexport class BaseStore {\n  constructor(editor) {\n    this.cachedCallback = {};\n    this.callbacks = {};\n    this.commandes = [];\n    this.editor = editor;\n  }\n\n  getCallbacks(event) {\n    if (!this.callbacks[event]) {\n      this.callbacks[event] = []\n    }\n\n    return this.callbacks[event]\n  }\n\n  setCallbacks(event, list = []) {\n    this.callbacks[event] = list; \n  }\n\n  debug (...args) {\n    if (this.editor && this.editor.config.get('debug')) {\n      console.debug(...args );\n    }\n\n  }\n\n  /**\n   * 메세지 등록 \n   * \n   * @param {string} event \n   * @param {Function} originalCallback \n   * @param {EventMachine} context \n   * @param {number} debounceDelay \n   * @param {number} throttleDelay \n   * @param {boolean} enableAllTrigger\n   * @param {boolean} enableSelfTrigger\n   * @param {string[]} [beforeMethods=[]]\n   * @returns {Function} off callback \n   */\n  on(event, originalCallback, context, debounceDelay = 0, throttleDelay = 0, enableAllTrigger = false, enableSelfTrigger = false, beforeMethods = []) {\n    var callback = originalCallback;\n    \n    if (debounceDelay > 0)  callback = debounce(originalCallback, debounceDelay);\n    else if (throttleDelay > 0)  callback = throttle(originalCallback, throttleDelay);\n\n    if (beforeMethods.length) {\n      callback = ifCheck(callback, context, beforeMethods);\n    }\n\n    this.getCallbacks(event).push({ event, callback, context, originalCallback, enableAllTrigger, enableSelfTrigger });\n\n    this.debug('add message event', event, context.sourceName );\n\n    return () => {\n      this.off(event, originalCallback);\n    }\n  }\n\n  /**\n   * 메세지 해제\n   * \n   * @param {string} event \n   * @param {*} originalCallback \n   */\n  off(event, originalCallback) {\n\n    this.debug('off message event', event );\n\n    if (arguments.length == 1) {\n      this.setCallbacks(event);\n    } else if (arguments.length == 2) {      \n      this.setCallbacks(event, this.getCallbacks(event).filter(f => {\n        return f.originalCallback !== originalCallback\n      }));\n    }\n  }\n\n  offAll (context) {\n\n    Object.keys(this.callbacks).forEach(event => {\n      this.setCallbacks(event, this.getCallbacks(event).filter(f => {\n        return f.context !== context;  \n      }))\n    })\n    this.debug('off all message', context.sourceName );\n  }\n\n  getCachedCallbacks (event) {\n    return this.getCallbacks(event);\n  }\n\n  sendMessage(source, event, ...args) {\n    Promise.resolve().then(() => {\n      var list = this.getCachedCallbacks(event);\n      if (list) {\n\n        for(var i = 0, len = list.length; i < len; i++) {\n          const f = list[i];\n          // console.log(source);\n          if (f.enableSelfTrigger) continue;\n\n          if (f.enableAllTrigger || f.originalCallback.source !== source) {\n            f.callback.apply(f.context, args)  \n          }\n        }\n      }\n\n    });\n  }\n\n  nextSendMessage(source, callback, ...args) {\n    Promise.resolve().then(() => {\n      callback(...args)\n    });\n  }\n\n  triggerMessage(source, event, ...args) {\n    Promise.resolve().then(() => {\n      var list = this.getCachedCallbacks(event);\n\n      if (list) {\n        for(var i = 0, len = list.length; i < len; i++) {\n          const f = list[i];\n          if (f.originalCallback.source === source) {\n            f.callback.apply(f.context, args)  \n          }\n        }\n      } else {\n        console.warn(event, ' is not valid event');\n      }\n\n\n    });\n  }\n\n  emit(event, ...args) {\n\n    if (isFunction(event)) {\n      event(...args);\n    } else {\n      this.sendMessage(this.source, event, ...args);\n    }\n\n  }\n\n  /**\n   * 마이크로 Task 를 실행 \n   * \n   * @param {Function} callback  마이크로Task 형식으로 실행될 함수 \n   */\n  nextTick (callback) {\n    this.nextSendMessage(this.source, callback);\n  }\n\n  trigger(event, ...args) {\n\n    if (isFunction(event)) {\n      event(...args);\n    } else {\n      this.triggerMessage(this.source, event, ...args);\n    }\n\n  }\n}\n","import { BaseStore } from \"./BaseStore\";\nimport { Dom } from \"./functions/Dom\";\n\n\n/**\n * UIElement 렌더링 하기 \n * \n * @param {UIElement} ElementClass\n * @param {Object} opt \n * @param {string|HTMLElement} opt.container  렌더링 될 객체 \n * @returns {UIElement}\n */ \nexport const start = (ElementClass, opt = {}) => {\n\n  const $container = Dom.create(opt.container || document.body);\n\n  const app = new ElementClass(opt, {\n    ...opt,\n    store: opt.store || new BaseStore()\n  });\n\n  app.render($container);\n\n  return app; \n};","import { CHECK_SAPARATOR, CHECK_SUBSCRIBE_PATTERN, SUBSCRIBE_SAPARATOR } from \"./Event\";\nimport { EventMachine } from \"./EventMachine\";\nimport { isFunction, splitMethodByKeyword } from \"./functions/func\";\nimport { uuidShort } from \"./functions/uuid\";\n\n/**\n * UI 를 만드는 기본 단위 \n * \n * dom handler, \n * bind handler, \n * store handler 를 가진다. \n * \n * @property {Editor} $editor \n */\nexport class UIElement extends EventMachine {\n  constructor(opt, props = {}) {\n    super(opt, props);\n\n    this.__UID = new Set();\n    if (props.store) {\n      this.__storeInstance = props.store;\n    }\n\n    this.created();\n\n    this.initialize();\n\n    this.initializeStoreEvent();\n\n  }\n\n  setStore (storeInstance) {\n    this.__storeInstance = storeInstance;\n  }\n\n  /**\n   * 메세징 루트를 재정의 할 수 있음. \n   * \n   * @override\n   */\n  get $store() {\n    return this.__storeInstance || this.parent.$store;\n  }  \n\n  /**\n   * UIElement 가 생성될 때 호출되는 메소드 \n   * @protected\n   */\n  created() {}\n\n  getRealEventName(e, s = MULTI_PREFIX) {\n    var startIndex = e.indexOf(s);\n    return e.substr(startIndex < 0 ? 0 : startIndex + s.length);\n  }\n\n  splitMethod (arr, keyword, defaultValue = 0) {\n    var [methods, params] = splitMethodByKeyword(arr, keyword);\n\n    return [\n      methods.length ? +params[0].target : defaultValue,\n      methods, \n      params\n    ]\n  }\n\n  createLocalCallback(event, callback) {\n    var newCallback = callback.bind(this);\n    newCallback.displayName = `${this.sourceName}.${event}`;\n    newCallback.source = this.source;\n\n    return newCallback;\n  }\n\n  /**\n   * initialize store event\n   *\n   * you can define '@xxx' method(event) in UIElement\n   *\n   * Store Event 를 초기화 한다. \n   *\n   */\n  initializeStoreEvent() {\n    this.filterProps(CHECK_SUBSCRIBE_PATTERN).forEach(key => {\n      const events = this.getRealEventName(key, SUBSCRIBE_SAPARATOR);\n      // context 에 속한 변수나 메소드 리스트 체크\n      const [method, ...methodLine] = events.split(CHECK_SAPARATOR);\n      const checkMethodList = methodLine.map(it => it.trim()).filter(code => this[code]).map(target => ({target}));\n\n      // support deboounce for store event    \n      const [debounceSecond, debounceMethods] = this.splitMethod(methodLine, 'debounce');\n      const [throttleSecond, throttleMethods] = this.splitMethod(methodLine, 'throttle');      \n      const [allTrigger, allTriggerMethods] = this.splitMethod(methodLine, 'allTrigger');   \n      const [selfTrigger, selfTriggerMethods] = this.splitMethod(methodLine, 'selfTrigger');            \n\n      events\n        .split(CHECK_SAPARATOR)\n        .filter(it => {\n          return (\n              checkMethodList.indexOf(it) === -1 &&             \n              debounceMethods.indexOf(it) === -1 && \n              allTriggerMethods.indexOf(it) === -1 &&               \n              selfTriggerMethods.indexOf(it) === -1 &&                             \n              throttleMethods.indexOf(it) === -1\n          )\n        })\n        .map(it => it.trim())\n        .filter(Boolean)\n        .forEach(e => {\n\n          if (isFunction(this[key])) {\n            var callback = this.createLocalCallback(e, this[key] )\n            this.$store.on(e, callback, this, debounceSecond, throttleSecond, allTriggerMethods.length, selfTriggerMethods.length, checkMethodList);\n          }\n\n      });\n    });\n  }\n\n  /**\n   * 현재 UIElement 와 연결된 모든 메세지를 해제한다. \n   */\n  destoryStoreSUBSCRIBE() {\n    this.$store.offAll(this);\n  }\n\n  destroy () {\n    super.destroy()\n\n    this.destoryStoreSUBSCRIBE();\n  }\n\n  /**\n   * UIElement 를 다시 그린다. \n   * \n   * template 정의 부터  메세지 이벤트 정의까지 모두 다시 한다. \n   */\n  rerender() {\n    super.rerender();\n\n    this.initialize();\n\n    this.initializeStoreEvent();\n  }\n\n\n  /**\n   * UIElement 기반으로 메세지를 호출 한다. \n   * 나 이외의 객체들에게 메세지를 전달한다. \n   * \n   * @param {string} messageName\n   * @param {any[]} args \n   */\n  emit(messageName, ...args) {\n    this.$store.source = this.source;\n    this.$store.sourceContext = this; \n    this.$store.emit(messageName, ...args);\n  }\n\n  /**\n   * MicroTask 를 수행한다. \n   * \n   * @param {Function} callback \n   */\n  nextTick (callback) {\n    this.$store.nextTick(callback);\n  }\n\n  /**\n   * \n   * UIElement 자신의 메세지를 수행한다. \n   * emit 은 나외의 객체에게 메세지를 보내고 \n   * \n   * @param {string} messageName \n   * @param {any[]} args \n   */\n  trigger(messageName, ...args) {\n    this.$store.source = this.source;\n    this.$store.trigger(messageName, ...args);\n  }\n\n  /**\n   * 자식 객체에게만 호출되는 메세지를 수행한다.\n   * \n   * @param {string} messageName\n   * @param {any[]} args\n   */ \n  broadcast(messageName, ...args) {\n    Object.keys(this.children).forEach(key => {\n      this.children[key].trigger(messageName, ...args);\n    })\n  }\n\n  /**\n   * message 이벤트에 주어진 callack 을 등록 \n   * 동일한 메세지 명으로 callback 은 list 화 되어서 관리 됩니다. \n   * \n   * @param {string} message 이벤트 메세지 이름 \n   * @param {Function} callback 메세지 지정시 실행될 함수\n   */ \n  on (message, callback) {\n    this.$store.on(message, callback);\n  }\n\n  off (message, callback) {\n    this.$store.off(message, callback);\n  }\n\n  /**\n   * 동적으로 subscribe 함수를 지정합니다. \n   * \n   * template 안에서 동적으로 수행할 수 있습니다. \n   * \n   * 이렇게 생성된 subscribe 함수는 외부에서는 실행 할수가 없는 SUBSCRIBE_SELF 로 생성됩니다. \n   * \n   * 함수 내부에서 context 를 유지하기 때문에 this 로 instance 에 접근 할 수 있습니다. \n   * \n   * @example\n   * \n   * ```js\n   * html`\n   *     <div onClick=${this.subscribe(() => { \n   *        console.log('click is fired'); \n   *        console.log(this.source);\n   *     })}>\n   *        눌러주세요.\n   *     </div>\n   * `\n   * ```\n   * \n   * @param {Function} callback subscribe 함수로 지정할 callback \n   * @param {number} [debounceSecond=0] debounce 시간(ms)\n   * @param {number} [throttleSecond=0] throttle 시간(ms)\n   * @returns {string} function id \n   */ \n  subscribe(callback, debounceSecond = 0, throttleSecond = 0) {\n    const id = `subscribe.${uuidShort()}`;\n\n    const newCallback = this.createLocalCallback(id, callback);\n\n    this.$store.on(id, newCallback, this, debounceSecond, throttleSecond, false, /*self trigger*/true);    \n\n    return id; \n  }\n}\n"],"names":["MAGIC_METHOD","makeEventChecker","value","split","CHECK_SAPARATOR","CHECK_DOM_EVENT_PATTERN","CHECK_LOAD_PATTERN","CHECK_BIND_PATTERN","CHECK_SUBSCRIBE_PATTERN","PIPE","args","join","NAME_SAPARATOR","DOM_EVENT_SAPARATOR","LOAD_SAPARATOR","BIND_SAPARATOR","SUBSCRIBE_SAPARATOR","SAPARATOR","refManager","DOM_EVENT_MAKE","keys","key","SUBSCRIBE_EVENT_MAKE","CHECKER","AFTER","BEFORE","IF","KEY","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","ENTER","SPACE","ESCAPE","ALT","SHIFT","META","CONTROL","MOUSE","TOUCH","PEN","SELF","LEFT_BUTTON","RIGHT_BUTTON","FIT","PASSIVE","DOMDIFF","DEBOUNCE","t","DELAY","D1000","THROTTLE","ALL_TRIGGER","SELF_TRIGGER","CAPTURE","PREVENT","STOP","SUBSCRIBE","SUBSCRIBE_ALL","SUBSCRIBE_SELF","CONFIG","config","CUSTOM","CLICK","DOUBLECLICK","MOUSEDOWN","MOUSEUP","MOUSEMOVE","MOUSEOVER","MOUSEOUT","MOUSEENTER","MOUSELEAVE","TOUCHSTART","TOUCHMOVE","TOUCHEND","KEYDOWN","KEYUP","KEYPRESS","DRAG","DRAGSTART","DROP","DRAGOVER","DRAGENTER","DRAGLEAVE","DRAGEXIT","DRAGOUT","DRAGEND","CONTEXTMENU","CHANGE","INPUT","FOCUS","FOCUSIN","FOCUSOUT","BLUR","PASTE","RESIZE","SCROLL","SUBMIT","POINTERSTART","POINTEROVER","POINTERENTER","POINTEROUT","POINTERMOVE","POINTEREND","CHANGEINPUT","WHEEL","ANIMATIONSTART","ANIMATIONEND","ANIMATIONITERATION","TRANSITIONSTART","TRANSITIONEND","TRANSITIONRUN","TRANSITIONCANCEL","DOUBLETAB","LOAD","getRef","id","BIND_CHECK_FUNCTION","field","prevState","this","state","BIND_CHECK_DEFAULT_FUNCTION","BIND","normalizeWheelEvent","e","dx","deltaX","dy","deltaY","shiftKey","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","limit","delta","maxDelta","Math","sign","min","abs","addDomEvent","dom","eventName","callback","useCapture","addEventListener","removeDomEvent","removeEventListener","pos","touches","posXY","x","pageX","y","pageY","identity","debounce","delay","undefined","$1","$2","$3","$4","$5","clearTimeout","setTimeout","throttle","keyEach","obj","Object","forEach","index","isNotUndefined","isUndefined","isString","isFunction","short_tag_regexp","HTML_TAG","image","input","br","path","line","circle","rect","polygon","polyline","use","html","strings","map","it","results","console","log","Array","isArray","replace","match","p1","toLowerCase","splitMethodByKeyword","arr","keyword","filterKeys","filter","code","indexOf","filterMaps","target","param","trim","updateProp","node","name","newValue","oldValue","el","setAttribute","removeAttribute","setBooleanProp","setProp","removeBooleanProp","removeUndefinedProp","removeProp","hasPassed","node1","nodeType","Node","TEXT_NODE","getAttribute","getProps","attributes","len","length","i","updateElement","parentElement","oldEl","newEl","node2","textContent","nodeName","hasRefClass","replaceChild","cloneNode","COMMENT_NODE","toString","newProps","oldProps","keyList","push","apply","props","Set","updateProps","oldChildren","children","newChildren","max","removeChild","appendChild","element","firstChild","nextSibling","DomDiff","A","B","childrenA","childrenB","Dom","constructor","tag","className","attr","document","createElement","k","create","createByHTML","htmlString","list","getScrollTop","window","pageYOffset","documentElement","scrollTop","body","getScrollLeft","pageXOffset","scrollLeft","parse","DOMParser","parseFromString","setAttr","setAttrNS","namespace","data","arguments","attrNS","getAttributeNS","setAttributeNS","attrKeyValue","keyField","val","attrs","styles","style","removeAttr","removeStyle","removeProperty","is","checkElement","isTag","tagName","closest","cls","temp","checkCls","hasClass","parentNode","$parentNode","parent","hasParent","removeClass","classList","remove","contains","addClass","add","onlyOneClass","toggleClass","isForce","toggle","innerHTML","empty","append","htmlDiff","fragment","updateDiff","rootElement","updateSVGDiff","find","selector","querySelector","$","findAll","from","querySelectorAll","$$","createTextNode","prepend","prependHTML","$dom","createChildrenFragment","appendHTML","createDocumentFragment","$el","appendTo","text","tempText","css","setProperty","getComputedStyle","entries","localKey","getStyleList","cssText","tempCssText","cssArray","cssFloat","parseFloat","cssInt","parseInt","px","getBoundingClientRect","bbox","getBBox","isSVG","toUpperCase","offsetRect","parentBox","box","top","left","width","height","offsetLeft","offsetTop","offsetWidth","offsetHeight","offset","position","size","contentWidth","contentHeight","tempValue","matches","naturalWidth","naturalHeight","files","realVal","type","checked","int","float","show","displayType","display","hide","isHide","isShow","currentHide","totalLength","getTotalLength","scrollIntoView","addScrollLeft","dt","addScrollTop","setScrollTop","setScrollLeft","scrollHeight","scrollWidth","on","opt1","opt2","off","getElement","createChild","$element","firstElementChild","nextElementSibling","childLength","newElement","oldElement","isChecked","click","focus","select","range","createRange","selectNodeContents","sel","getSelection","removeAllRanges","addRange","blur","context","contextType","_initContext","getContext","resize","ctx","scale","devicePixelRatio","toDataURL","quality","clear","clearRect","update","call","drawImage","img","drawOption","option","assign","drawLine","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke","closePath","drawPath","p","fill","drawCircle","cx","cy","r","arc","PI","drawText","fillText","BaseHandler","options","initialize","load","refresh","render","run","destroy","scrollBlockingEvents","touchstart","touchmove","mousedown","mouseup","mousemove","eventConverts","doubletab","customEventNames","DomEventHandler","_domEvents","filterProps","parseDomEvent","removeEventAll","getBindings","initBindings","Event","_bindings","addBinding","matchPath","hasDelegate","eventObject","srcElement","delegate","makeCallback","makeDelegateCallback","makeDefaultCallback","returnValue","runEventCallback","delegateTarget","$dt","xy","beforeMethods","every","before","checkEventType","afterMethods","after","hasKeyCode","codes","isAllCheck","checkMethodList","fieldValue","getDefaultDomElement","refs","$root","getRealEventName","getCustomEventName","getDefaultEventObject","checkMethodFilters","afters","befores","debounces","debounceMethods","delays","delayMethods","throttles","throttleMethods","captures","filteredList","customEventName","passive","capture","makeCustomEventCallback","doubleTab","performance","now","time","bindingDomEvent","getEventNames","Boolean","shift","eventNames","bind","applyElementAttribute","isNumber","isObject","BindHandler","bindData","_bindMethods","originalCallbackName","callbackName","_","$bind","async","bindMethod","_this","refObject","refCallback","elName","isBindCheck","elementKeyIndex","Map","registElement","classes","has","set","retriveElement","get","UUID_REG","uuid","Date","getTime","c","random","floor","uuidShort","TEMP_DIV","BaseStore","editor","cachedCallback","callbacks","commandes","getCallbacks","event","setCallbacks","debug","originalCallback","debounceDelay","throttleDelay","enableAllTrigger","enableSelfTrigger","checkMethods","check","ifCheck","sourceName","f","offAll","getCachedCallbacks","sendMessage","source","Promise","resolve","then","nextSendMessage","triggerMessage","warn","emit","nextTick","trigger","start","ElementClass","opt","$container","container","app","store","UIElement","__tempVariables","handlers","initializeHandler","initializeProperty","initComponents","childComponents","components","initState","setState","isLoad","toggleState","variable","recoverVariable","delete","_reload","parseTemplate","template","afterRender","ref","refsIndex","refsLen","parseProperty","nodeValue","$p","valueType","realValue","JSON","parseSourceName","getEventMachineComponent","refClassName","parseComponent","EventMachineComponent","refName","instance","renderTarget","clean","child","_afterLoad","runHandlers","_loadMethods","localLoadMethods","methodName","checker","isDomDiff","includes","newTemplate","func","h","eachChildren","Component","rerender","$parent","childComponent","collectProps","__cachedMethodList","root","checkFunction","names","getOwnPropertyNames","getPrototypeOf","pattern","self","isAltKey","altKey","isCtrlKey","ctrlKey","isShiftKey","isMetaKey","metaKey","isMouseLeftButton","buttons","isMouseRightButton","hasMouse","pointerType","hasTouch","hasPen","preventDefault","stopPropagation","super","__UID","__storeInstance","created","initializeStoreEvent","setStore","storeInstance","$store","s","MULTI_PREFIX","startIndex","substr","splitMethod","defaultValue","methods","params","createLocalCallback","newCallback","displayName","events","method","methodLine","debounceSecond","throttleSecond","allTrigger","allTriggerMethods","selfTrigger","selfTriggerMethods","destoryStoreSUBSCRIBE","messageName","sourceContext","broadcast","message","subscribe"],"mappings":"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"}