{"version":3,"file":"sapa.modern.js","sources":["../src/Event.ts","../src/functions/registElement.ts","../src/functions/func.ts","../src/BaseStore.ts","../src/functions/DomDiff.ts","../src/functions/Dom.ts","../src/handler/BaseHandler.ts","../src/handler/DomEventHandler.ts","../src/handler/BindHandler.ts","../src/functions/uuid.ts","../src/EventMachine.ts","../src/UIElement.ts","../src/App.ts"],"sourcesContent":["export const MAGIC_METHOD = \"@magic:\";\n\nexport const makeEventChecker = (value: string, split = CHECK_SAPARATOR) => {\n  return ` ${split} ${value}`;\n}\n\n// event name regular expression\nexport const CHECK_DOM_EVENT_PATTERN = /domevent (.*)/gi;\nexport const CHECK_LOAD_PATTERN = /load (.*)/gi;\nexport const CHECK_BIND_PATTERN = /bind (.*)/gi;\nexport const CHECK_SUBSCRIBE_PATTERN = /subscribe (.*)/gi;\n\nconst SPLITTER = \"|\";\n\nexport const PIPE = (...args: string[]) => {\n  return args.join(SPLITTER);\n};\n\nexport const NAME_SAPARATOR = \":\";\nexport const CHECK_SAPARATOR = \"|\";\nexport const DOM_EVENT_SAPARATOR = `${MAGIC_METHOD}domevent `;\nexport const LOAD_SAPARATOR = `${MAGIC_METHOD}load `;\nexport const BIND_SAPARATOR = `${MAGIC_METHOD}bind `;\nexport const SUBSCRIBE_SAPARATOR = `${MAGIC_METHOD}subscribe `;\n\nexport const SAPARATOR = ' ';\n\nconst refManager = {};\n\nconst DOM_EVENT_MAKE = (...keys: string[]) => {\n  var key = keys.join(NAME_SAPARATOR);\n  return (...args: string[]) => {\n    return DOM_EVENT_SAPARATOR + [key, ...args].join(SAPARATOR);\n  };\n};\n\nconst SUBSCRIBE_EVENT_MAKE = (...args: string[]) => {\n  return SUBSCRIBE_SAPARATOR + args.join(CHECK_SAPARATOR);\n}\n\n\n// Predefined CHECKER\nexport const CHECKER = (value: string, split = CHECK_SAPARATOR) => {\n  return makeEventChecker(value, split);\n};\n\nexport const AFTER = (value: string, split = CHECK_SAPARATOR) => {\n  return makeEventChecker(`after(${value})`, split);\n};\n\nexport const BEFORE = (value: any, split = CHECK_SAPARATOR) => {\n  return makeEventChecker(`before(${value})`, split);  \n};\n\nexport const IF = CHECKER;\nexport const KEY = CHECKER; \n\nexport const ARROW_UP = CHECKER('ArrowUp');\nexport const ARROW_DOWN = CHECKER('ArrowDown');\nexport const ARROW_LEFT = CHECKER('ArrowLeft');\nexport const ARROW_RIGHT = CHECKER('ArrowRight');\nexport const ENTER = CHECKER('Enter');\nexport const SPACE = CHECKER('Space');\nexport const ESCAPE = CHECKER('Escape');\n\nexport const ALT = CHECKER(\"isAltKey\");\nexport const SHIFT = CHECKER(\"isShiftKey\");\nexport const META = CHECKER(\"isMetaKey\");\nexport const CONTROL = CHECKER(\"isCtrlKey\");\nexport const MOUSE = CHECKER(\"hasMouse\");\nexport const TOUCH = CHECKER(\"hasTouch\");\nexport const PEN = CHECKER(\"hasPen\");\nexport const SELF = CHECKER(\"self\");\nexport const LEFT_BUTTON = CHECKER(\"isMouseLeftButton\")\nexport const RIGHT_BUTTON = CHECKER(\"isMouseRightButton\")\n\nexport const FIT = CHECKER(\"fit\");\nexport const PASSIVE = CHECKER(\"passive\");\nexport const DOMDIFF = CHECKER('domdiff');\n\n// event config method\nexport const DEBOUNCE = (t = 100) => {\n  return CHECKER(`debounce(${t})`);\n};\n\nexport const DELAY = (t = 300) => {\n  return CHECKER(`delay(${t})`);\n};\n\nexport const D1000 = DEBOUNCE(1000)\n\nexport const THROTTLE = (t = 100) => {\n  return CHECKER(`throttle(${t})`);\n};\nexport const ALL_TRIGGER = CHECKER(\"allTrigger()\");\nexport const SELF_TRIGGER = CHECKER(\"selfTrigger()\");\n\nexport const CAPTURE = CHECKER(\"capture()\");\n\n// event config method\n\n// before method\n\n// after method\nexport const PREVENT = AFTER(`preventDefault`);\nexport const STOP = AFTER(`stopPropagation`);\n\nexport const SUBSCRIBE = SUBSCRIBE_EVENT_MAKE;\nexport const SUBSCRIBE_ALL = (...args: any[]) => SUBSCRIBE_EVENT_MAKE(...args, ALL_TRIGGER);\nexport const SUBSCRIBE_SELF = (...args: any[]) => SUBSCRIBE_EVENT_MAKE(...args, SELF_TRIGGER);\nexport const CONFIG = (config: any, ...args: any[]) => SUBSCRIBE_EVENT_MAKE(`config:${config}`, ...args);\nexport const CUSTOM = DOM_EVENT_MAKE;\nexport const CLICK = DOM_EVENT_MAKE(\"click\");\nexport const DOUBLECLICK = DOM_EVENT_MAKE(\"dblclick\");\nexport const MOUSEDOWN = DOM_EVENT_MAKE(\"mousedown\");\nexport const MOUSEUP = DOM_EVENT_MAKE(\"mouseup\");\nexport const MOUSEMOVE = DOM_EVENT_MAKE(\"mousemove\");\nexport const MOUSEOVER = DOM_EVENT_MAKE(\"mouseover\");\nexport const MOUSEOUT = DOM_EVENT_MAKE(\"mouseout\");\nexport const MOUSEENTER = DOM_EVENT_MAKE(\"mouseenter\");\nexport const MOUSELEAVE = DOM_EVENT_MAKE(\"mouseleave\");\nexport const TOUCHSTART = DOM_EVENT_MAKE(\"touchstart\");\nexport const TOUCHMOVE = DOM_EVENT_MAKE(\"touchmove\");\nexport const TOUCHEND = DOM_EVENT_MAKE(\"touchend\");\nexport const KEYDOWN = DOM_EVENT_MAKE(\"keydown\");\nexport const KEYUP = DOM_EVENT_MAKE(\"keyup\");\nexport const KEYPRESS = DOM_EVENT_MAKE(\"keypress\");\nexport const DRAG = DOM_EVENT_MAKE(\"drag\");\nexport const DRAGSTART = DOM_EVENT_MAKE(\"dragstart\");\nexport const DROP = DOM_EVENT_MAKE(\"drop\");\nexport const DRAGOVER = DOM_EVENT_MAKE(\"dragover\");\nexport const DRAGENTER = DOM_EVENT_MAKE(\"dragenter\");\nexport const DRAGLEAVE = DOM_EVENT_MAKE(\"dragleave\");\nexport const DRAGEXIT = DOM_EVENT_MAKE(\"dragexit\");\nexport const DRAGOUT = DOM_EVENT_MAKE(\"dragout\");\nexport const DRAGEND = DOM_EVENT_MAKE(\"dragend\");\nexport const CONTEXTMENU = DOM_EVENT_MAKE(\"contextmenu\");\nexport const CHANGE = DOM_EVENT_MAKE(\"change\");\nexport const INPUT = DOM_EVENT_MAKE(\"input\");\nexport const FOCUS = DOM_EVENT_MAKE(\"focus\");\nexport const FOCUSIN = DOM_EVENT_MAKE(\"focusin\");\nexport const FOCUSOUT = DOM_EVENT_MAKE(\"focusout\");\nexport const BLUR = DOM_EVENT_MAKE(\"blur\");\nexport const PASTE = DOM_EVENT_MAKE(\"paste\");\nexport const RESIZE = DOM_EVENT_MAKE(\"resize\");\nexport const SCROLL = DOM_EVENT_MAKE(\"scroll\");\nexport const SUBMIT = DOM_EVENT_MAKE(\"submit\");\n\n// pointerstart 의 경우 drag 를 위한 시작점이기 때문에  left button 만 허용한다. \n// context 메뉴나 wheel 은 허용하지 않는다. \nexport const POINTERSTART = (...args: any[]) => {\n  return (CUSTOM(\"pointerdown\")(...args) + LEFT_BUTTON);\n}\n// \n\nexport const POINTEROVER = CUSTOM(\"pointerover\");\nexport const POINTERENTER = CUSTOM(\"pointerenter\");\nexport const POINTEROUT = CUSTOM(\"pointerout\");\nexport const POINTERMOVE = CUSTOM(\"pointermove\");\nexport const POINTEREND = CUSTOM(\"pointerup\");\nexport const CHANGEINPUT = CUSTOM(\"change\", \"input\");\nexport const WHEEL = CUSTOM(\"wheel\", \"mousewheel\", \"DOMMouseScroll\");\nexport const ANIMATIONSTART = DOM_EVENT_MAKE('animationstart');\nexport const ANIMATIONEND = DOM_EVENT_MAKE('animationend');\nexport const ANIMATIONITERATION = DOM_EVENT_MAKE('animationiteration');\nexport const TRANSITIONSTART = DOM_EVENT_MAKE('transitionstart');\nexport const TRANSITIONEND = DOM_EVENT_MAKE('transitionend');\nexport const TRANSITIONRUN = DOM_EVENT_MAKE('transitionrun');\nexport const TRANSITIONCANCEL = DOM_EVENT_MAKE('transitioncancel');\nexport const DOUBLETAB = CUSTOM('doubletab')\n\n\n// Predefined LOADER\nexport const LOAD = (value = \"$el\") => {\n  return LOAD_SAPARATOR + value;\n};\n\nexport const getRef = (id: string | number) => {\n  return refManager[id] || '';\n};\n\nexport const BIND_CHECK_FUNCTION = (field: string | number) => {\n  return function() {\n    return this.prevState[field] != this.state[field];\n  };\n};\n\nexport const BIND_CHECK_DEFAULT_FUNCTION = () => {\n  return true;\n};\n\nexport const BIND = (value = \"$el\") => {\n  return (\n    BIND_SAPARATOR + value\n  );\n};\n\nexport function normalizeWheelEvent (e: { deltaX: any; deltaY: any; shiftKey: any; deltaMode: number; }) {\n  let dx = e.deltaX;\n  let dy = e.deltaY;\n\n\n  if (dx === 0 && e.shiftKey) {\n    [dy, dx] = [dx, dy];\n  }  \n\n  if (e.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n    dy *= 8;\n  } else if (e.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n    dy *= 24; \n  }\n\n\n  return [\n    limit(dx, 24), \n    limit(dy, 24), \n    0\n  ]\n}\n\nfunction limit (delta: number, maxDelta: number) {\n  return Math.sign(delta) * Math.min( maxDelta, Math.abs(delta))\n}\n\nexport default {\n  addDomEvent(dom: Element, eventName: keyof ElementEventMap, callback: EventListenerOrEventListenerObject, options: boolean|AddEventListenerOptions = false) {\n    if (dom) {\n      dom.addEventListener(eventName, callback, options);\n    }\n  },\n\n  removeDomEvent(dom: Element, eventName: keyof ElementEventMap, callback: EventListenerOrEventListenerObject) {\n    if (dom) {\n      dom.removeEventListener(eventName, callback);\n    }\n  },\n\n  pos(e: { touches: any[]; }) {\n    if (e.touches && e.touches[0]) {\n      return e.touches[0];\n    }\n\n    return e;\n  },\n\n  posXY(e: any) {\n    var pos = this.pos(e);\n    return {\n      x: pos.pageX,\n      y: pos.pageY\n    };\n  }\n};\n","import { IKeyValue } from \"../types\";\n\nconst map = new Map();\n\n/**\n * Element 등록\n * \n * @param {object} classes 클래스명 리스트 \n */ \nexport function registElement(classes: IKeyValue = {}) {\n\n    Object.keys(classes).forEach(key => {\n        if (map.has(key)) {\n            // console.warn(`${key} element is duplicated.`)\n            return;\n        } \n\n        map.set(key, classes[key]);\n    })\n}\n\n/**\n * 등록된 Element 반환 \n * \n * @param {string} key\n * @returns {IUIElement}\n */ \nexport function retriveElement(className: string) {\n    return map.get(className);\n}","import { IKeyValue, IMultiCallback, ISplitedMethod } from \"../types\";\n\nconst identity = () => true; \n\n/**\n * property 수집하기\n * 상위 클래스의 모든 property 를 수집해서 리턴한다.\n * \n * @param {Object} root  상속관계에 있는 인스턴스 \n * @param {Function} checkFunction 제외될 필드 리스트 { [field]: true }\n * @returns {string[]} 나의 상위 모든 메소드를 수집해서 리턴한다. \n */\nexport function collectProps(root: Object, checkFunction: Function = identity) {\n\n    let p = root;\n    let results: any[] = [];\n    do {\n        const isObject = p instanceof Object;\n\n        if (isObject === false) {\n            break;\n        }\n\n        const names = Object.getOwnPropertyNames(p).filter(name => {\n            return root && isFunction(root[name]) && checkFunction(name);\n        });\n\n        results.push.apply(results, names);\n    } while (p = Object.getPrototypeOf(p));\n\n\n    return results;\n}\n\nexport function debounce(callback: IMultiCallback, delay = 0) {\n\n    if (delay === 0) {\n        return callback;\n    }\n\n    var t: NodeJS.Timeout | undefined = undefined;\n\n    return function (...args: any[]) {\n        if (t) {\n            clearTimeout(t);\n        }\n\n        t = setTimeout(function () {\n            callback(...args);\n        }, delay || 300);\n    }\n}\n\n\nexport function throttle(callback: IMultiCallback, delay: number) {\n\n    var t: NodeJS.Timeout | null | undefined = undefined;\n\n    return function (...args: any[]) {\n        if (!t) {\n            t = setTimeout(function () {\n                callback(...args);\n                t = null;\n            }, delay || 300);\n        }\n\n    }\n}\n\nexport function ifCheck(callback: Function, context: IKeyValue, checkMethods: any[]) {\n    return (...args: any) => {\n        const ifResult = checkMethods.every((check: { target: string | number; }) => {\n            return context[check.target].apply(context, args);\n        });\n\n        if (ifResult) {\n            callback.apply(context, args);\n        }\n    }\n}\n\nexport function keyEach(obj: IKeyValue, callback: (key: string, value: any, index: number) => void) {\n    Object.keys(obj).forEach((key, index) => {\n        callback(key, obj[key], index);\n    })\n}\n\nexport function defaultValue(value: any, defaultValue: any) {\n    return typeof value == 'undefined' ? defaultValue : value;\n}\n\nexport function isUndefined(value: null) {\n    return typeof value == 'undefined' || value === null;\n}\n\nexport function isNotUndefined(value: any) {\n    return isUndefined(value) === false;\n}\n\nexport function isBoolean(value: any) {\n    return typeof value == 'boolean'\n}\n\nexport function isString(value: any) {\n    return typeof value == 'string'\n}\n\nexport function isNotString(value: any) {\n    return isString(value) === false;\n}\n\nexport function isObject(value: any) {\n    return typeof value == 'object' && !Array.isArray(value) && !isNumber(value) && !isString(value) && value !== null;\n}\n\nexport function isFunction(value: any) {\n    return typeof value == 'function'\n}\n\nexport function isNumber(value: any) {\n    return typeof value == 'number';\n}\n\nexport function isZero(num: number) {\n    return num === 0;\n}\n\nexport function isNotZero(num: number) {\n    return !isZero(num);\n}\n\nexport function clone(obj: any) {\n    if (isUndefined(obj)) return undefined;\n    return JSON.parse(JSON.stringify(obj));\n}\n\n\nexport function combineKeyArray(obj: IKeyValue) {\n    Object.keys(obj).forEach(key => {\n        if (Array.isArray(obj[key])) {\n            obj[key] = obj[key].join(', ')\n        }\n    })\n\n    return obj;\n}\n\n\n\nconst short_tag_regexp = /\\<(\\w*)([^\\>]*)\\/\\>/gim;\n\nconst HTML_TAG = {\n    'image': true,\n    'input': true,\n    'br': true,\n    'path': true,\n    'line': true,\n    'circle': true,\n    'rect': true,\n    'polygon': true,\n    'polyline': true,\n    'use': true\n}\n\n\nexport const html = (strings: TemplateStringsArray, ...args: any[]): string => {\n\n    var results = strings.map((it: any, index: string | number) => {\n\n        var results = args[index] || ''\n\n        if (isFunction(results)) {\n            console.log(results);\n            // results = results()\n        }\n\n        if (!Array.isArray(results)) {\n            results = [results]\n        }\n\n        results = results.join('')\n\n        return it + results;\n    }).join('');\n\n    results = results.replace(short_tag_regexp, function (match: string, p1: string) {\n        if (HTML_TAG[p1.toLowerCase()]) {\n            return match;\n        } else {\n            return match.replace('/>', `></${p1}>`)\n        }\n    })\n\n    return results;\n}\n\n\n/**\n * 전체 문자열에서 특정 키워드 함수를 사용하는 패턴을 찾아 리턴해준다. \n * \n * @param {string[]} arr \n * @param {string} keyword \n */\nexport const splitMethodByKeyword = (arr: any[], keyword: string) => {\n    const filterKeys = arr.filter((code: string | string[]) => code.indexOf(`${keyword}(`) > -1);\n    const filterMaps = filterKeys.map((code: { split: (arg0: string) => { split: (arg0: string) => { trim: () => { (): any; new(): any; split: { (arg0: string): [any, any]; new(): any; }; }; }[]; }[]; }) => {\n        const [target, param] = code\n            .split(`${keyword}(`)[1]\n            .split(\")\")[0]\n            .trim()\n            .split(\" \");\n\n        return { target, param } as ISplitedMethod;\n    });\n\n    return [filterKeys, filterMaps];\n};","import { debounce, ifCheck, isFunction, throttle } from \"./functions/func\";\nimport { IMultiCallback, IKeyValue } from \"./types\";\n \n/**\n * @class BaseStore\n * @description BaseStore is the base class for all stores.\n * \n */ \nexport class BaseStore {\n  cachedCallback: {};\n  callbacks: {};\n  editor: any;\n  source: any;\n  constructor(editor?: any) {\n    this.cachedCallback = {};\n    this.callbacks = {};\n    this.editor = editor;\n  }\n\n  getCallbacks(event: string) {\n    if (!this.callbacks[event]) {\n      this.callbacks[event] = []\n    }\n\n    return this.callbacks[event]\n  }\n\n  setCallbacks(event: string, list = []) {\n    this.callbacks[event] = list; \n  }\n\n  /**\n   * 메세지 등록 \n   * \n   * @param {string} event \n   * @param {Function} originalCallback \n   * @param {EventMachine} context \n   * @param {number} debounceDelay \n   * @param {number} throttleDelay \n   * @param {boolean} enableAllTrigger\n   * @param {boolean} enableSelfTrigger\n   * @param {string[]} [beforeMethods=[]]\n   * @returns {Function} off callback \n   */\n  on(event: any, originalCallback: IMultiCallback, context: IKeyValue, debounceDelay = 0, throttleDelay = 0, enableAllTrigger = false, enableSelfTrigger = false, beforeMethods = []) {\n    var callback = originalCallback;\n    \n    if (debounceDelay > 0)  callback = debounce(originalCallback, debounceDelay);\n    else if (throttleDelay > 0)  callback = throttle(originalCallback, throttleDelay);\n\n    if (beforeMethods.length) {\n      callback = ifCheck(callback, context, beforeMethods);\n    }\n\n    this.getCallbacks(event).push({ event, callback, context, originalCallback, enableAllTrigger, enableSelfTrigger });\n\n    this.debug('add message event', event, context.sourceName );\n\n    return () => {\n      this.off(event, originalCallback);\n    }\n  }\n  debug(message: string, event: any, sourceName?: any) {\n    // console.log({message, event, sourceName});\n  }\n\n  /**\n   * 메세지 해제\n   * \n   * @param {string} event \n   * @param {*} originalCallback \n   */\n  off(event: any, originalCallback: IMultiCallback) {\n\n    this.debug('off message event', event );\n\n    if (arguments.length == 1) {\n      this.setCallbacks(event);\n    } else if (arguments.length == 2) {      \n      this.setCallbacks(event, this.getCallbacks(event).filter((f: { originalCallback: any; }) => {\n        return f.originalCallback !== originalCallback\n      }));\n    }\n  }\n\n  offAll (context: any) {\n\n    Object.keys(this.callbacks).forEach(event => {\n      this.setCallbacks(event, this.getCallbacks(event).filter((f: { context: any; }) => {\n        return f.context !== context;  \n      }))\n    })\n    this.debug('off all message', context.sourceName );\n  }\n\n  getCachedCallbacks (event: any) {\n    return this.getCallbacks(event);\n  }\n\n  sendMessage(source: any, event: string|Function, ...args: any[]) {\n    Promise.resolve().then(() => {\n      var list = this.getCachedCallbacks(event);\n      if (list) {\n\n        for(var i = 0, len = list.length; i < len; i++) {\n          const f = list[i];\n          // console.log(source);\n          if (f.enableSelfTrigger) continue;\n\n          if (f.enableAllTrigger || f.originalCallback.source !== source) {\n            f.callback.apply(f.context, args)  \n          }\n        }\n      }\n\n    });\n  }\n\n  nextSendMessage(source: any, callback: IMultiCallback, ...args: any[]) {\n    Promise.resolve().then(() => {\n      callback(...args)\n    });\n  }\n\n  triggerMessage(source: (source: any, event: any, arg2: any) => void, event: any, ...args: any[]) {\n    Promise.resolve().then(() => {\n      var list = this.getCachedCallbacks(event);\n\n      if (list) {\n        for(var i = 0, len = list.length; i < len; i++) {\n          const f = list[i];\n          if (f.originalCallback.source === source) {\n            f.callback.apply(f.context, args)  \n          }\n        }\n      } else {\n        console.warn(event, ' is not valid event');\n      }\n\n\n    });\n  }\n\n  emit(event: IMultiCallback| string, ...args: any[]) {\n\n    if (isFunction(event)) {\n      (event as IMultiCallback)(...args);\n    } else {\n      this.sendMessage(this.source, event, ...args);\n    }\n\n  }\n  \n  /**\n   * 마이크로 Task 실행 \n   * \n   * @param {Function} callback  마이크로Task 형식으로 실행될 함수 \n   */\n  nextTick (callback: IMultiCallback) {\n    this.nextSendMessage(this.source, callback);\n  }\n\n  trigger(event: IMultiCallback|string, ...args: any[]) {\n\n    if (isFunction(event)) {\n      (event as IMultiCallback)(...args);\n    } else {\n      this.triggerMessage(this.source, event, ...args);\n    }\n\n  }\n}\n","import { HTMLInstance, IDom, IKeyValue } from \"../types\";\n\nconst setBooleanProp = (el: Element, name: string, value: boolean) => {\n    if (value) {\n        el.setAttribute(name, name);\n        el[name] = value;\n    } else {\n        el.removeAttribute(name);\n        el[name] = value;\n    }\n  };\n  \nconst setProp = (el: Element, name: string, value: boolean|any) => {\n    if (typeof value === 'boolean') {\n        setBooleanProp(el, name, value);\n    } else {\n        el.setAttribute(name, value);\n    }\n};\n\n\nconst removeBooleanProp = (node: Element, name: string) => {\n    node.removeAttribute(name);\n    node[name] = false;\n};\n\nconst removeUndefinedProp = (node: Element, name: string) => {\n    node.removeAttribute(name);\n}\n  \nconst removeProp = (node: Element, name: string, value: any) => {\n    if (typeof value === 'boolean') {\n        removeBooleanProp(node, name);\n    } else if (name) {\n        removeUndefinedProp(node, name);\n    }\n};\n  \n\nconst updateProp = (node: Element, name: string, newValue: any, oldValue: any) => {\n    if (!newValue) {\n      removeProp(node, name, oldValue);\n    } else if (!oldValue || newValue !== oldValue) {\n      setProp(node, name, newValue);\n    }\n  };\n\n\nconst updateProps = (node: Element, newProps: IKeyValue = {}, oldProps: IKeyValue = {}) => {\n\n    const keyList: any[] = [];\n    keyList.push.apply(keyList, Object.keys(newProps))\n    keyList.push.apply(keyList, Object.keys(oldProps))\n\n    const props = [...new Set(keyList)]\n  \n    for(var i = 0, len = props.length; i < len; i++) {\n        const key = props[i];\n        updateProp(node, key, newProps[key], oldProps[key]);\n    }\n};\n\n/**\n * TEXT_NODE 일 때   둘 다 공백일 때는  비교하지 않는다. \n * \n * @param {*} node1 \n * @param {*} node2 \n */\nfunction changed(node1: { nodeType: number; textContent: any; nodeName: any; }, node2: { textContent: any; nodeName: any; }) {\n    return (\n        (node1.nodeType === Node.TEXT_NODE && node1.textContent !== node2.textContent) \n        || node1.nodeName !== node2.nodeName\n    ) \n}\n\nfunction hasPassed(node1: Element) {\n    return (\n        (node1.nodeType !== Node.TEXT_NODE && node1.getAttribute('data-domdiff-pass') === 'true') \n    ) \n}\n\n/**\n * refClass 속성을 가지고 있으면 기존 el 을 대체한다. \n * \n */ \nfunction hasRefClass(node1: Element) {\n    return (\n        (node1.nodeType !== Node.TEXT_NODE && (node1.getAttribute('refClass'))) \n    ) \n}\n\nfunction getProps (attributes: NamedNodeMap) {\n    var results = {}\n    const len = attributes.length;\n    for(let i = 0; i < len; i++) {\n        const t = attributes[i];\n        results[t.name] = t.value;        \n    }\n\n    return results;\n    \n}\n\nfunction updateElement (parentElement: Element, oldEl: Element, newEl: Element, i: number) {\n\n    if (!oldEl) {\n        // console.log('replace');        \n        parentElement.appendChild(newEl.cloneNode(true));\n    } else if (!newEl) {\n        // console.log('replace');        \n        parentElement.removeChild(oldEl);\n    } else if (hasPassed(oldEl) || hasPassed(newEl)) {\n        // NOOP\n        // data-domdiff-pass=\"true\" 일 때는 아무것도 비교하지 않고 끝낸다. \n        // console.log(oldEl, newEl, 'passed');\n    } else if (changed(newEl, oldEl) || hasRefClass(newEl)) {\n        // node 가 같지 않으면 바꾸고, refClass 속성이 있으면 바꾸고\n        parentElement.replaceChild(newEl.cloneNode(true), oldEl);\n    } else if (\n        newEl.nodeType !== Node.TEXT_NODE \n\n        && newEl.nodeType !== Node.COMMENT_NODE\n        && newEl.toString() !== \"[object HTMLUnknownElement]\"\n    ) {\n        // console.log(newEl);\n        updateProps(oldEl, getProps(newEl.attributes), getProps(oldEl.attributes)); // added        \n        var oldChildren = children(oldEl);\n        var newChildren = children(newEl);\n        var max = Math.max(oldChildren.length, newChildren.length);\n\n        for (var i = 0; i < max; i++) {\n            updateElement(oldEl, oldChildren[i], newChildren[i], i);\n        }\n    }\n\n}\n\nconst children = (el: Element): Element[] => {\n    var element = el.firstChild; \n\n    if (!element) {\n        return [] \n    }\n\n    var results = [] as Element[]\n\n    do {\n        results.push(element as Element);\n        element = element.nextSibling;\n    } while (element);\n\n    return results; \n}\n\n\nexport function DomDiff (A: HTMLInstance | IDom, B: HTMLInstance | IDom) {\n\n    A = (A as IDom).el || A; \n    B = (B as IDom).el || B; \n\n    var childrenA = children(A as Element);\n    var childrenB = children(B as Element); \n\n    var len = Math.max(childrenA.length, childrenB.length);\n    for (var i = 0; i < len; i++) {\n        updateElement(A as Element, childrenA[i], childrenB[i], i);\n    }\n}\n","\nimport { DomElement, HTMLInstance, IDom, IKeyValue } from \"../types\";\nimport { DomDiff } from \"./DomDiff\";\n\n/**\n * Dom 유틸리티 \n * \n */ \nexport class Dom implements IDom {\n  el: HTMLInstance;\n  _initContext: any;\n  constructor(tag: DomElement, className: string = '', attr: IKeyValue = {}) {\n    if (typeof tag !== 'string') {\n      this.el = tag;\n    } else {\n      var el = document.createElement(tag);\n\n      if (className) {\n        el.className = className;\n      }\n \n      for (var k in attr) {\n        el.setAttribute(k, attr[k]);\n      }\n\n      this.el = el;\n    }\n  }\n\n  static create (tag: DomElement, className: string = '', attr: IKeyValue = {}) {\n    return new Dom(tag, className, attr);\n  }\n \n  /**\n   * @param {any} htmlString\n   */\n  static createByHTML (htmlString: any) {\n    var div = Dom.create('div')\n    var list = (div.html(htmlString) as Dom).children();\n\n    if (list.length) {\n      return Dom.create(list[0].el);\n    }\n\n    return null; \n  }\n\n  static getScrollTop() {\n    return Math.max(\n      window.pageYOffset,\n      document.documentElement.scrollTop,\n      document.body.scrollTop\n    );\n  }\n\n  static getScrollLeft() {\n    return Math.max(\n      window.pageXOffset,\n      document.documentElement.scrollLeft,\n      document.body.scrollLeft\n    );\n  }\n\n  static parse(html: string) {\n    var parser = new DOMParser();\n    return parser.parseFromString(html, \"text/html\");\n  }\n\n  static body () {\n    return Dom.create(document.body)\n  }\n\n  get htmlEl (): HTMLElement {\n    return this.el as HTMLElement;\n  }\n  \n  get inputEl (): HTMLInputElement {\n    return this.el as HTMLInputElement\n  }\n  get svgEl (): SVGElement {\n    return this.el as SVGElement;\n  }\n\n  setAttr (obj: IKeyValue) {\n    Object.keys(obj).forEach(key => {\n      this.attr(key, obj[key])\n    })\n    return this;  \n  }\n\n  setAttrNS (obj: IKeyValue, namespace = 'http://www.w3.org/2000/svg') {\n    Object.keys(obj).forEach(key => {\n      this.attrNS(key, obj[key], namespace)\n    })\n    return this;  \n  }  \n\n  setProp (obj: IKeyValue) {\n    Object.keys(obj).forEach(key => {\n      // 동일한 값을 갱신하지 않는다. \n      if (this.htmlEl[key] != obj[key]) {\n        this.htmlEl[key] = obj[key];\n      }\n    })\n    return this;  \n  }\n\n  /**\n   * data-xxx 속성을 관리한다. \n   * \n   * @param {string} key \n   * @param {any} value \n   */\n  data (key: string, value: any) {\n    if (arguments.length === 1) {\n      return this.attr('data-' + key);\n    } else if (arguments.length === 2) {\n      return this.attr('data-' + key, value);\n    }\n\n    //TODO:  data 속성을 모두 {[key]: value} 형태로 리턴하기 \n\n    return this; \n  }\n\n  /**\n   * Dom attribute 얻기 또는 설정 \n   * \n   * get ->  Dom.create(targetElement).attr('key');\n   * set -> Dom.create(targetElement).attr('key', value);\n   * \n   * @param {string} key \n   * @param {[string]} value \n   */\n  attr(key: string, value?: undefined) {\n    if (arguments.length == 1) {\n      return this.htmlEl.getAttribute(key);\n    }\n\n    // 동일한 속성 값이 있다면 변경하지 않는다. \n    if (this.htmlEl.getAttribute(key) != value) {\n      this.htmlEl.setAttribute(key, `${value}`);\n    }\n\n    return this;\n  }\n\n  /**\n   * @param {any} key\n   * @param {any} value\n   */\n  attrNS(key: string, value: any, namespace = 'http://www.w3.org/2000/svg') {\n    if (arguments.length == 1) {\n      return this.svgEl.getAttributeNS(namespace, key);\n    }\n\n    // 동일한 속성 값이 있다면 변경하지 않는다. \n    if (this.svgEl.getAttributeNS(namespace, key) != value) {\n      this.svgEl.setAttributeNS(namespace, key, value);\n    }\n\n    return this;\n  }  \n\n  /**\n   * @param {any} keyField\n   */\n  attrKeyValue(keyField: any): IKeyValue {\n    return {\n      [`${this.htmlEl.getAttribute(keyField)}`]: this.val()\n    }\n  }\n\n  attrs(...args: string[]) {\n    return args.map(key => {\n      return this.htmlEl.getAttribute(key);\n    });\n  }\n\n  /**\n   * @param {any[]} args\n   */\n  styles(...args: any[]) {\n    return args.map(key => {\n      return this.htmlEl.style[key];\n    });\n  }  \n\n  /**\n   * @param {string} key\n   */\n  removeAttr(key: string) {\n    this.htmlEl.removeAttribute(key);\n\n    return this;\n  }\n\n  /**\n   * @param {any} key\n   */\n  removeStyle(key: any) {\n    this.htmlEl.style.removeProperty(key);\n    return this;\n  }\n\n  /**\n   * @param {{ el: any; }} checkElement\n   */\n  is(checkElement: { el: any; }) {\n    return this.htmlEl === (checkElement.el || checkElement);\n  }\n\n  /**\n   * @param {string} tag\n   */\n  isTag(tag: string) {\n    return this.htmlEl.tagName.toLowerCase() === tag.toLowerCase()\n  }\n\n  /**\n   * @param {any} cls\n   */\n  closest(cls: any) {\n    var temp: Dom = this;\n    var checkCls = false;\n\n    while (!(checkCls = temp.hasClass(cls))) {\n      if (temp.el.parentNode) {\n        temp = Dom.create(temp.el.parentNode as HTMLElement);\n      } else {\n        return null;\n      }\n    }\n\n    if (checkCls) {\n      return temp;\n    }\n\n    return null;\n  }\n\n  path(): Dom[] {\n\n    if (!this.htmlEl) return [];\n\n    const $parentNode = this.parent(); \n\n    if ($parentNode) {\n      return [...$parentNode.path(), this]\n    } else {\n      return [this]\n    }\n\n\n  }\n\n  parent() {\n    return Dom.create(this.htmlEl.parentNode as HTMLElement);\n  }\n\n  hasParent () {\n    return !!this.htmlEl.parentNode\n  }\n\n  /**\n   * @param {any[]} args\n   */\n  removeClass(...args: any[]) {\n    this.htmlEl.classList.remove(...args);\n    return this;\n  }\n\n  /**\n   * @param {any} cls\n   */\n  hasClass(cls: any) {\n    if (!this.htmlEl.classList) return false;\n    return this.htmlEl.classList.contains(cls);\n  }\n\n  /**\n   * @param {any[]} args\n   */\n  addClass(...args: any[]) {\n    this.htmlEl.classList.add(...args);\n\n    return this;\n  }\n\n  /**\n   * @param {any} cls\n   */\n  onlyOneClass(cls: any) {\n    var parent = this.parent();\n\n    parent.children().forEach(it => {\n      it.removeClass(cls);\n    })\n\n    this.addClass(cls);\n  }\n\n  /**\n   * @param {string} cls\n   * @param {any} isForce\n   */\n  toggleClass(cls: string, isForce: any) {\n    this.htmlEl.classList.toggle(cls, isForce);\n    return this; \n  }\n\n  /**\n   * @param {string} html\n   */\n  html(html: string) {\n    if (typeof html === 'undefined') {\n      return this.htmlEl.innerHTML;\n    }\n\n    if (typeof html === 'string') {\n      this.htmlEl.innerHTML = html;\n    } else {\n      this.empty().append(html);\n    }\n\n    return this;\n  }\n\n  /**\n   * @param {any} fragment\n   */\n  htmlDiff(fragment: HTMLInstance) {\n    DomDiff(this, fragment);\n  }\n  /**\n   * @param {any} html\n   */\n  updateDiff (html: string, rootElement:string = 'div') {\n    DomDiff(this, Dom.create(rootElement).html(html) as Dom)\n  }\n\n  /**\n   * @param {any} html\n   */\n  updateSVGDiff (html: any, rootElement = 'div') {\n    DomDiff(this, (Dom.create(rootElement).html(`<svg>${html}</svg>`) as Dom).firstChild.firstChild)\n  }  \n\n  /**\n   * @param {any} selector\n   */\n  find(selector: any) {\n    return this.htmlEl.querySelector(selector);\n  }\n\n  /**\n   * @param {any} selector\n   */\n  $(selector: any) {\n    var node = this.find(selector);\n    return node ? Dom.create(node) : null;\n  }\n\n  /**\n   * @param {any} selector\n   */\n  findAll(selector: string) {\n    return Array.from(this.htmlEl.querySelectorAll(selector));\n  }\n\n  $$(selector: string) {\n    var arr = this.findAll(selector);\n    return arr.map(node => Dom.create(node as HTMLElement));\n  }\n\n  empty() {\n    while (this.htmlEl.firstChild) this.htmlEl.removeChild(this.htmlEl.firstChild);\n    return this;\n  }\n\n\n  append(el: string | HTMLInstance | Dom) {\n    if (typeof el === 'string') {\n      this.htmlEl.appendChild(document.createTextNode(el));\n    } else {\n      this.htmlEl.appendChild((el as Dom).el || el);\n    }\n\n    return this;\n  }\n\n  prepend(el: string| HTMLInstance | Dom) {\n    if (typeof el === 'string') {\n      this.htmlEl.prepend(document.createTextNode(el));\n    } else {\n      this.htmlEl.prepend((el as Dom).el || el);\n    }\n\n    return this;    \n  }\n\n  prependHTML(html: string) {\n    var $dom = Dom.create(\"div\").html(html);\n\n    this.prepend(($dom as Dom).createChildrenFragment());\n\n    return $dom;\n  }\n\n  appendHTML(html: string) {\n    var $dom = Dom.create(\"div\").html(html);\n\n    this.append(($dom as Dom).createChildrenFragment());\n\n    return $dom;\n  }\n\n  /**\n   * create document fragment with children dom\n   */\n  createChildrenFragment() {\n    const list = this.children();\n\n    var fragment = document.createDocumentFragment();\n    list.forEach($el => fragment.appendChild($el.el));\n\n    return fragment;\n  }\n\n  /**\n   * @param {{ el: any; }} target\n   */\n  appendTo(target: { el: any; }) {\n    var t = target.el ? target.el : target;\n\n    t.appendChild(this.htmlEl);\n\n    return this;\n  }\n\n  remove() {\n    if (this.htmlEl.parentNode) {\n      this.htmlEl.parentNode.removeChild(this.htmlEl);\n    }\n\n    return this;\n  }\n\n  /**\n   * @param {{ el: any; }} el\n   */\n  removeChild(el: { el: any; }) {\n    this.htmlEl.removeChild(el.el || el);\n    return this; \n  }\n\n  /**\n   * \n   * @param {string} value \n   * @returns {string} 파라미터가 없을 때  textContent 를 리턴한다. \n   */\n  text(value?: string | Dom | undefined) {\n    if (typeof value === 'undefined') {\n      return this.htmlEl.textContent;\n    } else {\n      var tempText: string = value as string;\n\n      if (value instanceof Dom) {\n        tempText = value.text() as string;\n      }\n\n      // 값의 변경 사항이 없으면 업데이트 하지 않는다. \n      if (this.htmlEl.textContent !== tempText) {\n        this.htmlEl.textContent = tempText;\n      }\n\n      return this;\n    }\n  }\n\n  /**\n   *\n   * $el.css`\n   *  border-color: yellow;\n   * `\n   *\n   * @param {*} key\n   * @param {*} value\n   */\n\n  css(key: string | ArrayLike<unknown> | IKeyValue, value?: string | undefined) {\n    const el = this.htmlEl  as HTMLElement;\n    if (typeof key === 'string' && typeof value !== 'undefined') {\n      if (key.indexOf('--') === 0 &&  typeof value !== 'undefined' ) {\n        el.style.setProperty(key, value);\n      } else {\n        el.style[key] = value;\n      }\n    } else if (typeof key !== 'undefined') {\n      if (typeof key === 'string') {\n        return getComputedStyle(el)[key];  \n      } else {\n        Object.entries(key).forEach(([localKey, value]) => {\n          if (localKey.indexOf('--') === 0 && typeof value !== 'undefined' ) {\n            el.style.setProperty(localKey, value);\n          } else {\n            el.style[localKey] = value;\n          }          \n        })\n      }\n    }\n\n    return this;\n  }\n\n  getComputedStyle (...list: string[]) {\n    var css = getComputedStyle(this.htmlEl);\n\n    var obj = {}\n    list.forEach(it => {\n      obj[it] = css[it]\n    })\n\n    return obj; \n  }\n\n  /**\n   * @param {any[]} list\n   */\n  getStyleList(...list: string[]) {\n    const el = this.htmlEl; \n    var style = {};\n\n    var len = el.style.length;\n    for (var i = 0; i < len; i++) {\n      var key = el.style[i];\n\n      style[key] = el.style[key];\n    }\n\n    list.forEach(key => {\n      style[key] = this.css(key);\n    });\n\n    return style;\n  }\n\n  /**\n   * @param {any} value\n   */\n  cssText(value: any): string|Dom {\n    const el = this.htmlEl;\n    if (typeof value === 'undefined') {\n      return el.style.cssText;\n    }\n\n    return this;\n  }\n\n  cssFloat(key: string) {\n    return parseFloat(this.css(key));\n  }\n\n  cssInt(key: any) {\n    return parseInt(this.css(key));\n  }\n\n  /**\n   * @param {string} key\n   * @param {number} value\n   */\n  px(key: string, value: number) {\n    return this.css(key, `${value}px`);\n  }\n\n  rect() {\n    return this.htmlEl.getBoundingClientRect();\n  }\n\n  bbox () {\n    return (this.el as SVGSVGElement).getBBox();\n  }\n\n  isSVG () {\n    return this.htmlEl.tagName.toUpperCase() === 'SVG';\n  }\n\n  offsetRect() {\n    const el = this.htmlEl;\n    if (this.isSVG()) {\n      const parentBox = this.parent().rect();\n      const box = this.rect();\n\n      return {\n        x: box.x - parentBox.x,\n        y: box.y - parentBox.y,\n        top: box.x - parentBox.x,\n        left: box.y - parentBox.y,\n        width: box.width,\n        height: box.height\n      }\n    }\n\n    return {\n      x: el.offsetLeft,\n      y: el.offsetTop,\n      top: el.offsetTop,\n      left: el.offsetLeft,\n      width: el.offsetWidth,\n      height: el.offsetHeight\n    };\n  }\n\n  offset() {\n    var rect = this.rect();\n\n    var scrollTop = Dom.getScrollTop();\n    var scrollLeft = Dom.getScrollLeft();\n\n    return {\n      top: rect.top + scrollTop,\n      left: rect.left + scrollLeft\n    };\n  }\n\n  offsetLeft() {\n    return this.offset().left;\n  }\n\n  offsetTop() {\n    return this.offset().top;\n  }\n\n  position() {\n    if (this.htmlEl.style.top) {\n      return {\n        top: parseFloat(this.css(\"top\")),\n        left: parseFloat(this.css(\"left\"))\n      };\n    } else {\n      return this.rect();\n    }\n  }\n\n  size() {\n    return [this.width(), this.height()];\n  }\n\n  width() {\n    return this.htmlEl.offsetWidth || this.rect().width;\n  }\n\n  contentWidth() {\n    return (\n      this.width() -\n      this.cssFloat(\"padding-left\") -\n      this.cssFloat(\"padding-right\")\n    );\n  }\n\n  height() {\n    return this.htmlEl.offsetHeight || this.rect().height;\n  }\n\n  contentHeight() {\n    return (\n      this.height() -\n      this.cssFloat(\"padding-top\") -\n      this.cssFloat(\"padding-bottom\")\n    );\n  }\n\n  /**\n   * @param {{ val: () => any; } | undefined} [value]\n   */\n  val(value?: Dom | string) {\n    if (typeof value === 'undefined') {\n      return this.inputEl.value;\n    } else if (typeof value !== 'undefined') {\n      var tempValue = value;\n\n      if (value instanceof Dom) {\n        tempValue = value.val() as string;\n      } else {\n        this.inputEl.value = tempValue as string;\n      }\n\n\n    }\n\n    return this;\n  }\n\n  matches (selector: string): Dom | null {\n    if (this.htmlEl) {\n\n      if (!this.htmlEl.matches) return null;\n\n      if (this.htmlEl.matches(selector)) {\n        return this;\n      }\n      return this.parent().matches(selector);\n    }\n\n    return null;\n}  \n\n\n  get value() {\n    return this.inputEl.value;\n  }\n\n  get files() {\n    return this.inputEl.files ? Array.from(this.inputEl.files) : [];\n  }\n\n  show(displayType = \"block\") {\n    this.htmlEl.style.display = displayType != \"none\" ? displayType : \"block\"\n\n    return this; \n  }\n\n  hide() {\n    this.htmlEl.style.display = 'none';\n\n    return this; \n  }\n\n  isHide () {\n    return this.htmlEl.style.display  === \"none\"\n  }\n\n  isShow () {\n    return !this.isHide();\n  }\n\n  /**\n   * @param {any} isForce\n   */\n  toggle(isForce: any) {\n    var currentHide = this.isHide();\n\n    if (arguments.length == 1) {\n      if (isForce) {\n        return this.show();\n      } else {\n        return this.hide();\n      }\n    } else {\n      if (currentHide) {\n        return this.show();\n      } else {\n        return this.hide();\n      }\n    }\n  }\n\n  scrollIntoView () {\n    this.htmlEl.scrollIntoView()\n  }\n\n  /**\n   * @param {any} dt\n   */\n  addScrollLeft (dt: any) {\n    this.htmlEl.scrollLeft += dt; \n    return this; \n  }\n\n  /**\n   * @param {any} dt\n   */\n  addScrollTop (dt: any) {\n    this.htmlEl.scrollTop += dt; \n    return this; \n  }  \n\n  /**\n   * @param {any} scrollTop\n   */\n  setScrollTop(scrollTop: any) {\n    this.htmlEl.scrollTop = scrollTop;\n    return this;\n  }\n\n  /**\n   * @param {any} scrollLeft\n   */\n  setScrollLeft(scrollLeft: any) {\n    this.htmlEl.scrollLeft = scrollLeft;\n    return this;\n  }\n\n  scrollTop() {\n    if (this.htmlEl === document.body) {\n      return Dom.getScrollTop();\n    }\n\n    return this.htmlEl.scrollTop;\n  }\n\n  scrollLeft() {\n    if (this.htmlEl === document.body) {\n      return Dom.getScrollLeft();\n    }\n\n    return this.htmlEl.scrollLeft;\n  }\n\n  scrollHeight() {\n    return this.htmlEl.scrollHeight;\n  }\n\n  scrollWidth() {\n    return this.htmlEl.scrollWidth;\n  }  \n\n  /**\n   * @param {any} eventName\n   * @param {any} callback\n   * @param {any} opt1\n   * @param {any} opt2\n   */\n  on(eventName: keyof HTMLElementEventMap, callback: (...arg: any[]) => any, opt1: any) {\n    this.htmlEl.addEventListener(eventName, callback, opt1);\n\n    return this;\n  }\n\n  off(eventName: keyof HTMLElementEventMap, callback: (...arg: any[]) => any) {\n    this.htmlEl.removeEventListener(eventName, callback);\n\n    return this;\n  }\n\n  getElement() {\n    return this.htmlEl;\n  }\n\n  /**\n   * @param {any} tag\n   */\n  createChild(tag: any, className = '', attrs = {}, css = {}) {\n    let $element = Dom.create(tag, className, attrs);\n    $element.css(css);\n\n    this.append($element);\n\n    return $element;\n  }\n\n  get firstChild() {\n    return Dom.create(this.htmlEl.firstElementChild as HTMLElement);\n  }\n\n  children() {\n    var element = this.htmlEl.firstElementChild;\n\n    if (!element) {\n      return [];\n    }\n\n    var results = [];\n\n    do {\n      results.push(Dom.create(element as HTMLElement));\n      element = element.nextElementSibling;\n    } while (element);\n\n    return results;\n  }\n\n  childLength() {\n    return this.htmlEl.children.length;\n  }\n\n  /**\n   * @param {{ el: any; }} newElement\n   */\n  replace(newElement: { el: any; }) {\n\n    if (this.htmlEl.parentNode) {\n      this.htmlEl.parentNode.replaceChild(newElement.el || newElement, this.htmlEl);\n    }\n\n    return this;\n  }\n\n  /**\n   * @param {{ el: any; }} oldElement\n   * @param {{ el: any; }} newElement\n   */\n  replaceChild(oldElement: { el: any; }, newElement: { el: any; }) {\n    this.htmlEl.replaceChild(newElement.el || newElement, oldElement.el || oldElement);\n\n    return this;\n  }  \n\n  checked(isChecked = false) {\n    if (arguments.length == 0) {\n      return !!this.inputEl.checked;\n    }\n\n    this.inputEl.checked = !!isChecked;\n\n    return this;\n  }\n\n\n  click () {\n    this.htmlEl.click();\n\n    return this; \n  }  \n\n  focus() {\n    this.htmlEl.focus();\n\n    return this;\n  }\n\n  select() {\n    // contenteditable 의 경우 selection api 를 사용해서 select() 를 수행한다.\n    if (this.attr('contenteditable') === 'true') {\n      var range = document.createRange();\n      range.selectNodeContents(this.htmlEl);\n      var sel = window.getSelection();\n      sel?.removeAllRanges();\n      sel?.addRange(range);\n    } else {\n      this.inputEl.select();\n    }\n\n    return this;\n  }\n\n  blur() {\n    this.htmlEl.blur();\n\n    return this;\n  }\n}\n","import { IBaseHandler, IEventMachine, IKeyValue } from \"../types\";\n\n\nexport class BaseHandler implements IBaseHandler {\n    context: IEventMachine;\n    options: IKeyValue;\n    constructor (context: IEventMachine, options: IKeyValue = {}) {\n        this.context = context;\n        this.options = options;\n    }\n\n    // 초기화 설정 \n    initialize () {\n\n    }\n\n    // html 을 로드 할 때 \n    load () {\n\n    }\n\n    // 새로고침 할 때 \n    refresh () {\n\n    }\n    \n    // 화면에 그린 이후에 실행 되는 로직들 \n    render () {\n\n    }\n\n    getRef(id: string): any {\n        return this.context.getRef(id);\n    }\n\n    run () {\n\n    }\n\n    destroy() {\n\n    }\n}","\nimport Event, { CHECK_SAPARATOR, DOM_EVENT_SAPARATOR, SAPARATOR, NAME_SAPARATOR, CHECK_DOM_EVENT_PATTERN } from \"../Event\";\nimport { Dom } from \"../functions/Dom\";\nimport { debounce, throttle, isNotUndefined, isFunction, splitMethodByKeyword } from \"../functions/func\";\nimport { DomElement, IDom, IDomEventObject, IDomEventObjectOption, IMultiCallback } from \"../types\";\nimport { BaseHandler } from \"./BaseHandler\";\n\n\nconst scrollBlockingEvents = {\n    'touchstart': true,\n    'touchmove': true,\n    'mousedown': true,\n    'mouseup': true,\n    'mousemove': true,\n    // wheel, mousewheel 은 prevent 를 해야한다. 그래서 scroll blocking 을 막아야 한다. \n    // 'wheel': true,   \n    // 'mousewheel': true\n}\n\nconst eventConverts = {\n  'doubletab': 'touchend'\n}\n\nconst customEventNames = {\n  'doubletab': true \n}\n\nexport class DomEventHandler extends BaseHandler {\n    _domEvents: any;\n    _bindings?: IDomEventObject[];\n    doubleTab: any;\n\n\n    initialize() {\n        this.destroy();\n\n        if (!this._domEvents) {\n          this._domEvents = this.context.filterProps(CHECK_DOM_EVENT_PATTERN)\n        }\n\n        this._domEvents.forEach((key: string) => this.parseDomEvent(key));\n    }\n\n    destroy() {\n        this.removeEventAll();\n    }\n\n\n    removeEventAll() {\n        this.getBindings()?.forEach((obj: IDomEventObject) => {\n          this.removeDomEvent(obj);\n        });\n        this.initBindings();\n    }\n\n    removeDomEvent({ eventName, dom, callback }: IDomEventObject) {\n      if (dom) {\n        Event.removeDomEvent(dom, eventName, callback as EventListenerOrEventListenerObject);\n      }\n    }    \n\n    getBindings() {\n        if (!this._bindings) {\n          this.initBindings();\n        }\n    \n        return this._bindings;\n    }\n\n    addBinding(obj: IDomEventObject) {\n        this.getBindings()?.push(obj);\n    }\n\n    initBindings() {\n        this._bindings = [];\n    }    \n\n\n    matchPath (el: Element, selector: string): Element|null {\n        if (el) {\n          if (el.matches(selector)) {\n            return el;\n          }\n          return this.matchPath(el.parentElement as Element, selector);\n        }\n        return null;\n    }\n      \n    hasDelegate (e: any, eventObject: IDomEventObject) {\n        return this.matchPath(e.target || e.srcElement, eventObject.delegate as string);\n    }\n      \n    makeCallback (eventObject: IDomEventObject, callback: Function) {\n      if (eventObject.delegate) {\n        return this.makeDelegateCallback(eventObject, callback);\n      } else {\n        return this.makeDefaultCallback(eventObject, callback);\n      }\n    }\n      \n    makeDefaultCallback (eventObject: IDomEventObject, callback: Function) {\n        return (e: any) => {\n          var returnValue = this.runEventCallback(e, eventObject, callback);\n          if (isNotUndefined(returnValue)) {\n            return returnValue;\n          }\n        };\n    }\n      \n    makeDelegateCallback (eventObject: IDomEventObject, callback: Function) {\n        return (e: any) => {\n          const delegateTarget = this.hasDelegate(e, eventObject);\n      \n          if (delegateTarget) {\n            // delegate target 이 있는 경우만 callback 실행\n            e.$dt = Dom.create(delegateTarget as DomElement);      \n      \n            var returnValue = this.runEventCallback(e, eventObject, callback);\n            if (isNotUndefined(returnValue)) {\n              return returnValue;\n            }\n          }\n        };\n    }\n      \n    runEventCallback (e: any, eventObject: IDomEventObject, callback: Function) {\n        const context = this.context;\n        e.xy = Event.posXY(e);\n      \n        if (eventObject.beforeMethods.length) {\n          eventObject.beforeMethods.every((before) => {\n            return context[before.target].call(context, e, before.param);\n          });\n        }\n      \n        if (this.checkEventType(e, eventObject)) {\n          var returnValue = callback(e, e.$dt, e.xy); \n      \n          if (returnValue !== false && eventObject.afterMethods.length) {\n            eventObject.afterMethods.forEach(after => {\n              return context[after.target].call(context, e, after.param)\n            });\n          }\n      \n          return returnValue;\n        }\n    }\n      \n    checkEventType (e: any, eventObject: IDomEventObject) {\n        const context = this.context;\n        // 특정 keycode 를 가지고 있는지 체크\n        var hasKeyCode = true;\n        if (eventObject.codes.length) {\n          hasKeyCode =\n            (e.code ? eventObject.codes.indexOf(e.code.toLowerCase()) > -1 : false) ||\n            (e.key ? eventObject.codes.indexOf(e.key.toLowerCase()) > -1 : false);\n        }\n      \n        // 체크 메소드들은 모든 메소드를 다 적용해야한다.\n        var isAllCheck = true;\n        if (eventObject.checkMethodList.length) {\n          isAllCheck = eventObject.checkMethodList.every(field => {\n            var fieldValue = context[field];    \n            if (isFunction(fieldValue) && fieldValue) {\n              // check method\n              return fieldValue.call(context, e);\n            } else if (isNotUndefined(fieldValue)) {\n      \n              // check field value\n              return !!fieldValue;\n            }\n            return true;\n          });\n        }\n      \n        return hasKeyCode && isAllCheck;\n    }\n      \n    getDefaultDomElement(dom: Element|string) {\n        const context = this.context;\n        let el;\n      \n        if (typeof dom === 'string' && dom) {\n          el = context.refs[dom] || context[dom] || window[dom];\n        } else {\n          el = context.el || context.$el || context.$root;\n        }\n      \n        if (el instanceof Dom) {\n          return el.getElement();\n        }\n      \n        return el;\n    };\n      \n    getRealEventName (eventName: string) {\n      return eventConverts[eventName] || eventName;\n    }\n\n    getCustomEventName (eventName: string) {\n      return customEventNames[eventName] ? eventName:  '';\n    }\n\n    /**\n     * \n     * doubletab -> touchend 로 바뀜 \n     */\n    getDefaultEventObject (eventName: string, checkMethodFilters: string[]): IDomEventObject {\n        const context = this.context;\n        let arr = checkMethodFilters;\n      \n        // context 에 속한 변수나 메소드 리스트 체크\n        const checkMethodList = arr.filter(code => !!context[code]);\n      \n        // 이벤트 정의 시점에 적용 되어야 하는 것들은 모두 method() 화 해서 정의한다.\n        const [afters, afterMethods] = splitMethodByKeyword(arr, \"after\");\n        const [befores, beforeMethods] = splitMethodByKeyword(arr, \"before\");\n        const [debounces, debounceMethods] = splitMethodByKeyword(arr, \"debounce\");\n        const [delays, delayMethods] = splitMethodByKeyword(arr, \"delay\");        \n        const [throttles, throttleMethods] = splitMethodByKeyword(arr, \"throttle\");\n        const [captures] = splitMethodByKeyword(arr, \"capture\");\n      \n        // 위의 5개 필터 이외에 있는 코드들은 keycode 로 인식한다.\n        const filteredList = [\n          ...checkMethodList,\n          ...afters,\n          ...befores,\n          ...delays,\n          ...debounces,\n          ...throttles,\n          ...captures\n        ];\n      \n        var codes = arr\n          .filter(code => filteredList.indexOf(code) === -1)\n          .map(code => code.toLowerCase());\n      \n        return {\n          eventName: this.getRealEventName(eventName),\n          customEventName: this.getCustomEventName(eventName), \n          codes,\n          captures,\n          afterMethods,\n          beforeMethods,\n          delayMethods,\n          debounceMethods,\n          throttleMethods,\n          checkMethodList\n        };\n    }\n      \n      \n    addDomEvent (eventObject: IDomEventObject, callback: Function) {\n        eventObject.callback = this.makeCallback(eventObject, callback);\n        this.addBinding(eventObject);\n      \n        var options: boolean|IDomEventObjectOption = !!eventObject.captures.length\n      \n        if (scrollBlockingEvents[eventObject.eventName]) {\n          options = {\n            passive: true,\n            capture: options  \n          }\n        }\n      \n        if (eventObject?.dom) {\n\n          Event.addDomEvent(\n            eventObject?.dom,\n            eventObject.eventName,\n            eventObject.callback,\n            options\n          );\n        }\n\n    }\n\n    makeCustomEventCallback (eventObject: IDomEventObject, callback: Function): IMultiCallback {\n\n      if (eventObject.customEventName === 'doubletab') {\n        var delay = 300;\n        \n        if (eventObject.delayMethods.length) {\n          delay = +eventObject.delayMethods[0].target;\n        }\n        return (...args: any[]) => {\n\n          if (!this.doubleTab) {\n            this.doubleTab = {\n                time: performance.now(),\n            }\n          } else {\n            if (performance.now() - this.doubleTab.time < delay) {\n              callback(...args);\n            }\n\n            this.doubleTab = null;\n          }\n        }\n\n      } \n\n      return callback as IMultiCallback; \n    }\n      \n    bindingDomEvent ( [eventName, dom, ...delegate]: string[], checkMethodFilters: string[], callback: IMultiCallback ) {\n        let eventObject = this.getDefaultEventObject(eventName, checkMethodFilters);\n      \n        eventObject.dom = this.getDefaultDomElement(dom);\n        eventObject.delegate = delegate.join(SAPARATOR);\n\n        \n        if (eventObject.debounceMethods.length) {\n          var debounceTime = +eventObject.debounceMethods[0].target;\n          callback = debounce(callback, debounceTime);\n        } else if (eventObject.throttleMethods.length) {\n          var throttleTime = +eventObject.throttleMethods[0].target;\n          callback = throttle(callback, throttleTime);\n        }\n\n        // custom event callback 만들기 \n        callback = this.makeCustomEventCallback(eventObject, callback)\n      \n        this.addDomEvent(eventObject, callback);\n    };\n      \n    getEventNames (eventName: string) {\n        let results: string[] = [];\n        \n        eventName.split(NAME_SAPARATOR).forEach(e => {\n            var arr = e.split(NAME_SAPARATOR);\n        \n            results.push.apply(results, arr);\n        });\n        \n        return results;\n    }\n    \n    /**\n     * 이벤트 문자열 파싱하기 \n     * \n     * @param {string} key \n     */\n    parseDomEvent (key: string) {\n        const context = this.context;\n        let checkMethodFilters = key.split(CHECK_SAPARATOR).map(it => it.trim()).filter(Boolean);\n        \n        var prefix = checkMethodFilters.shift()\n        var eventSelectorAndBehave = prefix?.split(DOM_EVENT_SAPARATOR)[1];\n        \n        var arr = eventSelectorAndBehave?.split(SAPARATOR);\n\n        if (arr) {\n          var eventNames = this.getEventNames(arr[0]);\n\n          var callback = context[key].bind(context);\n  \n          for(let i = 0, len = eventNames.length; i< len; i++) {\n            arr[0] = eventNames[i];\n            this.bindingDomEvent(arr, checkMethodFilters, callback);\n          }\n        }\n        \n    }  \n}","\nimport { isObject } from \"../functions/func\";\nimport { CHECK_BIND_PATTERN, BIND_CHECK_FUNCTION, CHECK_SAPARATOR, BIND_CHECK_DEFAULT_FUNCTION, BIND_SAPARATOR } from \"../Event\";\nimport { BaseHandler } from \"./BaseHandler\";\nimport { IBindHandlerData, IDom, IKeyValue } from \"../types\";\n\n/**\n * \n * @param {Dom} $element \n * @param {string} key \n * @param {any} value \n */\nconst applyElementAttribute = ($element: IDom, key: string|IKeyValue, value?: string|string[]|object|Function) => {\n\n  if (key === 'cssText') {\n    /**\n     * cssText: 'position:absolute'\n     */\n    ($element as IDom).cssText(value);\n    return; \n  } else if (key === \"style\") {\n    /**\n     * style: { key: value }\n     */\n    if (typeof(value) !== 'string') {\n      $element.css(value);\n    }\n\n    return;\n  } else if (key === \"class\") {\n    //  \"class\" : [ 'className', 'className' ] \n    //  \"class\" : { key: true, key: false } \n    //  \"class\" : 'string-class' \n\n    if (Array.isArray(value)) {\n      $element.addClass(...(value)?.filter(Boolean));\n    } else if (isObject(value)) {\n      const keys = Object.keys(value as IKeyValue);\n      for(var i = 0, len = keys.length; i < len; i++) {\n        const className = keys[i];\n        const hasClass = (value as IKeyValue)[className];\n\n        $element.toggleClass(className, hasClass);\n      }\n    } else {\n      $element.htmlEl.className  = value;\n    }\n\n    return;\n  } else if (key === 'callback') {\n    if (typeof value === 'function') {\n      value ();\n      return; \n    }\n  }\n\n  if (typeof value === 'undefined') {\n    $element.removeAttr(key);\n  } else {\n    if ($element.el.nodeName === \"TEXTAREA\" && key === \"value\") {\n      $element.text(value);\n    } else if (key === 'text' || key === 'textContent') {\n      $element.text(value);\n    } else if (key === 'innerHTML' || key === 'html') {\n      $element.html(value);\n    } else if (key === 'htmlDiff') {\n      $element.updateDiff(value);\n    } else if (key === 'svgDiff') {\n      $element.updateSVGDiff(value);\n    } else if (key === 'value') {\n      $element.val(value);\n    } else {\n      $element.attr(key, value);\n    }\n  }\n};\n\nexport class BindHandler extends BaseHandler {\n    _bindMethods: string[] | undefined;\n\n    load (...args: string[]) {\n      this.bindData(...args);\n    }\n\n    // 어떻게 실행하는게 좋을까? \n    // this.runHandle('bind', ...);\n    bindData (...args: string[]) {\n      if (!this._bindMethods) {\n        this._bindMethods = this.context.filterProps(CHECK_BIND_PATTERN);\n      }\n      /**\n       * BIND 를 해보자.\n       * 이시점에 하는게 맞는지는 모르겠지만 일단은 해보자.\n       * BIND 는 특정 element 에 html 이 아닌 데이타를 업데이트하기 위한 간단한 로직이다.\n       */\n      const bindList = this._bindMethods?.filter(originalCallbackName => {\n          if (!args.length) return true; \n          var [callbackName, id] = originalCallbackName.split(CHECK_SAPARATOR);        \n  \n          var [_, $bind] = callbackName.split(' ')\n  \n          return args.indexOf($bind) >  -1 \n        })\n\n        bindList?.forEach(async (callbackName) => {\n          const bindMethod = this.context[callbackName];\n          var [callbackName, id] = callbackName.split(CHECK_SAPARATOR);\n  \n          const refObject = this.getRef(id);\n          let refCallback = BIND_CHECK_DEFAULT_FUNCTION;\n  \n          if (typeof(refObject) === 'string' && refObject !== '') {\n            refCallback = BIND_CHECK_FUNCTION(refObject);\n          } else if (typeof refObject === 'function') {\n            refCallback = refObject;\n          }\n  \n          const elName = callbackName.split(BIND_SAPARATOR)[1];\n          let $element = this.context.refs[elName];\n  \n          // isBindCheck 는 binding 하기 전에 변화된 지점을 찾아서 업데이트를 제한한다.\n          const isBindCheck = typeof(refCallback) === 'function' && refCallback.call(this.context);\n          if ($element && isBindCheck) {\n            const results = (await bindMethod.call(this.context, ...args)) as IBindHandlerData;\n\n            if (!results) return;\n  \n            const keys = Object.keys(results);\n            for(var elementKeyIndex = 0, len = keys.length; elementKeyIndex < len; elementKeyIndex++) {\n              const key = keys[elementKeyIndex];\n              const value = results[key];\n\n              applyElementAttribute($element, key, value);\n            }\n          }\n        });\n    }    \n\n    destroy() {\n      this._bindMethods = undefined\n    }\n\n\n}","\nconst UUID_REG = /[xy]/g\n\nexport function uuid() {\n    var dt = new Date().getTime();\n    var uuid = 'xxx12-xx-34xx'.replace(UUID_REG, function (c) {\n        var r = (dt + Math.random() * 16) % 16 | 0;\n        dt = Math.floor(dt / 16);\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n    return uuid;\n}\n\nexport function uuidShort() {\n    var dt = new Date().getTime();\n    var uuid = 'idxxxxxxx'.replace(UUID_REG, function (c) {\n        var r = (dt + Math.random() * 16) % 16 | 0;\n        dt = Math.floor(dt / 16);\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n    return uuid;\n}\n","import {\n  CHECK_SAPARATOR,\n  CHECK_LOAD_PATTERN,\n  LOAD_SAPARATOR,\n  DOMDIFF,\n  getRef,\n  MAGIC_METHOD,\n} from \"./Event\";\n\nimport {\n  isFunction,\n  html,\n  keyEach,\n  collectProps,\n  isString\n} from \"./functions/func\";\n\nimport {DomEventHandler} from \"./handler/DomEventHandler\";\nimport {BindHandler} from \"./handler/BindHandler\";\nimport { retriveElement } from \"./functions/registElement\";\nimport { uuid, uuidShort } from \"./functions/uuid\";\nimport { Dom } from \"./functions/Dom\";\nimport { IBaseHandler, IDom, IEventMachine, IKeyValue } from \"./types\";\n\n\nconst REFERENCE_PROPERTY = \"ref\";\nconst TEMP_DIV = Dom.create(\"div\");\nconst QUERY_PROPERTY = `[${REFERENCE_PROPERTY}]`;\nconst REF_CLASS = 'refclass';\nconst REF_CLASS_PROPERTY = `[${REF_CLASS}]`\nconst VARIABLE_SAPARATOR = \"__ref__variable:\";\n\n\nexport class EventMachine implements IEventMachine {\n  state: any;\n  prevState: any;\n  children: any;\n  _bindings: never[];\n  id: string;\n  __tempVariables: Map<string, any>;\n  handlers: (BindHandler | DomEventHandler)[];\n  _loadMethods: any;\n  __cachedMethodList: any;\n  constructor(opt: Object | IEventMachine, props: IKeyValue) {\n    this.state = {};\n    this.prevState = {};\n    this.refs = {};\n    this.children = {};\n    this._bindings = [];\n    this.id = uuid();    \n    this.__tempVariables = new Map();\n    this.handlers = this.initializeHandler()\n\n    this.initializeProperty(opt, props);\n\n    this.initComponents();\n  }\n  private _$store: any;\n  public get $store(): any {\n    return this._$store;\n  }\n  public set $store(value: any) {\n    this._$store = value;\n  }\n  el: any;\n  $el: any;\n  $root: any;\n  refs: any;\n  opt!: IKeyValue;\n  parent!: IEventMachine;\n  props!: IKeyValue;\n  source!: string;\n  sourceName!: string;\n  childComponents!: IKeyValue;\n\n\n\n  /**\n   * UIElement instance 에 필요한 기본 속성 설정 \n   */\n  initializeProperty (opt: any, props = {}) {\n\n    this.opt = opt || {};\n    this.parent = this.opt as IEventMachine;\n    this.props = props;\n    this.source = uuid();\n    this.sourceName = this.constructor.name;  \n\n\n\n  }\n\n  initComponents() {\n    this.childComponents = this.components() \n  }\n\n  initializeHandler () {\n    return [\n      new BindHandler(this as any),\n      new DomEventHandler(this as any)\n    ]\n  }\n\n  /**\n   * state 를 초기화 한것을 리턴한다. \n   * \n   * @protected\n   * @returns {Object} \n   */\n  initState() {\n    return {};\n  }\n\n  /**\n   * state 를 변경한다. \n   * \n   * @param {Object} state  새로운 state \n   * @param {Boolean} isLoad  다시 로드 할 것인지 체크 , true 면 state 변경후 다시 로드 \n   */\n  setState(state = {}, isLoad = true) {\n    this.prevState = this.state;\n    this.state = Object.assign({}, this.state, state );\n    if (isLoad) {\n      this.load();\n    }\n  }\n\n  /**\n   * state 에 있는 key 필드의 값을 토글한다. \n   * Boolean 형태의 값만 동작한다. \n   * \n   * @param {string} key \n   * @param {Boolean} isLoad \n   */\n  toggleState(key: string | number, isLoad = true) {\n    this.setState({\n      [key]: !(this.state[key])\n    }, isLoad)\n  }\n\n  /**\n   * props 를 넘길 때 해당 참조를 그대로 넘기기 위한 함수 \n   * \n   * @param {any} value\n   * @returns {string} 참조 id 생성 \n   */ \n  variable(value: any) {\n    const id = `${VARIABLE_SAPARATOR}${uuidShort()}`;\n\n    this.__tempVariables.set(id, value);\n\n    return id;\n  }\n\n  /**\n   * 참조 id 를 가지고 있는 variable 을 복구한다. \n   */ \n  recoverVariable(id: string) {\n    if (isString(id) === false) {\n      return id;\n    }\n\n    let value = id;\n\n    if (this.__tempVariables.has(id)) {\n      value = this.__tempVariables.get(id);\n\n      this.__tempVariables.delete(id);\n    }\n\n    return value;\n  }\n\n  /**\n   * 객체를 다시 그릴 때 사용한다. \n   * \n   * @param {*} props \n   * @protected\n   */\n  _reload(props: any) {\n    this.props = props;\n    this.state = {}; \n    this.setState(this.initState(), false);\n    this.refresh();\n  }\n\n  /**\n   * template 을 렌더링 한다. \n   * \n   * @param {Dom|undefined} $container  컴포넌트가 그려질 대상 \n   */\n  render($container: IDom) {\n    this.$el = this.parseTemplate(\n      html`\n        ${this.template()}\n      `\n    );\n    this.refs.$el = this.$el;\n\n    if ($container) {\n      $container.append(this.$el);\n    }\n\n    // LOAD 로 정의된 것들을 수행한다. \n    this.load();\n\n    // render 이후에 실행될 콜백을 정의한다. \n    this.afterRender();\n  }\n\n  initialize() {\n    this.state = this.initState();\n  }\n\n  /**\n   * render 이후에 실행될 함수 \n   * dom 이 실제로 생성된 이후에 수행할 작업들을 정의한다. \n   * \n   * @protected\n   */\n  afterRender() {}\n\n  /**\n   * 하위에 연결될 객체들을 정의한다 \n   * \n   * @protected\n   * @returns {Object}\n   */\n  components() {\n    return {};\n  }\n\n  /**\n   * ref 이름을 가진 Component 를 가지고 온다. \n   * \n   * @param  {any[]} args \n   * @returns {EventMachine}\n   */\n  getRef(...args: string[]) {\n    const key = args.join('')\n    return this.refs[key];\n  }\n\n  /**\n   * template() 함수의 결과물을 파싱해서 dom element 를 생성한다. \n   * \n   * @param {string} html \n   * @param {Boolean} [isLoad=false] \n   */\n  parseTemplate(html: string, isLoad: boolean | undefined = false) {\n    //FIXME: html string, element 형태 모두 array 로 받을 수 있도록 해보자. \n    if (Array.isArray(html)) {\n      html = html.join('');\n    }\n\n    html = html.trim();\n    const list = (TEMP_DIV.html(html) as IDom).children();\n    /////////////////////////////////\n\n    for(var i = 0, len = list.length; i < len; i++) {\n      const $el = list[i];\n\n      var ref = $el.attr(REFERENCE_PROPERTY)\n      if (ref) {\n        this.refs[ref] = $el;\n      }\n\n      var refs = $el.$$(QUERY_PROPERTY);\n      var temp = {} \n\n      for(var refsIndex = 0, refsLen = refs.length; refsIndex < refsLen; refsIndex++) {\n        const $dom = refs[refsIndex];\n\n        const name = $dom.attr(REFERENCE_PROPERTY);\n        if (temp[name]) {\n          console.warn(`${ref} is duplicated. - ${this.sourceName}`, this)\n        } else {\n          temp[name] = true; \n        }\n\n        this.refs[name] = $dom;             \n      }\n    }\n\n    if (!isLoad && list.length) {\n      return list[0];\n    }\n\n    return Dom.create(TEMP_DIV.createChildrenFragment());\n  }\n\n  parseProperty ($dom: IDom) {\n    let props = {};\n\n    // parse properties \n    for(var t of $dom.htmlEl.attributes) {\n      props[t.nodeName] = this.recoverVariable(t.nodeValue);\n    }\n\n    if (props['props']) {\n      props = {\n        ...props,\n        ...getRef(props['props'])\n      }\n    }\n\n    $dom.$$('property').forEach(($p: { attrs: (arg0: string, arg1: string, arg2: string) => [any, any, any]; text: () => any; }) => {\n      const [name, value, valueType] = $p.attrs('name', 'value', 'valueType')\n\n      let realValue = value || $p.text();\n\n      if (valueType === 'json') {          \n        realValue = JSON.parse(realValue);\n      }\n    \n      props[name] = realValue; \n    })\n\n    return props;\n  }\n\n  getEventMachineComponent (refClassName: string) {\n    var EventMachineComponent = retriveElement(refClassName) || this.childComponents[refClassName];\n\n    return EventMachineComponent;\n  }\n\n  parseComponent() {\n    const $el = this.$el;\n\n    let targets = $el.$$(REF_CLASS_PROPERTY);\n\n    targets.forEach(($dom: IDom) => {\n\n      const EventMachineComponent = this.getEventMachineComponent($dom.attr(REF_CLASS))\n\n      if (EventMachineComponent) {\n        let props = this.parseProperty($dom);\n  \n        // create component \n        let refName = $dom.attr(REFERENCE_PROPERTY);\n        var instance = null; \n  \n        // 동일한 refName 의 EventMachine 이 존재하면  해당 컴포넌트는 다시 그려진다. \n        // 루트 element 는 변경되지 않는다. \n        if (this.children[refName]) {\n          instance = this.children[refName] \n          instance._reload(props);\n        } else {\n          // 기존의 refName 이 존재하지 않으면 Component 를 생성해서 element 를 교체한다. \n          instance = new EventMachineComponent(this, props);\n  \n          this.children[refName || instance.id] = instance;\n  \n          instance.render();\n        }\n        \n\n        if (instance.renderTarget) {\n          instance.$el?.appendTo(instance.renderTarget);\n          $dom.remove();\n        } else {\n          $dom.replace(instance.$el);     \n        }\n\n      } else {\n        $dom.remove();\n      }\n \n  \n    })\n\n    keyEach(this.children, (key, obj) => {\n      if (obj && obj.clean()) {\n        delete this.children[key]\n      }\n    })\n  }\n\n  clean () {\n    if (this.$el && !this.$el.hasParent()) {\n\n      keyEach(this.children, (key, child) => {\n        child.clean();\n      })\n\n      this.destroy();  \n\n      this.$el = null;\n      return true; \n    }\n  }\n\n  /**\n   * refresh 는 load 함수들을 실행한다. \n   */\n  refresh() {\n    this.load()\n  }\n\n  _afterLoad () {\n\n    this.runHandlers('initialize');\n\n    this.bindData();\n\n    this.parseComponent();\n  }\n\n  async load(...args: string[]) {\n    if (!this._loadMethods) {\n      this._loadMethods = this.filterProps(CHECK_LOAD_PATTERN);\n    }\n\n    // loop 가 비동기라 await 로 대기를 시켜줘야 나머지 html 업데이트에 대한 순서를 맞출 수 있다. \n    const localLoadMethods = this._loadMethods.filter((callbackName: string) => {\n        const elName = callbackName.split(LOAD_SAPARATOR)[1]\n                                  .split(CHECK_SAPARATOR)\n                                  .map((it: string) => it.trim())[0];\n        if (!args.length) return true; \n        return args.indexOf(elName) > -1\n      })\n\n\n\n    await localLoadMethods.forEach(async (callbackName: string) => {\n      let methodName = callbackName.split(LOAD_SAPARATOR)[1];\n      var [elName, ...checker] = methodName.split(CHECK_SAPARATOR).map((it: string) => it.trim())\n\n      checker = checker.map((it: string) => it.trim())\n      \n      const isDomDiff = Boolean(checker.filter((it: string) => DOMDIFF.includes(it)).length);\n\n      if (this.refs[elName]) {        \n        var newTemplate = await this[callbackName].call(this, ...args);\n\n        if (Array.isArray(newTemplate)) {\n          newTemplate = newTemplate.join('');\n        }\n\n        // create fragment \n        const fragment = this.parseTemplate(html`${newTemplate}`, true);\n        if (isDomDiff) {\n          this.refs[elName].htmlDiff(fragment);\n        } else {\n          this.refs[elName].html(fragment);\n        }\n\n      }\n    });\n\n    this._afterLoad();\n\n  }\n\n  runHandlers(func = 'run', ...args: any[]) {\n    this.handlers.forEach((h: IBaseHandler) => h[func](...args));\n  }\n\n  bindData (...args: string[]) {\n    this.runHandlers('load', ...args);\n  }\n\n  /**\n   * 템플릿 지정 \n   * \n   * 템플릿을 null 로 지정하면 자동으로 DocumentFragment 을 생성한다.\n   * 화면에는 보이지 않지만 document, window 처럼 다른 영역의 이벤트로 정의하거나 subscribe 형태로 가져올 수 있다.\n   * \n   */ \n  template(): string|string[]|DocumentFragment|null {\n    return null;\n  }\n\n  eachChildren(callback: Function) {\n    if (!isFunction(callback)) return;\n\n    keyEach(this.children, (_, Component) => {\n      callback(Component);\n    });\n  }\n\n  rerender () {\n    var $parent = this.$el.parent();\n    this.destroy();\n    this.render($parent);  \n  }\n\n  /**\n   * 자원을 해제한다.\n   * 이것도 역시 자식 컴포넌트까지 제어하기 때문에 가장 최상위 부모에서 한번만 호출되도 된다.\n   * \n   */\n  destroy() {\n    this.eachChildren((childComponent: IEventMachine) => {\n      childComponent.destroy();\n    });\n\n    this.runHandlers('destroy');\n    if (this.$el) {\n      this.$el.remove();\n    }\n\n    this.$el = null; \n    this.refs = {} \n    this.children = {} \n  }\n\n  /**\n   * property 수집하기\n   * 상위 클래스의 모든 property 를 수집해서 리턴한다.\n   * \n   * @returns {string[]} 나의 상위 모든 메소드를 수집해서 리턴한다. \n   */\n  collectProps() {\n\n    if (!this.__cachedMethodList){\n      this.__cachedMethodList = collectProps(this, (name: string | string[]) => {\n        return name.indexOf(MAGIC_METHOD) === 0; \n      });\n    }\n\n    return this.__cachedMethodList;\n  }\n\n  filterProps(pattern: RegExp) {\n    return this.collectProps().filter((key: string) => {\n      return key.match(pattern);\n    });\n  }\n\n  /* magic check method  */\n\n  self(e: any) {\n    return e && e.$dt && e.$dt.is(e.target);\n  }\n  isAltKey(e: any) {\n    return e.altKey;\n  }\n  isCtrlKey(e: any) {\n    return e.ctrlKey;\n  }\n  isShiftKey(e: any) {\n    return e.shiftKey;\n  }\n  isMetaKey(e: any) {\n    return e.metaKey || e.key == 'Meta' || e.code.indexOf('Meta') > -1 ;\n  }\n  isMouseLeftButton(e: any) {\n    return e.buttons === 1;     // 1 is left button \n  }\n\n  isMouseRightButton(e: any) {\n    return e.buttons === 2;     // 2 is right button \n  }  \n\n  hasMouse(e: any) { \n    return e.pointerType === 'mouse';\n  }\n\n  hasTouch(e: any) {\n    return e.pointerType === 'touch';\n  }\n\n  hasPen(e: any) {\n    return e.pointerType === 'pen';\n  }  \n\n  /** before check method */\n\n  /* after check method */\n\n  preventDefault(e: any) {\n    e.preventDefault();\n    return true;\n  }\n\n  stopPropagation(e: any) {\n    e.stopPropagation();\n    return true;\n  }\n}\n","import { CHECK_SAPARATOR, CHECK_SUBSCRIBE_PATTERN, SUBSCRIBE_SAPARATOR } from \"./Event\";\nimport { EventMachine } from \"./EventMachine\";\nimport { isFunction, splitMethodByKeyword } from \"./functions/func\";\nimport { uuidShort } from \"./functions/uuid\";\nimport { IBaseStore, IKeyValue } from \"./types\";\n\n/**\n * UI 를 만드는 기본 단위 \n * \n * dom handler, \n * bind handler, \n * store handler 를 가진다. \n */\nexport class UIElement extends EventMachine {\n  private __storeInstance: any;\n  constructor(opt: UIElement|Object, props: IKeyValue) {\n    super(opt, props);\n\n    if (props.store) {\n      this.__storeInstance = props.store;\n    }\n\n    this.created();\n\n    this.initialize();\n\n    this.initializeStoreEvent();\n\n  }\n\n  setStore (storeInstance: IBaseStore) {\n    this.__storeInstance = storeInstance;\n  }\n\n  /**\n   * 메세징 루트를 재정의 할 수 있음. \n   * \n   * @override\n   */\n  get $store() {\n    return this.__storeInstance || this.parent.$store;\n  }  \n\n  /**\n   * UIElement 가 생성될 때 호출되는 메소드 \n   * @protected\n   */\n  created() {}\n\n  getRealEventName(e: string, separator: string) {\n    var startIndex = e.indexOf(separator);\n    return e.substr(startIndex < 0 ? 0 : startIndex + separator.length);\n  }\n\n  /**\n   * 메소드 분리 \n   * \n   * @returns {any[]}\n   */ \n  splitMethod (arr: string[], keyword: string, defaultValue: any = 0) {\n    var [methods, params] = splitMethodByKeyword(arr, keyword);\n\n    return [\n      methods.length ? +params[0].target : defaultValue,\n      methods, \n      params\n    ]\n  }\n\n  createLocalCallback(event:string, callback: Function) {\n    var newCallback = callback.bind(this);\n    newCallback.displayName = `${this.sourceName}.${event}`;\n    newCallback.source = this.source;\n\n    return newCallback;\n  }\n\n  /**\n   * initialize store event\n   *\n   * you can define '@xxx' method(event) in UIElement\n   *\n   * Store Event 를 초기화 한다. \n   *\n   */\n  initializeStoreEvent() {\n    this.filterProps(CHECK_SUBSCRIBE_PATTERN).forEach((key: string) => {\n      const events = this.getRealEventName(key, SUBSCRIBE_SAPARATOR);\n      // context 에 속한 변수나 메소드 리스트 체크\n      const [method, ...methodLine] = events.split(CHECK_SAPARATOR);\n      const checkMethodList = methodLine.map(it => it.trim()).filter(code => this[code]).map(target => ({target}));\n\n      // support deboounce for store event    \n      const [debounceSecond, debounceMethods] = this.splitMethod(methodLine, 'debounce');\n      const [throttleSecond, throttleMethods] = this.splitMethod(methodLine, 'throttle');      \n      const [allTrigger, allTriggerMethods] = this.splitMethod(methodLine, 'allTrigger');   \n      const [selfTrigger, selfTriggerMethods] = this.splitMethod(methodLine, 'selfTrigger');            \n\n      events\n        .split(CHECK_SAPARATOR)\n        .filter(it => {\n          return (\n              debounceMethods.indexOf(it) === -1 && \n              allTriggerMethods.indexOf(it) === -1 &&               \n              selfTriggerMethods.indexOf(it) === -1 &&                             \n              throttleMethods.indexOf(it) === -1\n          )\n        })\n        .map(it => it.trim())\n        .filter(Boolean)\n        .forEach(e => {\n\n          if (isFunction(this[key])) {\n            var callback = this.createLocalCallback(e, this[key] )\n            this.$store.on(e, callback, this, debounceSecond, throttleSecond, allTriggerMethods.length, selfTriggerMethods.length, checkMethodList);\n          }\n\n      });\n    });\n  }\n\n  /**\n   * 현재 UIElement 와 연결된 모든 메세지를 해제한다. \n   */\n  destoryStoreSUBSCRIBE() {\n    this.$store.offAll(this);\n  }\n\n  destroy () {\n    super.destroy()\n\n    this.destoryStoreSUBSCRIBE();\n  }\n\n  /**\n   * UIElement 를 다시 그린다. \n   * \n   * template 정의 부터  메세지 이벤트 정의까지 모두 다시 한다. \n   */\n  rerender() {\n    super.rerender();\n\n    this.initialize();\n\n    this.initializeStoreEvent();\n  }\n\n\n  /**\n   * UIElement 기반으로 메세지를 호출 한다. \n   * 나 이외의 객체들에게 메세지를 전달한다. \n   * \n   * @param {string} messageName\n   * @param {any[]} args \n   */\n  emit(messageName: string, ...args: any[]) {\n    this.$store.source = this.source;\n    this.$store.sourceContext = this; \n    this.$store.emit(messageName, ...args);\n  }\n\n  /**\n   * MicroTask 를 수행한다. \n   * \n   * @param {Function} callback \n   */\n  nextTick (callback: Function) {\n    this.$store.nextTick(callback);\n  }\n\n  /**\n   * \n   * UIElement 자신의 메세지를 수행한다. \n   * emit 은 나외의 객체에게 메세지를 보내고 \n   * \n   * @param {string} messageName \n   * @param {any[]} args \n   */\n  trigger(messageName: string, ...args: any[]) {\n    this.$store.source = this.source;\n    this.$store.trigger(messageName, ...args);\n  }\n\n  /**\n   * 자식 객체에게만 호출되는 메세지를 수행한다.\n   * \n   * @param {string} messageName\n   * @param {any[]} args\n   */ \n  broadcast(messageName: string, ...args: any[]) {\n    Object.keys(this.children).forEach(key => {\n      this.children[key].trigger(messageName, ...args);\n    })\n  }\n\n  /**\n   * message 이벤트에 주어진 callack 을 등록 \n   * 동일한 메세지 명으로 callback 은 list 화 되어서 관리 됩니다. \n   * \n   * @param {string} message 이벤트 메세지 이름 \n   * @param {Function} callback 메세지 지정시 실행될 함수\n   */ \n  on (message: string, callback: Function) {\n    this.$store.on(message, callback);\n  }\n\n  /**\n   * @param {string} message message name or function \n   * @param {Function} callback\n   */ \n  off (message: string, callback: Function) {\n    this.$store.off(message, callback);\n  }\n\n  /**\n   * 동적으로 subscribe 함수를 지정합니다. \n   * \n   * template 안에서 동적으로 수행할 수 있습니다. \n   * \n   * 이렇게 생성된 subscribe 함수는 외부에서는 실행 할수가 없는 SUBSCRIBE_SELF 로 생성됩니다. \n   * \n   * 함수 내부에서 context 를 유지하기 때문에 this 로 instance 에 접근 할 수 있습니다. \n   * \n   * @example\n   * \n   * ```js\n   * html`\n   *     <div clickElement=${this.subscribe(() => { \n   *        console.log('click is fired'); \n   *        console.log(this.source);\n   *     })}>\n   *        Click me\n   *     </div>\n   * `\n   * ```\n   * \n   * @returns {string} function id \n   */ \n  subscribe(callback: Function, debounceSecond = 0, throttleSecond = 0) {\n    const id = `subscribe.${uuidShort()}`;\n\n    const newCallback = this.createLocalCallback(id, callback);\n\n    this.$store.on(id, newCallback, this, debounceSecond, throttleSecond, false, /*self trigger*/true);    \n\n    return id; \n  }\n}\n","import { BaseStore } from \"./BaseStore\";\nimport { Dom } from \"./functions/Dom\";\nimport { IStartOptions, UIElementConstructor } from \"./types\";\nimport { UIElement } from \"./UIElement\";\n\n/**\n * UIElement 렌더링 하기 \n * \n * @param {IUIElement} ElementClass\n * @param {Object} opt \n * @param {string|HTMLElement} opt.container  렌더링 될 객체 \n * @returns {UIElement}\n */ \nexport const start = (ElementClass: UIElementConstructor, opt: IStartOptions = {}): UIElement => {\n\n  const $container = Dom.create(opt?.container || document.body);\n\n  const app = new ElementClass(opt, {\n    ...opt,\n    store: opt.store || new BaseStore()\n  });\n\n  app.render($container);\n\n  return app; \n};"],"names":["MAGIC_METHOD","makeEventChecker","value","split","CHECK_SAPARATOR","CHECK_DOM_EVENT_PATTERN","CHECK_LOAD_PATTERN","CHECK_BIND_PATTERN","CHECK_SUBSCRIBE_PATTERN","PIPE","args","join","NAME_SAPARATOR","DOM_EVENT_SAPARATOR","LOAD_SAPARATOR","BIND_SAPARATOR","SUBSCRIBE_SAPARATOR","SAPARATOR","refManager","DOM_EVENT_MAKE","keys","key","SUBSCRIBE_EVENT_MAKE","CHECKER","AFTER","BEFORE","IF","KEY","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","ENTER","SPACE","ESCAPE","ALT","SHIFT","META","CONTROL","MOUSE","TOUCH","PEN","SELF","LEFT_BUTTON","RIGHT_BUTTON","FIT","PASSIVE","DOMDIFF","DEBOUNCE","t","DELAY","D1000","THROTTLE","ALL_TRIGGER","SELF_TRIGGER","CAPTURE","PREVENT","STOP","SUBSCRIBE","SUBSCRIBE_ALL","SUBSCRIBE_SELF","CONFIG","config","CUSTOM","CLICK","DOUBLECLICK","MOUSEDOWN","MOUSEUP","MOUSEMOVE","MOUSEOVER","MOUSEOUT","MOUSEENTER","MOUSELEAVE","TOUCHSTART","TOUCHMOVE","TOUCHEND","KEYDOWN","KEYUP","KEYPRESS","DRAG","DRAGSTART","DROP","DRAGOVER","DRAGENTER","DRAGLEAVE","DRAGEXIT","DRAGOUT","DRAGEND","CONTEXTMENU","CHANGE","INPUT","FOCUS","FOCUSIN","FOCUSOUT","BLUR","PASTE","RESIZE","SCROLL","SUBMIT","POINTERSTART","POINTEROVER","POINTERENTER","POINTEROUT","POINTERMOVE","POINTEREND","CHANGEINPUT","WHEEL","ANIMATIONSTART","ANIMATIONEND","ANIMATIONITERATION","TRANSITIONSTART","TRANSITIONEND","TRANSITIONRUN","TRANSITIONCANCEL","DOUBLETAB","LOAD","getRef","id","BIND_CHECK_FUNCTION","field","prevState","this","state","BIND_CHECK_DEFAULT_FUNCTION","BIND","normalizeWheelEvent","e","dx","deltaX","dy","deltaY","shiftKey","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","limit","delta","maxDelta","Math","sign","min","abs","addDomEvent","dom","eventName","callback","options","addEventListener","removeDomEvent","removeEventListener","pos","touches","posXY","x","pageX","y","pageY","map","Map","registElement","classes","Object","forEach","has","set","retriveElement","className","get","identity","debounce","delay","undefined","clearTimeout","setTimeout","throttle","keyEach","obj","index","isNotUndefined","isUndefined","isString","isFunction","short_tag_regexp","HTML_TAG","image","input","br","path","line","circle","rect","polygon","polyline","use","html","strings","it","results","console","log","Array","isArray","replace","match","p1","toLowerCase","splitMethodByKeyword","arr","keyword","filterKeys","filter","code","indexOf","filterMaps","target","param","trim","BaseStore","editor","cachedCallback","callbacks","source","_createClass","event","list","originalCallback","context","debounceDelay","throttleDelay","enableAllTrigger","enableSelfTrigger","beforeMethods","length","checkMethods","every","check","apply","ifCheck","getCallbacks","push","debug","sourceName","off","message","arguments","setCallbacks","f","Promise","resolve","then","getCachedCallbacks","i","len","warn","sendMessage","nextSendMessage","triggerMessage","updateProp","node","name","newValue","oldValue","el","setAttribute","removeAttribute","setBooleanProp","setProp","removeBooleanProp","removeUndefinedProp","removeProp","hasPassed","node1","nodeType","Node","TEXT_NODE","getAttribute","getProps","attributes","updateElement","parentElement","oldEl","newEl","node2","textContent","nodeName","hasRefClass","replaceChild","cloneNode","COMMENT_NODE","toString","newProps","oldProps","keyList","props","Set","updateProps","oldChildren","children","newChildren","max","removeChild","appendChild","element","firstChild","nextSibling","DomDiff","A","B","childrenA","childrenB","Dom","tag","attr","_initContext","document","createElement","k","namespace","attrNS","htmlEl","svgEl","getAttributeNS","setAttributeNS","keyField","val","style","removeProperty","checkElement","tagName","cls","temp","checkCls","hasClass","parentNode","create","$parentNode","parent","classList","remove","contains","add","removeClass","addClass","isForce","toggle","innerHTML","empty","append","fragment","rootElement","selector","querySelector","find","from","querySelectorAll","findAll","createTextNode","prepend","$dom","createChildrenFragment","createDocumentFragment","$el","tempText","text","setProperty","getComputedStyle","entries","localKey","css","cssText","parseFloat","parseInt","getBoundingClientRect","getBBox","toUpperCase","isSVG","parentBox","box","top","left","width","height","offsetLeft","offsetTop","offsetWidth","offsetHeight","scrollTop","getScrollTop","scrollLeft","getScrollLeft","offset","cssFloat","inputEl","tempValue","matches","files","displayType","display","isHide","currentHide","show","hide","scrollIntoView","dt","body","scrollHeight","scrollWidth","opt1","attrs","$element","firstElementChild","nextElementSibling","newElement","oldElement","isChecked","checked","click","focus","range","createRange","selectNodeContents","sel","window","getSelection","removeAllRanges","addRange","select","blur","htmlString","pageYOffset","documentElement","pageXOffset","DOMParser","parseFromString","BaseHandler","scrollBlockingEvents","touchstart","touchmove","mousedown","mouseup","mousemove","eventConverts","doubletab","customEventNames","DomEventHandler","_domEvents","_bindings","doubleTab","destroy","filterProps","parseDomEvent","removeEventAll","getBindings","initBindings","Event","matchPath","eventObject","srcElement","delegate","makeDelegateCallback","makeDefaultCallback","returnValue","runEventCallback","delegateTarget","hasDelegate","$dt","xy","before","call","checkEventType","afterMethods","after","hasKeyCode","codes","isAllCheck","checkMethodList","fieldValue","refs","$root","getElement","checkMethodFilters","afters","befores","debounces","debounceMethods","delays","delayMethods","throttles","throttleMethods","captures","filteredList","getRealEventName","customEventName","getCustomEventName","makeCallback","addBinding","passive","capture","performance","now","time","getDefaultEventObject","getDefaultDomElement","makeCustomEventCallback","Boolean","prefix","shift","eventSelectorAndBehave","eventNames","getEventNames","bind","bindingDomEvent","applyElementAttribute","removeAttr","updateDiff","updateSVGDiff","isNumber","isObject","toggleClass","BindHandler","_bindMethods","bindData","bindList","_this$_bindMethods","originalCallbackName","callbackName","_","$bind","async","bindMethod","refObject","refCallback","elName","isBindCheck","elementKeyIndex","UUID_REG","uuid","Date","getTime","c","r","random","floor","uuidShort","TEMP_DIV","EventMachine","opt","__tempVariables","handlers","_loadMethods","__cachedMethodList","_$store","childComponents","initializeHandler","initializeProperty","initComponents","constructor","components","isLoad","assign","load","setState","delete","initState","refresh","$container","parseTemplate","template","afterRender","ref","$$","refsIndex","refsLen","recoverVariable","nodeValue","$p","valueType","realValue","JSON","parse","refClassName","EventMachineComponent","getEventMachineComponent","parseProperty","refName","instance","_reload","render","renderTarget","appendTo","clean","hasParent","child","runHandlers","parseComponent","localLoadMethods","methodName","checker","isDomDiff","includes","newTemplate","htmlDiff","_afterLoad","func","h","Component","$parent","eachChildren","childComponent","root","checkFunction","p","names","getOwnPropertyNames","getPrototypeOf","collectProps","pattern","is","altKey","ctrlKey","metaKey","buttons","pointerType","preventDefault","stopPropagation","UIElement","_this","__storeInstance","store","created","initialize","initializeStoreEvent","storeInstance","$store","separator","startIndex","substr","defaultValue","methods","params","newCallback","displayName","events","method","methodLine","debounceSecond","splitMethod","throttleSecond","allTrigger","allTriggerMethods","selfTrigger","selfTriggerMethods","createLocalCallback","on","offAll","_get","destoryStoreSUBSCRIBE","messageName","sourceContext","emit","nextTick","trigger","start","ElementClass","container","app"],"mappings":"AAAaA,MAAAA,EAAe,UAEfC,EAAmB,CAACC,EAAeC,EAAQC,QAC3CD,KAASD,IAITG,EAA0B,kBAC1BC,EAAqB,cACrBC,EAAqB,cACrBC,EAA0B,mBAI1BC,EAAO,IAAIC,IACfA,EAAKC,KAHG,KAMJC,EAAiB,IACjBR,EAAkB,IAClBS,qBACAC,iBACAC,iBACAC,sBAEAC,EAAY,IAEnBC,EAAa,GAEbC,EAAiB,IAAIC,KACzB,IAAIC,EAAMD,EAAKT,KAZa,KAa5B,MAAO,IAAID,uBACoB,CAACW,UAAQX,GAAMC,KAPvB,MAWnBW,EAAuB,IAAIZ,wBACFA,EAAKC,KAAKP,GAK5BmB,EAAU,CAACrB,EAAeC,EAAQC,IACtCH,EAAiBC,EAAOC,GAGpBqB,EAAQ,CAACtB,EAAeC,EAAQC,IACpCH,WAA0BC,KAAUC,GAGhCsB,EAAS,CAACvB,EAAYC,EAAQC,IAClCH,YAA2BC,KAAUC,GAGjCuB,EAAKH,EACLI,EAAMJ,EAENK,EAAWL,EAAQ,WACnBM,EAAaN,EAAQ,aACrBO,EAAaP,EAAQ,aACrBQ,EAAcR,EAAQ,cACtBS,EAAQT,EAAQ,SAChBU,EAAQV,EAAQ,SAChBW,EAASX,EAAQ,UAEjBY,EAAMZ,EAAQ,YACda,EAAQb,EAAQ,cAChBc,EAAOd,EAAQ,aACfe,EAAUf,EAAQ,aAClBgB,EAAQhB,EAAQ,YAChBiB,EAAQjB,EAAQ,YAChBkB,EAAMlB,EAAQ,UACdmB,EAAOnB,EAAQ,QACfoB,EAAcpB,EAAQ,qBACtBqB,EAAerB,EAAQ,sBAEvBsB,EAAMtB,EAAQ,OACduB,EAAUvB,EAAQ,WAClBwB,EAAUxB,EAAQ,WAGlByB,EAAW,CAACC,EAAI,MACpB1B,cAAoB0B,MAGhBC,EAAQ,CAACD,EAAI,MACjB1B,WAAiB0B,MAGbE,EAAQH,EAAS,KAEjBI,EAAW,CAACH,EAAI,MACpB1B,cAAoB0B,MAEhBI,EAAc9B,EAAQ,gBACtB+B,EAAe/B,EAAQ,iBAEvBgC,EAAUhC,EAAQ,aAOlBiC,EAAUhC,oBACViC,EAAOjC,qBAEPkC,EAAYpC,EACZqC,EAAgB,IAAIjD,IAAgBY,eAAwBZ,UAAM2C,KAClEO,EAAiB,IAAIlD,IAAgBY,eAAwBZ,UAAM4C,KACnEO,GAAS,CAACC,KAAgBpD,IAAgBY,0BAA+BwC,YAAapD,IACtFqD,GAAS5C,EACT6C,GAAQ7C,EAAe,SACvB8C,GAAc9C,EAAe,YAC7B+C,GAAY/C,EAAe,aAC3BgD,GAAUhD,EAAe,WACzBiD,GAAYjD,EAAe,aAC3BkD,GAAYlD,EAAe,aAC3BmD,GAAWnD,EAAe,YAC1BoD,GAAapD,EAAe,cAC5BqD,GAAarD,EAAe,cAC5BsD,GAAatD,EAAe,cAC5BuD,GAAYvD,EAAe,aAC3BwD,GAAWxD,EAAe,YAC1ByD,GAAUzD,EAAe,WACzB0D,GAAQ1D,EAAe,SACvB2D,GAAW3D,EAAe,YAC1B4D,GAAO5D,EAAe,QACtB6D,GAAY7D,EAAe,aAC3B8D,GAAO9D,EAAe,QACtB+D,GAAW/D,EAAe,YAC1BgE,GAAYhE,EAAe,aAC3BiE,GAAYjE,EAAe,aAC3BkE,GAAWlE,EAAe,YAC1BmE,GAAUnE,EAAe,WACzBoE,GAAUpE,EAAe,WACzBqE,GAAcrE,EAAe,eAC7BsE,GAAStE,EAAe,UACxBuE,GAAQvE,EAAe,SACvBwE,GAAQxE,EAAe,SACvByE,GAAUzE,EAAe,WACzB0E,GAAW1E,EAAe,YAC1B2E,GAAO3E,EAAe,QACtB4E,GAAQ5E,EAAe,SACvB6E,GAAS7E,EAAe,UACxB8E,GAAS9E,EAAe,UACxB+E,GAAS/E,EAAe,UAIxBgF,GAAe,IAAIzF,IACtBqD,GAAO,4BAAkBrD,GAAQiC,EAI9ByD,GAAcrC,GAAO,eACrBsC,GAAetC,GAAO,gBACtBuC,GAAavC,GAAO,cACpBwC,GAAcxC,GAAO,eACrByC,GAAazC,GAAO,aACpB0C,GAAc1C,GAAO,SAAU,SAC/B2C,GAAQ3C,GAAO,QAAS,aAAc,kBACtC4C,GAAiBxF,EAAe,kBAChCyF,GAAezF,EAAe,gBAC9B0F,GAAqB1F,EAAe,sBACpC2F,GAAkB3F,EAAe,mBACjC4F,GAAgB5F,EAAe,iBAC/B6F,GAAgB7F,EAAe,iBAC/B8F,GAAmB9F,EAAe,oBAClC+F,GAAYnD,GAAO,aAInBoD,GAAO,CAACjH,EAAQ,uBACHA,EAGbkH,GAAUC,GACdnG,EAAWmG,IAAO,GAGdC,GAAuBC,cAEhC,YAAYC,UAAUD,IAAUE,KAAKC,MAAMH,IAIlCI,GAA8B,OAI9BC,GAAO,CAAC1H,EAAQ,uBAERA,WAIL2H,GAAqBC,GACnC,IAAIC,EAAKD,EAAEE,OACPC,EAAKH,EAAEI,OAcX,OAXW,IAAPH,GAAYD,EAAEK,YACfF,EAAIF,GAAM,CAACA,EAAIE,IAGdH,EAAEM,YAAcC,WAAWC,eAC7BL,GAAM,EACGH,EAAEM,YAAcC,WAAWE,iBACpCN,GAAM,IAID,CACLO,GAAMT,EAAI,IACVS,GAAMP,EAAI,IACV,GAIJ,SAASO,GAAOC,EAAeC,GAC7B,OAAOC,KAAKC,KAAKH,GAASE,KAAKE,IAAKH,EAAUC,KAAKG,IAAIL,IAGzD,OAAe,CACbM,YAAYC,EAAcC,EAAkCC,EAA8CC,GAA2C,GAC/IH,GACFA,EAAII,iBAAiBH,EAAWC,EAAUC,IAI9CE,eAAeL,EAAcC,EAAkCC,GACzDF,GACFA,EAAIM,oBAAoBL,EAAWC,IAIvCK,IAAIzB,GACEA,EAAE0B,SAAW1B,EAAE0B,QAAQ,GAClB1B,EAAE0B,QAAQ,GAGZ1B,EAGT2B,MAAM3B,GACJ,IAAIyB,EAAM9B,KAAK8B,IAAIzB,GACnB,MAAO,CACL4B,EAAGH,EAAII,MACPC,EAAGL,EAAIM,SCvPb,MAAMC,GAAM,IAAIC,aAOAC,GAAcC,EAAqB,IAE/CC,OAAO9I,KAAK6I,GAASE,QAAQ9I,IACrByI,GAAIM,IAAI/I,IAKZyI,GAAIO,IAAIhJ,EAAK4I,EAAQ5I,eAUbiJ,GAAeC,GAC3B,OAAOT,GAAIU,IAAID,m3DC1BnB,MAAME,GAAW,KAAM,WAgCPC,GAASxB,EAA0ByB,EAAQ,GAEvD,GAAc,IAAVA,EACA,OAAOzB,EAGX,IAAIjG,OAAgC2H,EAEpC,mBAAoBlK,GACZuC,GACA4H,aAAa5H,GAGjBA,EAAI6H,WAAW,WACX5B,eAAYxI,IACbiK,GAAS,eAKJI,GAAS7B,EAA0ByB,GAE/C,IAAI1H,OAAuC2H,EAE3C,mBAAoBlK,GACXuC,IACDA,EAAI6H,WAAW,WACX5B,eAAYxI,GACZuC,EAAI,MACL0H,GAAS,gBAkBRK,GAAQC,EAAgB/B,GACpCgB,OAAO9I,KAAK6J,GAAKd,QAAQ,CAAC9I,EAAK6J,KAC3BhC,EAAS7H,EAAK4J,EAAI5J,GAAM6J,cAYhBC,GAAejL,GAC3B,OAA8B,aALNA,GACxB,aAAcA,EAIPkL,CAAYlL,YAOPmL,GAASnL,GACrB,MAAuB,iBAATA,WAWFoL,GAAWpL,GACvB,MAAuB,mBAATA,EAiClB,MAAMqL,GAAmB,yBAEnBC,GAAW,CACbC,OAAS,EACTC,OAAS,EACTC,IAAM,EACNC,MAAQ,EACRC,MAAQ,EACRC,QAAU,EACVC,MAAQ,EACRC,SAAW,EACXC,UAAY,EACZC,KAAO,GAIEC,GAAO,CAACC,KAAkC1L,IAErC0L,EAAQtC,IAAI,CAACuC,EAASnB,KAEhC,IAAIoB,EAAU5L,EAAKwK,IAAU,GAa7B,OAXII,GAAWgB,IACXC,QAAQC,IAAIF,GAIXG,MAAMC,QAAQJ,KACfA,EAAU,CAACA,IAKRD,EAFGC,EAAQ3L,KAAK,MAGxBA,KAAK,IAEUgM,QAAQpB,GAAkB,SAAUqB,EAAeC,GACjE,OAAIrB,GAASqB,EAAGC,eACLF,EAEAA,EAAMD,QAAQ,WAAYE,QAchCE,GAAuB,CAACC,EAAYC,KAC7C,MAAMC,EAAaF,EAAIG,OAAQC,GAA4BA,EAAKC,WAAWJ,OAAe,GACpFK,EAAaJ,EAAWpD,IAAKsD,IAC/B,MAAOG,EAAQC,GAASJ,EACnBjN,SAAS8M,MAAY,GACrB9M,MAAM,KAAK,GACXsN,OACAtN,MAAM,KAEX,MAAO,CAAEoN,OAAAA,EAAQC,MAAAA,KAGrB,MAAO,CAACN,EAAYI,IC/MXI,IAAAA,cAKX,WAAYC,mBAJZC,2BACAC,sBACAF,mBACAG,cAEErG,KAAKmG,eAAiB,GACtBnG,KAAKoG,UAAY,GACjBpG,KAAKkG,OAASA,SARlBI,gCAWE,SAAaC,GAKX,OAJKvG,KAAKoG,UAAUG,KAClBvG,KAAKoG,UAAUG,GAAS,SAGdH,UAAUG,+BAGxB,SAAaA,EAAeC,EAAO,IACjCxG,KAAKoG,UAAUG,GAASC,oBAgB1B,SAAGD,EAAYE,EAAkCC,EAAoBC,EAAgB,EAAGC,EAAgB,EAAGC,GAAmB,EAAOC,GAAoB,EAAOC,EAAgB,IAC9K,IAAItF,EAAWgF,EAaf,OAXIE,EAAgB,EAAIlF,EAAWwB,GAASwD,EAAkBE,GACrDC,EAAgB,IAAInF,EAAW6B,GAASmD,EAAkBG,IAE/DG,EAAcC,SAChBvF,WDkBkBA,EAAoBiF,EAAoBO,GAC5D,MAAO,IAAIhO,KACUgO,EAAaC,MAAOC,GAC1BT,EAAQS,EAAMrB,QAAQsB,MAAMV,EAASzN,KAI5CwI,EAAS2F,MAAMV,EAASzN,ICzBnBoO,CAAQ5F,EAAUiF,EAASK,IAGxC/G,KAAKsH,aAAaf,GAAOgB,KAAK,CAAEhB,MAAAA,EAAO9E,SAAAA,EAAUiF,QAAAA,EAASD,iBAAAA,EAAkBI,iBAAAA,EAAkBC,kBAAAA,IAE9F9G,KAAKwH,MAAM,oBAAqBjB,EAAOG,EAAQe,YAExC,KACLzH,KAAK0H,IAAInB,EAAOE,yBAGpB,SAAMkB,EAAiBpB,EAAYkB,uBAUnC,SAAIlB,EAAYE,GAEdzG,KAAKwH,MAAM,oBAAqBjB,GAER,GAApBqB,UAAUZ,OACZhH,KAAK6H,aAAatB,GACW,GAApBqB,UAAUZ,QACnBhH,KAAK6H,aAAatB,EAAOvG,KAAKsH,aAAaf,GAAOb,OAAQoC,GACjDA,EAAErB,mBAAqBA,0BAKpC,SAAQC,GAENjE,OAAO9I,KAAKqG,KAAKoG,WAAW1D,QAAQ6D,IAClCvG,KAAK6H,aAAatB,EAAOvG,KAAKsH,aAAaf,GAAOb,OAAQoC,GACjDA,EAAEpB,UAAYA,MAGzB1G,KAAKwH,MAAM,kBAAmBd,EAAQe,8CAGxC,SAAoBlB,GAClB,YAAYe,aAAaf,8BAG3B,SAAYF,EAAaE,KAA2BtN,GAClD8O,QAAQC,UAAUC,KAAK,KACrB,IAAIzB,EAAOxG,KAAKkI,mBAAmB3B,GACnC,GAAIC,EAEF,IAAI,IAAI2B,EAAI,EAAGC,EAAM5B,EAAKQ,OAAQmB,EAAIC,EAAKD,IAAK,CAC9C,MAAML,EAAItB,EAAK2B,GAEXL,EAAEhB,oBAEFgB,EAAEjB,kBAAoBiB,EAAErB,iBAAiBJ,SAAWA,IACtDyB,EAAErG,SAAS2F,MAAMU,EAAEpB,QAASzN,qCAQtC,SAAgBoN,EAAa5E,KAA6BxI,GACxD8O,QAAQC,UAAUC,KAAK,KACrBxG,eAAYxI,mCAIhB,SAAeoN,EAAsDE,KAAetN,GAClF8O,QAAQC,UAAUC,KAAK,KACrB,IAAIzB,EAAOxG,KAAKkI,mBAAmB3B,GAEnC,GAAIC,EACF,IAAI,IAAI2B,EAAI,EAAGC,EAAM5B,EAAKQ,OAAQmB,EAAIC,EAAKD,IAAK,CAC9C,MAAML,EAAItB,EAAK2B,GACXL,EAAErB,iBAAiBJ,SAAWA,GAChCyB,EAAErG,SAAS2F,MAAMU,EAAEpB,QAASzN,QAIhC6L,QAAQuD,KAAK9B,EAAO,6CAO1B,SAAKA,KAAkCtN,GAEjC4K,GAAW0C,GACZA,eAA4BtN,GAE7B+G,KAAKsI,wBAAYtI,KAAKqG,OAAQE,UAAUtN,4BAU5C,SAAUwI,GACRzB,KAAKuI,gBAAgBvI,KAAKqG,OAAQ5E,0BAGpC,SAAQ8E,KAAiCtN,GAEnC4K,GAAW0C,GACZA,eAA4BtN,GAE7B+G,KAAKwI,2BAAexI,KAAKqG,OAAQE,UAAUtN,aCrKjD,MAqCMwP,GAAa,CAACC,EAAeC,EAAcC,EAAeC,KACvDD,EAEOC,GAAYD,IAAaC,GA9BzB,EAACC,EAAaH,EAAclQ,KACnB,kBAAVA,EAXQ,EAACqQ,EAAaH,EAAclQ,KAC3CA,GACAqQ,EAAGC,aAAaJ,EAAMA,GACtBG,EAAGH,GAAQlQ,IAEXqQ,EAAGE,gBAAgBL,GACnBG,EAAGH,GAAQlQ,IAMXwQ,CAAeH,EAAIH,EAAMlQ,GAEzBqQ,EAAGC,aAAaJ,EAAMlQ,IA2BxByQ,CAAQR,EAAMC,EAAMC,GAbP,EAACF,EAAeC,EAAclQ,KACxB,kBAAVA,EAVW,EAACiQ,EAAeC,KACtCD,EAAKM,gBAAgBL,GACrBD,EAAKC,IAAQ,GASTQ,CAAkBT,EAAMC,GACjBA,GAPa,EAACD,EAAeC,KACxCD,EAAKM,gBAAgBL,IAOjBS,CAAoBV,EAAMC,IAO5BU,CAAWX,EAAMC,EAAME,IAkC7B,SAASS,GAAUC,GACf,OACKA,EAAMC,WAAaC,KAAKC,WAAyD,SAA5CH,EAAMI,aAAa,qBAcjE,SAASC,GAAUC,GACf,IAAIhF,EAAU,GACd,MAAMuD,EAAMyB,EAAW7C,OACvB,IAAI,IAAImB,EAAI,EAAGA,EAAIC,EAAKD,IAAK,CACzB,MAAM3M,EAAIqO,EAAW1B,GACrBtD,EAAQrJ,EAAEmN,MAAQnN,EAAE/C,MAGxB,OAAOoM,EAIX,SAASiF,GAAeC,EAAwBC,EAAgBC,EAAgB9B,GAE5E,GAAK6B,KAGOC,MAGDX,GAAUU,IAAUV,GAAUW,YA3CmCC,EA+ClDF,GA/CbT,EA+CMU,GA7CRT,WAAaC,KAAKC,WAAaH,EAAMY,cAAgBD,EAAMC,aAC/DZ,EAAMa,WAAaF,EAAME,UAcpC,SAAqBb,GACjB,OACKA,EAAMC,WAAaC,KAAKC,WAAcH,EAAMI,aAAa,YA4B1BU,CAAYJ,GAE5CF,EAAcO,aAAaL,EAAMM,WAAU,GAAOP,WAElDC,EAAMT,WAAaC,KAAKC,WAErBO,EAAMT,WAAaC,KAAKe,cACH,gCAArBP,EAAMQ,WACX,CA3Ec,EAAC/B,EAAegC,EAAsB,GAAIC,EAAsB,MAEhF,MAAMC,EAAiB,GACvBA,EAAQrD,KAAKH,MAAMwD,EAASnI,OAAO9I,KAAK+Q,IACxCE,EAAQrD,KAAKH,MAAMwD,EAASnI,OAAO9I,KAAKgR,IAExC,MAAME,YAAY,IAAIC,IAAIF,IAE1B,IAAI,IAAIzC,EAAI,EAAGC,EAAMyC,EAAM7D,OAAQmB,EAAIC,EAAKD,IAAK,CAC7C,MAAMvO,EAAMiR,EAAM1C,GAClBM,GAAWC,EAAM9O,EAAK8Q,EAAS9Q,GAAM+Q,EAAS/Q,MAmE9CmR,CAAYf,EAAOJ,GAASK,EAAMJ,YAAaD,GAASI,EAAMH,aAC9D,IAAImB,EAAcC,GAASjB,GACvBkB,EAAcD,GAAShB,GACvBkB,EAAMjK,KAAKiK,IAAIH,EAAYhE,OAAQkE,EAAYlE,QAEnD,IAASmB,EAAI,EAAGA,EAAIgD,EAAKhD,IACrB2B,GAAcE,EAAOgB,EAAY7C,GAAI+C,EAAY/C,GAAIA,SArBzD4B,EAAcqB,YAAYpB,QAH1BD,EAAcsB,YAAYpB,EAAMM,WAAU,IAvClD,IAAiBhB,EAA+DW,EAqEhF,MAAMe,GAAYnC,IACd,IAAIwC,EAAUxC,EAAGyC,WAEjB,IAAKD,EACD,MAAO,GAGX,IAAIzG,EAAU,GAEd,GACIA,EAAQ0C,KAAK+D,GACbA,EAAUA,EAAQE,kBACbF,GAET,OAAOzG,YAIK4G,GAASC,EAAwBC,GAG7CA,EAAKA,EAAW7C,IAAM6C,EAMtB,IAJA,IAAIC,EAAYX,GAHhBS,EAAKA,EAAW5C,IAAM4C,GAIlBG,EAAYZ,GAASU,GAErBvD,EAAMlH,KAAKiK,IAAIS,EAAU5E,OAAQ6E,EAAU7E,QACtCmB,EAAI,EAAGA,EAAIC,EAAKD,IACrB2B,GAAc4B,EAAcE,EAAUzD,GAAI0D,EAAU1D,GAAIA,GC7JnD2D,IAAAA,cAGX,WAAYC,EAAiBjJ,EAAoB,GAAIkJ,EAAkB,IACrE,mBAHFlD,eACAmD,oBAEqB,iBAARF,EACT/L,KAAK8I,GAAKiD,MACL,CACL,IAAIjD,EAAKoD,SAASC,cAAcJ,GAMhC,IAAK,IAAIK,KAJLtJ,IACFgG,EAAGhG,UAAYA,GAGHkJ,EACZlD,EAAGC,aAAaqD,EAAGJ,EAAKI,IAG1BpM,KAAK8I,GAAKA,UAjBhBxC,wBAgEE,WACE,YAAYwC,wBAGd,WACE,YAAYA,sBAEd,WACE,YAAYA,0BAGd,SAAStF,GAIP,OAHAf,OAAO9I,KAAK6J,GAAKd,QAAQ9I,IACvBoG,KAAKgM,KAAKpS,EAAK4J,EAAI5J,oCAKvB,SAAW4J,EAAgB6I,EAAY,8BAIrC,OAHA5J,OAAO9I,KAAK6J,GAAKd,QAAQ9I,IACvBoG,KAAKsM,OAAO1S,EAAK4J,EAAI5J,GAAMyS,iCAK/B,SAAS7I,GAOP,OANAf,OAAO9I,KAAK6J,GAAKd,QAAQ9I,IAEnBoG,KAAKuM,OAAO3S,IAAQ4J,EAAI5J,KAC1BoG,KAAKuM,OAAO3S,GAAO4J,EAAI5J,+BAY7B,SAAMA,EAAanB,GACjB,OAAyB,IAArBmP,UAAUZ,YACAgF,KAAK,QAAUpS,GACG,IAArBgO,UAAUZ,YACPgF,KAAK,QAAUpS,EAAKnB,4BAiBpC,SAAKmB,EAAanB,GAChB,OAAwB,GAApBmP,UAAUZ,YACAuF,OAAO5C,aAAa/P,IAI9BoG,KAAKuM,OAAO5C,aAAa/P,IAAQnB,GACnCuH,KAAKuM,OAAOxD,aAAanP,KAAQnB,iCAUrC,SAAOmB,EAAanB,EAAY4T,EAAY,8BAC1C,OAAwB,GAApBzE,UAAUZ,YACAwF,MAAMC,eAAeJ,EAAWzS,IAI1CoG,KAAKwM,MAAMC,eAAeJ,EAAWzS,IAAQnB,GAC/CuH,KAAKwM,MAAME,eAAeL,EAAWzS,EAAKnB,qCAS9C,SAAakU,GACX,MAAO,CACL,IAAI3M,KAAKuM,OAAO5C,aAAagD,MAAc3M,KAAK4M,4BAIpD,YAAS3T,GACP,OAAOA,EAAKoJ,IAAIzI,QACF2S,OAAO5C,aAAa/P,0BAOpC,YAAUX,GACR,OAAOA,EAAKoJ,IAAIzI,QACF2S,OAAOM,MAAMjT,8BAO7B,SAAWA,GAGT,OAFAoG,KAAKuM,OAAOvD,gBAAgBpP,mCAQ9B,SAAYA,GAEV,OADAoG,KAAKuM,OAAOM,MAAMC,eAAelT,0BAOnC,SAAGmT,GACD,YAAYR,UAAYQ,EAAajE,IAAMiE,wBAM7C,SAAMhB,GACJ,YAAYQ,OAAOS,QAAQ3H,gBAAkB0G,EAAI1G,qCAMnD,SAAQ4H,GAIN,IAHA,IAAIC,EAAYlN,KACZmN,GAAW,IAENA,EAAWD,EAAKE,SAASH,KAAO,CACvC,IAAIC,EAAKpE,GAAGuE,WAGV,YAFAH,EAAOpB,EAAIwB,OAAOJ,EAAKpE,GAAGuE,YAM9B,OAAIF,EACKD,2BAMX,WAEE,IAAKlN,KAAKuM,OAAQ,MAAO,GAEzB,MAAMgB,EAAcvN,KAAKwN,SAEzB,OAAID,YACSA,EAAYpJ,QAAQnE,OAExB,CAACA,4BAMZ,WACE,OAAO8L,EAAIwB,OAAOtN,KAAKuM,OAAOc,qCAGhC,WACE,QAASrN,KAAKuM,OAAOc,sCAMvB,YAAepU,SAEb,cADKsT,OAAOkB,WAAUC,eAAUzU,gCAOlC,SAASgU,GACP,QAAKjN,KAAKuM,OAAOkB,gBACLlB,OAAOkB,UAAUE,SAASV,2BAMxC,YAAYhU,SAGV,cAFKsT,OAAOkB,WAAUG,YAAO3U,oCAQ/B,SAAagU,GACEjN,KAAKwN,SAEXvC,WAAWvI,QAAQkC,IACxBA,EAAGiJ,YAAYZ,KAGjBjN,KAAK8N,SAASb,8BAOhB,SAAYA,EAAac,GAEvB,OADA/N,KAAKuM,OAAOkB,UAAUO,OAAOf,EAAKc,4BAOpC,SAAKrJ,GACH,YAAoB,IAATA,OACG6H,OAAO0B,WAGD,iBAATvJ,EACT1E,KAAKuM,OAAO0B,UAAYvJ,EAExB1E,KAAKkO,QAAQC,OAAOzJ,iCASxB,SAAS0J,GACP3C,GAAQzL,KAAMoO,6BAKhB,SAAY1J,EAAc2J,EAAqB,OAC7C5C,GAAQzL,KAAM8L,EAAIwB,OAAOe,GAAa3J,KAAKA,iCAM7C,SAAeA,EAAW2J,EAAc,OACtC5C,GAAQzL,KAAO8L,EAAIwB,OAAOe,GAAa3J,aAAaA,WAAsB6G,WAAWA,gCAMvF,SAAK+C,GACH,YAAY/B,OAAOgC,cAAcD,oBAMnC,SAAEA,GACA,IAAI5F,EAAO1I,KAAKwO,KAAKF,GACrB,OAAO5F,EAAOoD,EAAIwB,OAAO5E,GAAQ,4BAMnC,SAAQ4F,GACN,OAAOtJ,MAAMyJ,KAAKzO,KAAKuM,OAAOmC,iBAAiBJ,sBAGjD,SAAGA,GAED,OADUtO,KAAK2O,QAAQL,GACZjM,IAAIqG,GAAQoD,EAAIwB,OAAO5E,yBAGpC,WACE,KAAO1I,KAAKuM,OAAOhB,YAAYvL,KAAKuM,OAAOnB,YAAYpL,KAAKuM,OAAOhB,YACnE,kCAIF,SAAOzC,GAOL,OALE9I,KAAKuM,OAAOlB,YADI,iBAAPvC,EACeoD,SAAS0C,eAAe9F,GAEvBA,EAAWA,IAAMA,+BAM9C,SAAQA,GAON,OALE9I,KAAKuM,OAAOsC,QADI,iBAAP/F,EACWoD,SAAS0C,eAAe9F,GAEvBA,EAAWA,IAAMA,mCAM1C,SAAYpE,GACV,IAAIoK,EAAOhD,EAAIwB,OAAO,OAAO5I,KAAKA,GAIlC,OAFA1E,KAAK6O,QAASC,EAAaC,0BAEpBD,4BAGT,SAAWpK,GACT,IAAIoK,EAAOhD,EAAIwB,OAAO,OAAO5I,KAAKA,GAIlC,OAFA1E,KAAKmO,OAAQW,EAAaC,0BAEnBD,wCAMT,WACE,MAAMtI,EAAOxG,KAAKiL,WAElB,IAAImD,EAAWlC,SAAS8C,yBAGxB,OAFAxI,EAAK9D,QAAQuM,GAAOb,EAAS/C,YAAY4D,EAAInG,KAEtCsF,0BAMT,SAAStI,GAKP,OAJQA,EAAOgD,GAAKhD,EAAOgD,GAAKhD,GAE9BuF,YAAYrL,KAAKuM,mCAKrB,WAKE,OAJIvM,KAAKuM,OAAOc,YACdrN,KAAKuM,OAAOc,WAAWjC,YAAYpL,KAAKuM,wCAS5C,SAAYzD,GAEV,OADA9I,KAAKuM,OAAOnB,YAAYtC,EAAGA,IAAMA,4BASnC,SAAKrQ,GACH,QAAqB,IAAVA,EACT,YAAY8T,OAAOpC,YAEnB,IAAI+E,EAAmBzW,EAWvB,OATIA,aAAiBqT,IACnBoD,EAAWzW,EAAM0W,QAIfnP,KAAKuM,OAAOpC,cAAgB+E,IAC9BlP,KAAKuM,OAAOpC,YAAc+E,2BAiBhC,SAAItV,EAA8CnB,GAChD,MAAMqQ,EAAK9I,KAAKuM,OAChB,GAAmB,iBAAR3S,QAAqC,IAAVnB,EACV,IAAtBmB,EAAIgM,QAAQ,YAAiC,IAAVnN,EACrCqQ,EAAG+D,MAAMuC,YAAYxV,EAAKnB,GAE1BqQ,EAAG+D,MAAMjT,GAAOnB,eAEM,IAARmB,EAAqB,CACrC,GAAmB,iBAARA,EACT,OAAOyV,iBAAiBvG,GAAIlP,GAE5B6I,OAAO6M,QAAQ1V,GAAK8I,QAAQ,EAAE6M,EAAU9W,MACP,IAA3B8W,EAAS3J,QAAQ,YAAgC,IAAVnN,EACzCqQ,EAAG+D,MAAMuC,YAAYG,EAAU9W,GAE/BqQ,EAAG+D,MAAM0C,GAAY9W,IAM7B,yJAGF,YAAqB+N,GACnB,IAAIgJ,EAAMH,iBAAiBrP,KAAKuM,QAE5B/I,EAAM,GAKV,OAJAgD,EAAK9D,QAAQkC,IACXpB,EAAIoB,GAAM4K,EAAI5K,KAGTpB,+BAMT,YAAgBgD,GACd,MAAMsC,EAAK9I,KAAKuM,OAIhB,IAHA,IAAIM,EAAQ,GAERzE,EAAMU,EAAG+D,MAAM7F,OACVmB,EAAI,EAAGA,EAAIC,EAAKD,IAAK,CAC5B,IAAIvO,EAAMkP,EAAG+D,MAAM1E,GAEnB0E,EAAMjT,GAAOkP,EAAG+D,MAAMjT,GAOxB,OAJA4M,EAAK9D,QAAQ9I,IACXiT,EAAMjT,GAAOoG,KAAKwP,IAAI5V,KAGjBiT,yBAMT,SAAQpU,GAEN,YAAqB,IAAVA,EADAuH,KAAKuM,OAEJM,MAAM4C,qCAMpB,SAAS7V,GACP,OAAO8V,WAAW1P,KAAKwP,IAAI5V,0BAG7B,SAAOA,GACL,OAAO+V,SAAS3P,KAAKwP,IAAI5V,sBAO3B,SAAGA,EAAanB,GACd,YAAY+W,IAAI5V,KAAQnB,2BAG1B,WACE,YAAY8T,OAAOqD,4CAGrB,WACE,YAAa9G,GAAqB+G,+BAGpC,WACE,MAA6C,aAAjCtD,OAAOS,QAAQ8C,wCAG7B,WACE,MAAMhH,EAAK9I,KAAKuM,OAChB,GAAIvM,KAAK+P,QAAS,CAChB,MAAMC,EAAYhQ,KAAKwN,SAASlJ,OAC1B2L,EAAMjQ,KAAKsE,OAEjB,MAAO,CACLrC,EAAGgO,EAAIhO,EAAI+N,EAAU/N,EACrBE,EAAG8N,EAAI9N,EAAI6N,EAAU7N,EACrB+N,IAAKD,EAAIhO,EAAI+N,EAAU/N,EACvBkO,KAAMF,EAAI9N,EAAI6N,EAAU7N,EACxBiO,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,QAIhB,MAAO,CACLpO,EAAG6G,EAAGwH,WACNnO,EAAG2G,EAAGyH,UACNL,IAAKpH,EAAGyH,UACRJ,KAAMrH,EAAGwH,WACTF,MAAOtH,EAAG0H,YACVH,OAAQvH,EAAG2H,oCAIf,WACE,IAAInM,EAAOtE,KAAKsE,OAEZoM,EAAY5E,EAAI6E,eAChBC,EAAa9E,EAAI+E,gBAErB,MAAO,CACLX,IAAK5L,EAAK4L,IAAMQ,EAChBP,KAAM7L,EAAK6L,KAAOS,6BAItB,WACE,YAAYE,SAASX,8BAGvB,WACE,YAAYW,SAASZ,4BAGvB,WACE,OAAIlQ,KAAKuM,OAAOM,MAAMqD,IACb,CACLA,IAAKR,WAAW1P,KAAKwP,IAAI,QACzBW,KAAMT,WAAW1P,KAAKwP,IAAI,eAGhBlL,2BAIhB,WACE,MAAO,CAACtE,KAAKoQ,QAASpQ,KAAKqQ,+BAG7B,WACE,YAAY9D,OAAOiE,aAAexQ,KAAKsE,OAAO8L,kCAGhD,WACE,YACOA,QACLpQ,KAAK+Q,SAAS,gBACd/Q,KAAK+Q,SAAS,uCAIlB,WACE,YAAYxE,OAAOkE,cAAgBzQ,KAAKsE,OAAO+L,oCAGjD,WACE,YACOA,SACLrQ,KAAK+Q,SAAS,eACd/Q,KAAK+Q,SAAS,qCAOlB,SAAItY,GACF,QAAqB,IAAVA,EACT,YAAYuY,QAAQvY,cACM,IAAVA,EAAuB,CACvC,IAAIwY,EAAYxY,EAEZA,aAAiBqT,EACnBmF,EAAYxY,EAAMmU,MAElB5M,KAAKgR,QAAQvY,MAAQwY,EAMzB,mCAGF,SAAS3C,GACP,OAAItO,KAAKuM,QAEFvM,KAAKuM,OAAO2E,QAEblR,KAAKuM,OAAO2E,QAAQ5C,aAGZd,SAAS0D,QAAQ5C,2BAOjC,WACE,YAAY0C,QAAQvY,yBAGtB,WACE,YAAYuY,QAAQG,MAAQnM,MAAMyJ,KAAKzO,KAAKgR,QAAQG,OAAS,uBAG/D,SAAKC,EAAc,SAGjB,OAFApR,KAAKuM,OAAOM,MAAMwE,QAAyB,QAAfD,EAAwBA,EAAc,iCAKpE,WAGE,OAFApR,KAAKuM,OAAOM,MAAMwE,QAAU,kCAK9B,WACE,MAAsC,cAA1B9E,OAAOM,MAAMwE,8BAG3B,WACE,OAAQrR,KAAKsR,+BAMf,SAAOvD,GACL,IAAIwD,EAAcvR,KAAKsR,SAEvB,OAAwB,GAApB1J,UAAUZ,OACR+G,OACUyD,YAEAC,OAGVF,OACUC,YAEAC,qCAKlB,WACEzR,KAAKuM,OAAOmF,8CAMd,SAAeC,GAEb,OADA3R,KAAKuM,OAAOqE,YAAce,mCAO5B,SAAcA,GAEZ,OADA3R,KAAKuM,OAAOmE,WAAaiB,mCAO3B,SAAajB,GAEX,OADA1Q,KAAKuM,OAAOmE,UAAYA,oCAO1B,SAAcE,GAEZ,OADA5Q,KAAKuM,OAAOqE,WAAaA,gCAI3B,WACE,OAAI5Q,KAAKuM,SAAWL,SAAS0F,KACpB9F,EAAI6E,oBAGDpE,OAAOmE,oCAGrB,WACE,OAAI1Q,KAAKuM,SAAWL,SAAS0F,KACpB9F,EAAI+E,qBAGDtE,OAAOqE,uCAGrB,WACE,YAAYrE,OAAOsF,wCAGrB,WACE,YAAYtF,OAAOuF,8BASrB,SAAGtQ,EAAsCC,EAAkCsQ,GAGzE,OAFA/R,KAAKuM,OAAO5K,iBAAiBH,EAAWC,EAAUsQ,2BAKpD,SAAIvQ,EAAsCC,GAGxC,OAFAzB,KAAKuM,OAAO1K,oBAAoBL,EAAWC,kCAK7C,WACE,YAAY8K,kCAMd,SAAYR,EAAUjJ,EAAY,GAAIkP,EAAQ,GAAIxC,EAAM,IACtD,IAAIyC,EAAWnG,EAAIwB,OAAOvB,EAAKjJ,EAAWkP,GAK1C,OAJAC,EAASzC,IAAIA,GAEbxP,KAAKmO,OAAO8D,GAELA,0BAGT,WACE,OAAOnG,EAAIwB,OAAOtN,KAAKuM,OAAO2F,2CAGhC,WACE,IAAI5G,EAAUtL,KAAKuM,OAAO2F,kBAE1B,IAAK5G,EACH,MAAO,GAGT,IAAIzG,EAAU,GAEd,GACEA,EAAQ0C,KAAKuE,EAAIwB,OAAOhC,IACxBA,EAAUA,EAAQ6G,yBACX7G,GAET,OAAOzG,6BAGT,WACE,YAAY0H,OAAOtB,SAASjE,8BAM9B,SAAQoL,GAMN,OAJIpS,KAAKuM,OAAOc,YACdrN,KAAKuM,OAAOc,WAAW/C,aAAa8H,EAAWtJ,IAAMsJ,EAAYpS,KAAKuM,yCAU1E,SAAa8F,EAA0BD,GAGrC,OAFApS,KAAKuM,OAAOjC,aAAa8H,EAAWtJ,IAAMsJ,EAAYC,EAAWvJ,IAAMuJ,+BAKzE,SAAQC,GAAY,GAClB,OAAwB,GAApB1K,UAAUZ,SACHhH,KAAKgR,QAAQuB,SAGxBvS,KAAKgR,QAAQuB,UAAYD,6BAM3B,WAGE,OAFAtS,KAAKuM,OAAOiG,kCAKd,WAGE,OAFAxS,KAAKuM,OAAOkG,mCAKd,WAEE,GAAqC,SAAjCzS,KAAKgM,KAAK,mBAA+B,CAC3C,IAAI0G,EAAQxG,SAASyG,cACrBD,EAAME,mBAAmB5S,KAAKuM,QAC9B,IAAIsG,EAAMC,OAAOC,qBACjBF,GAAAA,EAAKG,wBACLH,GAAAA,EAAKI,SAASP,QAEd1S,KAAKgR,QAAQkC,SAGf,gCAGF,WAGE,OAFAlT,KAAKuM,OAAO4G,oCA54Bd,SAAepH,EAAiBjJ,EAAoB,GAAIkJ,EAAkB,IACxE,WAAWF,EAAIC,EAAKjJ,EAAWkJ,+BAMjC,SAAqBoH,GACnB,IACI5M,EADMsF,EAAIwB,OAAO,OACL5I,KAAK0O,GAAoBnI,WAEzC,OAAIzE,EAAKQ,OACA8E,EAAIwB,OAAO9G,EAAK,GAAGsC,qCAM9B,WACE,OAAO5H,KAAKiK,IACV2H,OAAOO,YACPnH,SAASoH,gBAAgB5C,UACzBxE,SAAS0F,KAAKlB,wCAIlB,WACE,OAAOxP,KAAKiK,IACV2H,OAAOS,YACPrH,SAASoH,gBAAgB1C,WACzB1E,SAAS0F,KAAKhB,iCAIlB,SAAalM,GAEX,OADa,IAAI8O,WACHC,gBAAgB/O,EAAM,iCAGtC,WACE,OAAOoH,EAAIwB,OAAOpB,SAAS0F,eClElB8B,cAGT,WAAahN,EAAwBhF,EAAqB,oBAF1DgF,oBACAhF,eAEI1B,KAAK0G,QAAUA,EACf1G,KAAK0B,QAAUA,SALvB4E,8BASI,gCAKA,mCAKA,kCAKA,kCAIA,SAAO1G,GACH,YAAY8G,QAAQ/G,OAAOC,sBAG/B,mCAIA,qBC/BJ,MAAM+T,GAAuB,CACzBC,YAAc,EACdC,WAAa,EACbC,WAAa,EACbC,SAAW,EACXC,WAAa,GAMXC,GAAgB,CACpBC,UAAa,YAGTC,GAAmB,CACvBD,WAAa,OAGFE,oBAAwBV,8FACjCW,oBACAC,mBACAC,wDAGA,WACIvU,KAAKwU,UAEAxU,KAAKqU,aACRrU,KAAKqU,WAAarU,KAAK0G,QAAQ+N,YAAY7b,IAG7CoH,KAAKqU,WAAW3R,QAAS9I,GAAgBoG,KAAK0U,cAAc9a,2BAGhE,WACIoG,KAAK2U,+CAIT,+BACSC,kBAAelS,QAASc,IAC3BxD,KAAK4B,eAAe4B,KAEtBxD,KAAK6U,6CAGT,UAAerT,UAAEA,EAAFD,IAAaA,EAAbE,SAAkBA,IAC3BF,GACFuT,GAAMlT,eAAeL,EAAKC,EAAWC,8BAIzC,WAKI,OAJKzB,KAAKsU,WACRtU,KAAK6U,oBAGKP,oCAGhB,SAAW9Q,uBACFoR,kBAAerN,KAAK/D,+BAG7B,WACIxD,KAAKsU,UAAY,4BAIrB,SAAWxL,EAAawF,GACpB,OAAIxF,EACEA,EAAGoI,QAAQ5C,GACNxF,OAEGiM,UAAUjM,EAAGiB,cAA0BuE,mCAKzD,SAAajO,EAAQ2U,GACjB,YAAYD,UAAU1U,EAAEyF,QAAUzF,EAAE4U,WAAYD,EAAYE,sCAGhE,SAAcF,EAA8BvT,GAC1C,OAAIuT,EAAYE,cACFC,qBAAqBH,EAAavT,QAElC2T,oBAAoBJ,EAAavT,sCAIjD,SAAqBuT,EAA8BvT,GAC/C,OAAQpB,IACN,IAAIgV,EAAcrV,KAAKsV,iBAAiBjV,EAAG2U,EAAavT,GACxD,GAAIiC,GAAe2R,GACjB,OAAOA,uCAKf,SAAsBL,EAA8BvT,GAChD,OAAQpB,IACN,MAAMkV,EAAiBvV,KAAKwV,YAAYnV,EAAG2U,GAE3C,GAAIO,EAAgB,CAElBlV,EAAEoV,IAAM3J,GAAIwB,OAAOiI,GAEnB,IAAIF,EAAcrV,KAAKsV,iBAAiBjV,EAAG2U,EAAavT,GACxD,GAAIiC,GAAe2R,GACjB,OAAOA,oCAMjB,SAAkBhV,EAAQ2U,EAA8BvT,GACpD,MAAMiF,EAAU1G,KAAK0G,QASrB,GARArG,EAAEqV,GAAKZ,GAAM9S,MAAM3B,GAEf2U,EAAYjO,cAAcC,QAC5BgO,EAAYjO,cAAcG,MAAOyO,GACxBjP,EAAQiP,EAAO7P,QAAQ8P,KAAKlP,EAASrG,EAAGsV,EAAO5P,QAItD/F,KAAK6V,eAAexV,EAAG2U,GAAc,CACvC,IAAIK,EAAc5T,EAASpB,EAAGA,EAAEoV,IAAKpV,EAAEqV,IAQvC,OANoB,IAAhBL,GAAyBL,EAAYc,aAAa9O,QACpDgO,EAAYc,aAAapT,QAAQqT,GACxBrP,EAAQqP,EAAMjQ,QAAQ8P,KAAKlP,EAASrG,EAAG0V,EAAMhQ,QAIjDsP,iCAIb,SAAgBhV,EAAQ2U,GACpB,MAAMtO,EAAU1G,KAAK0G,QAErB,IAAIsP,GAAa,EACbhB,EAAYiB,MAAMjP,SACpBgP,IACG3V,EAAEsF,MAAOqP,EAAYiB,MAAMrQ,QAAQvF,EAAEsF,KAAKN,gBAAkB,KAC5DhF,EAAEzG,KAAMob,EAAYiB,MAAMrQ,QAAQvF,EAAEzG,IAAIyL,gBAAkB,GAI/D,IAAI6Q,GAAa,EAgBjB,OAfIlB,EAAYmB,gBAAgBnP,SAC9BkP,EAAalB,EAAYmB,gBAAgBjP,MAAMpH,IAC7C,IAAIsW,EAAa1P,EAAQ5G,GACzB,OAAI+D,GAAWuS,IAAeA,EAErBA,EAAWR,KAAKlP,EAASrG,IACvBqD,GAAe0S,MAGfA,KAMRJ,GAAcE,sCAGzB,SAAqB3U,GACjB,MAAMmF,EAAU1G,KAAK0G,QACrB,IAAIoC,EAQJ,OALEA,EADiB,iBAARvH,GAAoBA,EACxBmF,EAAQ2P,KAAK9U,IAAQmF,EAAQnF,IAAQuR,OAAOvR,GAE5CmF,EAAQoC,IAAMpC,EAAQuI,KAAOvI,EAAQ4P,MAGxCxN,aAAcgD,GACThD,EAAGyN,aAGLzN,kCAGX,SAAkBtH,GAChB,OAAOyS,GAAczS,IAAcA,oCAGrC,SAAoBA,GAClB,OAAO2S,GAAiB3S,GAAaA,EAAY,wCAOnD,SAAuBA,EAAmBgV,GACtC,MAAM9P,EAAU1G,KAAK0G,QACrB,IAAInB,EAAMiR,EAGV,MAAML,EAAkB5Q,EAAIG,OAAOC,KAAUe,EAAQf,KAG9C8Q,EAAQX,GAAgBxQ,GAAqBC,EAAK,UAClDmR,EAAS3P,GAAiBzB,GAAqBC,EAAK,WACpDoR,EAAWC,GAAmBtR,GAAqBC,EAAK,aACxDsR,EAAQC,GAAgBxR,GAAqBC,EAAK,UAClDwR,EAAWC,GAAmB1R,GAAqBC,EAAK,aACxD0R,GAAY3R,GAAqBC,EAAK,WAGvC2R,YACDf,EACAM,EACAC,EACAG,EACAF,EACAI,EACAE,GAGL,IAAIhB,EAAQ1Q,EACTG,OAAOC,IAAwC,IAAhCuR,EAAatR,QAAQD,IACpCtD,IAAIsD,GAAQA,EAAKN,eAEpB,MAAO,CACL7D,UAAWxB,KAAKmX,iBAAiB3V,GACjC4V,gBAAiBpX,KAAKqX,mBAAmB7V,GACzCyU,MAAAA,EACAgB,SAAAA,EACAnB,aAAAA,EACA/O,cAAAA,EACA+P,aAAAA,EACAF,gBAAAA,EACAI,gBAAAA,EACAb,gBAAAA,8BAKN,SAAanB,EAA8BvT,GACvCuT,EAAYvT,SAAWzB,KAAKsX,aAAatC,EAAavT,GACtDzB,KAAKuX,WAAWvC,GAEhB,IAAItT,IAA2CsT,EAAYiC,SAASjQ,OAEhE2M,GAAqBqB,EAAYxT,aACnCE,EAAU,CACR8V,SAAS,EACTC,QAAS/V,UAITsT,GAAAA,EAAazT,KAEfuT,GAAMxT,kBACJ0T,SAAAA,EAAazT,IACbyT,EAAYxT,UACZwT,EAAYvT,SACZC,0CAMR,SAAyBsT,EAA8BvT,GAErD,GAAoC,cAAhCuT,EAAYoC,gBAAiC,CAC/C,IAAIlU,EAAQ,IAKZ,OAHI8R,EAAY8B,aAAa9P,SAC3B9D,GAAS8R,EAAY8B,aAAa,GAAGhR,QAEhC,IAAI7M,KAEJ+G,KAAKuU,WAKJmD,YAAYC,MAAQ3X,KAAKuU,UAAUqD,KAAO1U,GAC5CzB,eAAYxI,GAGd+G,KAAKuU,UAAY,MARjBvU,KAAKuU,UAAY,CACbqD,KAAMF,YAAYC,QAa5B,OAAOlW,iCAGT,UAAmBD,EAAWD,KAAQ2T,GAAqBsB,EAA8B/U,GACrF,IAAIuT,EAAchV,KAAK6X,sBAAsBrW,EAAWgV,GAExDxB,EAAYzT,IAAMvB,KAAK8X,qBAAqBvW,GAC5CyT,EAAYE,SAAWA,EAAShc,KP5Rf,KO+Rb8b,EAAY4B,gBAAgB5P,OAE9BvF,EAAWwB,GAASxB,GADAuT,EAAY4B,gBAAgB,GAAG9Q,QAE1CkP,EAAYgC,gBAAgBhQ,SAErCvF,EAAW6B,GAAS7B,GADAuT,EAAYgC,gBAAgB,GAAGlR,SAKrDrE,EAAWzB,KAAK+X,wBAAwB/C,EAAavT,GAErDzB,KAAKsB,YAAY0T,EAAavT,gCAGlC,SAAeD,GACX,IAAIqD,EAAoB,GAQxB,OANArD,EAAU9I,MPvTY,KOuTUgK,QAAQrC,IACpC,IAAIkF,EAAMlF,EAAE3H,MPxTM,KO0TlBmM,EAAQ0C,KAAKH,MAAMvC,EAASU,KAGzBV,+BAQX,SAAejL,GACX,MAAM8M,EAAU1G,KAAK0G,QACrB,IAAI8P,EAAqB5c,EAAIlB,MAAMC,GAAiB0J,IAAIuC,GAAMA,EAAGoB,QAAQN,OAAOsS,SAEhF,IAAIC,EAASzB,EAAmB0B,QAC5BC,QAAyBF,SAAAA,EAAQvf,0BAA2B,GAE5D6M,QAAM4S,SAAAA,EAAwBzf,MPrUjB,KOuUjB,GAAI6M,EAAK,CACP,IAAI6S,EAAapY,KAAKqY,cAAc9S,EAAI,IAEpC9D,EAAWiF,EAAQ9M,GAAK0e,KAAK5R,GAEjC,IAAI,IAAIyB,EAAI,EAAGC,EAAMgQ,EAAWpR,OAAQmB,EAAGC,EAAKD,IAC9C5C,EAAI,GAAK6S,EAAWjQ,GACpBnI,KAAKuY,gBAAgBhT,EAAKiR,EAAoB/U,aC3V1D,MAAM+W,GAAwB,CAACvG,EAAgBrY,EAAuBnB,KAEpE,GAAY,YAARmB,KAMe,UAARA,KASQ,UAARA,EAoBQ,aAARA,GACY,mBAAVnB,OAMQ,IAAVA,EACTwZ,EAASwG,WAAW7e,GAES,aAAzBqY,EAASnJ,GAAGsB,UAAmC,UAARxQ,GAExB,SAARA,GAA0B,gBAARA,EAD3BqY,EAAS9C,KAAK1W,GAGG,cAARmB,GAA+B,SAARA,EAChCqY,EAASvN,KAAKjM,GACG,aAARmB,EACTqY,EAASyG,WAAWjgB,GACH,YAARmB,EACTqY,EAAS0G,cAAclgB,GACN,UAARmB,EACTqY,EAASrF,IAAInU,GAEbwZ,EAASjG,KAAKpS,EAAKnB,GArBnBA,SAjBF,GAAIuM,MAAMC,QAAQxM,GAChBwZ,EAASnE,eAATmE,QAAsBxZ,SAAAA,EAAQiN,OAAOsS,2BN4ElBvf,GACrB,MAAuB,iBAATA,IAAsBuM,MAAMC,QAAQxM,cAO7BA,GACrB,MAAuB,iBAATA,EAR+CmgB,CAASngB,KAAWmL,GAASnL,IAAoB,OAAVA,EM5EzFogB,CAASpgB,GAAQ,CAC1B,MAAMkB,EAAO8I,OAAO9I,KAAKlB,GACzB,IAAI,IAAI0P,EAAI,EAAGC,EAAMzO,EAAKqN,OAAQmB,EAAIC,EAAKD,IAAK,CAC9C,MAAMrF,EAAYnJ,EAAKwO,GAGvB8J,EAAS6G,YAAYhW,EAFHrK,EAAoBqK,UAKxCmP,EAAS1F,OAAOzJ,UAAarK,MArBT,iBAAXA,GACTwZ,EAASzC,IAAI/W,QAPdwZ,EAAkBxC,QAAQhX,QA2DlBsgB,oBAAoBrF,8FAC7BsF,qDAEA,YAAS/f,GACP+G,KAAKiZ,oBAAYhgB,2BAKnB,YAAaA,SACN+G,KAAKgZ,eACRhZ,KAAKgZ,aAAehZ,KAAK0G,QAAQ+N,YAAY3b,IAO/C,MAAMogB,WAAWlZ,KAAKgZ,qBAALG,EAAmBzT,OAAO0T,IACvC,IAAKngB,EAAK+N,OAAQ,SAClB,IAAKqS,EAAczZ,GAAMwZ,EAAqB1gB,MAAMC,IAE/C2gB,EAAGC,GAASF,EAAa3gB,MAAM,KAEpC,OAAOO,EAAK2M,QAAQ2T,IAAW,UAGjCL,GAAAA,EAAUxW,QAAQ8W,MAAAA,IAChB,MAAMC,EAAazZ,KAAK0G,QAAQ2S,GAChC,IAAKA,EAAczZ,GAAMyZ,EAAa3gB,MAAMC,GAE5C,MAAM+gB,EAAY1Z,KAAKL,OAAOC,GAC9B,IAAI+Z,EAAczZ,GAEQ,iBAAfwZ,GAAyC,KAAdA,EACpCC,EAAc9Z,GAAoB6Z,GACJ,mBAAdA,IAChBC,EAAcD,GAGhB,MAAME,EAASP,EAAa3gB,sBAAsB,GAClD,IAAIuZ,EAAWjS,KAAK0G,QAAQ2P,KAAKuD,GAGjC,MAAMC,EAAsC,mBAAjBF,GAA+BA,EAAY/D,KAAK5V,KAAK0G,SAChF,GAAIuL,GAAY4H,EAAa,CAC3B,MAAMhV,QAAiB4U,EAAW7D,WAAX6D,GAAgBzZ,KAAK0G,gBAAYzN,IAExD,IAAK4L,EAAS,OAEd,MAAMlL,EAAO8I,OAAO9I,KAAKkL,GACzB,IAAI,IAAIiV,EAAkB,EAAG1R,EAAMzO,EAAKqN,OAAQ8S,EAAkB1R,EAAK0R,IAAmB,CACxF,MAAMlgB,EAAMD,EAAKmgB,GAGjBtB,GAAsBvG,EAAUrY,EAFlBiL,EAAQjL,+BAQhC,WACEoG,KAAKgZ,kBAAe7V,WC1I1B,MAAM4W,GAAW,iBAEDC,KACZ,IAAIrI,GAAK,IAAIsI,MAAOC,UAMpB,MALW,gBAAgBhV,QAAQ6U,GAAU,SAAUI,GACnD,IAAIC,GAAKzI,EAAqB,GAAhBzQ,KAAKmZ,UAAiB,GAAK,EAEzC,OADA1I,EAAKzQ,KAAKoZ,MAAM3I,EAAK,KACR,KAALwI,EAAWC,EAAS,EAAJA,EAAU,GAAM3P,SAAS,eAKzC8P,KACZ,IAAI5I,GAAK,IAAIsI,MAAOC,UAMpB,MALW,YAAYhV,QAAQ6U,GAAU,SAAUI,GAC/C,IAAIC,GAAKzI,EAAqB,GAAhBzQ,KAAKmZ,UAAiB,GAAK,EAEzC,OADA1I,EAAKzQ,KAAKoZ,MAAM3I,EAAK,KACR,KAALwI,EAAWC,EAAS,EAAJA,EAAU,GAAM3P,SAAS,wBCOzD,MACM+P,GAAW1O,GAAIwB,OAAO,WAOfmN,cAUX,WAAYC,EAA6B7P,mBATzC5K,kBACAF,sBACAkL,qBACAqJ,sBACA1U,eACA+a,4BACAC,qBACAC,yBACAC,+BAeQC,oBAORjS,eACAmG,gBACAqH,kBACAD,iBACAqE,gBACAlN,mBACA3C,kBACAxE,mBACAoB,uBACAuT,uBA7BEhb,KAAKC,MAAQ,GACbD,KAAKD,UAAY,GACjBC,KAAKqW,KAAO,GACZrW,KAAKiL,SAAW,GAChBjL,KAAKsU,UAAY,GACjBtU,KAAKJ,GAAKoa,KACVha,KAAK2a,gBAAkB,IAAIrY,IAC3BtC,KAAK4a,SAAW5a,KAAKib,oBAErBjb,KAAKkb,mBAAmBR,EAAK7P,GAE7B7K,KAAKmb,wBAtBT7U,wBAyBE,WACE,YAAYyU,aAEd,SAAkBtiB,GAChBuH,KAAK+a,QAAUtiB,oCAkBjB,SAAoBiiB,EAAU7P,EAAQ,IAEpC7K,KAAK0a,IAAMA,GAAO,GAClB1a,KAAKwN,OAASxN,KAAK0a,IACnB1a,KAAK6K,MAAQA,EACb7K,KAAKqG,OAAS2T,KACdha,KAAKyH,WAAazH,KAAKob,YAAYzS,mCAMrC,WACE3I,KAAKgb,gBAAkBhb,KAAKqb,8CAG9B,WACE,MAAO,CACL,IAAItC,GAAY/Y,MAChB,IAAIoU,GAAgBpU,gCAUxB,WACE,MAAO,2BAST,SAASC,EAAQ,GAAIqb,GAAS,GAC5Btb,KAAKD,UAAYC,KAAKC,MACtBD,KAAKC,MAAQwC,OAAO8Y,OAAO,GAAIvb,KAAKC,MAAOA,GACvCqb,GACFtb,KAAKwb,kCAWT,SAAY5hB,EAAsB0hB,GAAS,GACzCtb,KAAKyb,SAAS,CACZ7hB,CAACA,IAAQoG,KAAKC,MAAMrG,IACnB0hB,2BASL,SAAS7iB,GACP,MAAMmH,qBAA6B2a,OAInC,OAFAva,KAAK2a,gBAAgB/X,IAAIhD,EAAInH,GAEtBmH,iCAMT,SAAgBA,GACd,IAAqB,IAAjBgE,GAAShE,GACX,OAAOA,EAGT,IAAInH,EAAQmH,EAQZ,OANII,KAAK2a,gBAAgBhY,IAAI/C,KAC3BnH,EAAQuH,KAAK2a,gBAAgB5X,IAAInD,GAEjCI,KAAK2a,gBAAgBe,OAAO9b,IAGvBnH,yBAST,SAAQoS,GACN7K,KAAK6K,MAAQA,EACb7K,KAAKC,MAAQ,GACbD,KAAKyb,SAASzb,KAAK2b,aAAa,GAChC3b,KAAK4b,gCAQP,SAAOC,GACL7b,KAAKiP,IAAMjP,KAAK8b,cACdpX;UADS;SAEL1E,KAAK+b,aAGX/b,KAAKqW,KAAKpH,IAAMjP,KAAKiP,IAEjB4M,GACFA,EAAW1N,OAAOnO,KAAKiP,KAIzBjP,KAAKwb,OAGLxb,KAAKgc,wCAGP,WACEhc,KAAKC,MAAQD,KAAK2b,uCASpB,sCAQA,WACE,MAAO,yBAST,YAAU1iB,GACR,MAAMW,EAAMX,EAAKC,KAAK,IACtB,YAAYmd,KAAKzc,gCASnB,SAAc8K,EAAc4W,GAA8B,GAEpDtW,MAAMC,QAAQP,KAChBA,EAAOA,EAAKxL,KAAK,KAGnBwL,EAAOA,EAAKsB,OACZ,MAAMQ,EAAQgU,GAAS9V,KAAKA,GAAeuG,WAG3C,IAAI,IAAI9C,EAAI,EAAGC,EAAM5B,EAAKQ,OAAQmB,EAAIC,EAAKD,IAAK,CAC9C,MAAM8G,EAAMzI,EAAK2B,GAEjB,IAAI8T,EAAMhN,EAAIjD,KA7OO,OA8OjBiQ,IACFjc,KAAKqW,KAAK4F,GAAOhN,GAMnB,IAHA,IAAIoH,EAAOpH,EAAIiN,YACXhP,EAAO,GAEHiP,EAAY,EAAGC,EAAU/F,EAAKrP,OAAQmV,EAAYC,EAASD,IAAa,CAC9E,MAAMrN,EAAOuH,EAAK8F,GAEZxT,EAAOmG,EAAK9C,KAxPC,OAyPfkB,EAAKvE,GACP7D,QAAQuD,QAAQ4T,sBAAwBjc,KAAKyH,aAAczH,MAE3DkN,EAAKvE,IAAQ,EAGf3I,KAAKqW,KAAK1N,GAAQmG,GAItB,OAAKwM,GAAU9U,EAAKQ,OACXR,EAAK,GAGPsF,GAAIwB,OAAOkN,GAASzL,uDAG7B,SAAeD,GACb,IAAIjE,EAAQ,GAGZ,IAAI,IAAIrP,KAAKsT,EAAKvC,OAAO1C,WACvBgB,EAAMrP,EAAE4O,UAAYpK,KAAKqc,gBAAgB7gB,EAAE8gB,WAsB7C,OAnBIzR,EAAK,QACPA,QACKA,EACAlL,GAAOkL,EAAK,SAInBiE,EAAKoN,GAAG,YAAYxZ,QAAS6Z,IAC3B,MAAO5T,EAAMlQ,EAAO+jB,GAAaD,EAAGvK,MAAM,OAAQ,QAAS,aAE3D,IAAIyK,EAAYhkB,GAAS8jB,EAAGpN,OAEV,SAAdqN,IACFC,EAAYC,KAAKC,MAAMF,IAGzB5R,EAAMlC,GAAQ8T,IAGT5R,0CAGT,SAA0B+R,GAGxB,OAF4B/Z,GAAe+Z,IAAiB5c,KAAKgb,gBAAgB4B,iCAKnF,WACc5c,KAAKiP,IAECiN,iBAEVxZ,QAASoM,IAEf,MAAM+N,EAAwB7c,KAAK8c,yBAAyBhO,EAAK9C,KAlTrD,aAoTZ,GAAI6Q,EAAuB,CACzB,IAAIhS,EAAQ7K,KAAK+c,cAAcjO,GAG3BkO,EAAUlO,EAAK9C,KA3TA,OA4TnB,MAAIiR,EAAW,KAIXjd,KAAKiL,SAAS+R,IAChBC,EAAWjd,KAAKiL,SAAS+R,IAChBE,QAAQrS,IAGjBoS,EAAW,IAAIJ,EAAsB7c,KAAM6K,GAE3C7K,KAAKiL,SAAS+R,GAAWC,EAASrd,IAAMqd,EAExCA,EAASE,UAIPF,EAASG,uBACXH,EAAShO,QAAKoO,SAASJ,EAASG,cAChCtO,EAAKpB,UAELoB,EAAK5J,QAAQ+X,EAAShO,UAIxBH,EAAKpB,WAMTnK,GAAQvD,KAAKiL,SAAU,CAACrR,EAAK4J,KACvBA,GAAOA,EAAI8Z,qBACDrS,SAASrR,0BAK3B,WACE,GAAIoG,KAAKiP,MAAQjP,KAAKiP,IAAIsO,YASxB,OAPAha,GAAQvD,KAAKiL,SAAU,CAACrR,EAAK4jB,KAC3BA,EAAMF,UAGRtd,KAAKwU,UAELxU,KAAKiP,IAAM,+BAQf,WACEjP,KAAKwb,iCAGP,WAEExb,KAAKyd,YAAY,cAEjBzd,KAAKiZ,WAELjZ,KAAK0d,qCAGPlE,kBAAcvgB,GACP+G,KAAK6a,eACR7a,KAAK6a,aAAe7a,KAAKyU,YAAY5b,IAIvC,MAAM8kB,EAAmB3d,KAAK6a,aAAanV,OAAQ2T,IAC/C,MAAMO,EAASP,EAAa3gB,sBAAsB,GACvBA,MAAMC,GACN0J,IAAKuC,GAAeA,EAAGoB,QAAQ,GAC1D,OAAK/M,EAAK+N,QACH/N,EAAK2M,QAAQgU,IAAW,UAK7B+D,EAAiBjb,QAAQ8W,MAAAA,IAC7B,IAAIoE,EAAavE,EAAa3gB,sBAAsB,GACpD,IAAKkhB,KAAWiE,GAAWD,EAAWllB,MAAMC,GAAiB0J,IAAKuC,GAAeA,EAAGoB,QAEpF6X,EAAUA,EAAQxb,IAAKuC,GAAeA,EAAGoB,QAEzC,MAAM8X,EAAY9F,QAAQ6F,EAAQnY,OAAQd,GAAetJ,EAAQyiB,SAASnZ,IAAKoC,QAE/E,GAAIhH,KAAKqW,KAAKuD,GAAS,OACjBoE,eAAyB3E,IAAczD,cAAK5V,aAAS/G,IAErD+L,MAAMC,QAAQ+Y,KAChBA,EAAcA,EAAY9kB,KAAK,KAIjC,MAAMkV,EAAWpO,KAAK8b,cAAcpX,gBAAnB,KAA0BsZ,IAAe,GACtDF,EACF9d,KAAKqW,KAAKuD,GAAQqE,SAAS7P,GAE3BpO,KAAKqW,KAAKuD,GAAQlV,KAAK0J,MAM7BpO,KAAKke,wCAIP,SAAYC,EAAO,SAAUllB,GAC3B+G,KAAK4a,SAASlY,QAAS0b,GAAoBA,EAAED,SAAFC,EAAWnlB,4BAGxD,YAAaA,GACX+G,KAAKyd,wBAAY,eAAWxkB,4BAU9B,WACE,wCAGF,SAAawI,GACNoC,GAAWpC,IAEhB8B,GAAQvD,KAAKiL,SAAU,CAACqO,EAAG+E,KACzB5c,EAAS4c,6BAIb,WACE,IAAIC,EAAUte,KAAKiP,IAAIzB,SACvBxN,KAAKwU,UACLxU,KAAKmd,OAAOmB,0BAQd,WACEte,KAAKue,aAAcC,IACjBA,EAAehK,YAGjBxU,KAAKyd,YAAY,WACbzd,KAAKiP,KACPjP,KAAKiP,IAAIvB,SAGX1N,KAAKiP,IAAM,KACXjP,KAAKqW,KAAO,GACZrW,KAAKiL,SAAW,+BASlB,WAQE,OANKjL,KAAK8a,qBACR9a,KAAK8a,4BRzfkB2D,EAAcC,EAA0B1b,IAEjE,IAAI2b,EAAIF,EACJ5Z,EAAiB,GACrB,EAAG,CAGC,GAAiB,GAFA8Z,aAAalc,OAG1B,MAGJ,MAAMmc,EAAQnc,OAAOoc,oBAAoBF,GAAGjZ,OAAOiD,GACxC8V,GAAQ5a,GAAW4a,EAAK9V,KAAU+V,EAAc/V,IAG3D9D,EAAQ0C,KAAKH,MAAMvC,EAAS+Z,SACvBD,EAAIlc,OAAOqc,eAAeH,IAGnC,OAAO9Z,EQseqBka,CAAa/e,KAAO2I,GACN,IAA/BA,EAAK/C,QVtgBQ,kBU0gBZkV,8CAGd,SAAYkE,GACV,YAAYD,eAAerZ,OAAQ9L,GAC1BA,EAAIuL,MAAM6Z,wBAMrB,SAAK3e,GACH,OAAOA,GAAKA,EAAEoV,KAAOpV,EAAEoV,IAAIwJ,GAAG5e,EAAEyF,gCAElC,SAASzF,GACP,OAAOA,EAAE6e,gCAEX,SAAU7e,GACR,OAAOA,EAAE8e,kCAEX,SAAW9e,GACT,OAAOA,EAAEK,kCAEX,SAAUL,GACR,OAAOA,EAAE+e,SAAoB,QAAT/e,EAAEzG,KAAiByG,EAAEsF,KAAKC,QAAQ,SAAW,mCAEnE,SAAkBvF,GAChB,OAAqB,IAAdA,EAAEgf,0CAGX,SAAmBhf,GACjB,OAAqB,IAAdA,EAAEgf,gCAGX,SAAShf,GACP,MAAyB,UAAlBA,EAAEif,oCAGX,SAASjf,GACP,MAAyB,UAAlBA,EAAEif,kCAGX,SAAOjf,GACL,MAAyB,QAAlBA,EAAEif,0CAOX,SAAejf,GAEb,OADAA,EAAEkf,mDAIJ,SAAgBlf,GAEd,OADAA,EAAEmf,8BCrjBOC,oBAAkBhF,gBAE7B,WAAYC,EAAuB7P,4BACjC6U,cAAMhF,EAAK7P,IAFL8U,uBAIF9U,EAAM+U,QACRF,EAAKC,gBAAkB9U,EAAM+U,OAG/BF,EAAKG,UAELH,EAAKI,aAELJ,EAAKK,gCAbTzZ,4BAiBE,SAAU0Z,GACRhgB,KAAK2f,gBAAkBK,sBAQzB,WACE,YAAYL,iBAAmB3f,KAAKwN,OAAOyS,8BAO7C,4CAEA,SAAiB5f,EAAW6f,GAC1B,IAAIC,EAAa9f,EAAEuF,QAAQsa,GAC3B,OAAO7f,EAAE+f,OAAOD,EAAa,EAAI,EAAIA,EAAaD,EAAUlZ,mCAQ9D,SAAazB,EAAeC,EAAiB6a,EAAoB,GAC/D,IAAKC,EAASC,GAAUjb,GAAqBC,EAAKC,GAElD,MAAO,CACL8a,EAAQtZ,QAAUuZ,EAAO,GAAGza,OAASua,EACrCC,EACAC,sCAIJ,SAAoBha,EAAc9E,GAChC,IAAI+e,EAAc/e,EAAS6W,KAAKtY,MAIhC,OAHAwgB,EAAYC,eAAiBzgB,KAAKyH,cAAclB,IAChDia,EAAYna,OAASrG,KAAKqG,OAEnBma,sCAWT,WACExgB,KAAKyU,YAAY1b,GAAyB2J,QAAS9I,IACjD,MAAM8mB,EAAS1gB,KAAKmX,iBAAiBvd,wBAE9B+mB,KAAWC,GAAcF,EAAOhoB,MAAMC,GACvCwd,EAAkByK,EAAWve,IAAIuC,GAAMA,EAAGoB,QAAQN,OAAOC,GAAQ3F,KAAK2F,IAAOtD,IAAIyD,KAAYA,OAAAA,MAG5F+a,EAAgBjK,GAAmB5W,KAAK8gB,YAAYF,EAAY,aAChEG,EAAgB/J,GAAmBhX,KAAK8gB,YAAYF,EAAY,aAChEI,EAAYC,GAAqBjhB,KAAK8gB,YAAYF,EAAY,eAC9DM,EAAaC,GAAsBnhB,KAAK8gB,YAAYF,EAAY,eAEvEF,EACGhoB,MAAMC,GACN+M,OAAOd,IAE+B,IAAjCgS,EAAgBhR,QAAQhB,KACW,IAAnCqc,EAAkBrb,QAAQhB,KACU,IAApCuc,EAAmBvb,QAAQhB,KACM,IAAjCoS,EAAgBpR,QAAQhB,IAG7BvC,IAAIuC,GAAMA,EAAGoB,QACbN,OAAOsS,SACPtV,QAAQrC,IAEP,GAAIwD,GAAW7D,KAAKpG,IAAO,CACzB,IAAI6H,EAAWzB,KAAKohB,oBAAoB/gB,EAAGL,KAAKpG,IAChDoG,KAAKigB,OAAOoB,GAAGhhB,EAAGoB,EAAUzB,KAAM6gB,EAAgBE,EAAgBE,EAAkBja,OAAQma,EAAmBna,OAAQmP,6CAUjI,WACEnW,KAAKigB,OAAOqB,OAAOthB,6BAGrB,WACEuhB,8CAEAvhB,KAAKwhB,gDAQP,WACED,+CAEAvhB,KAAK8f,aAEL9f,KAAK+f,2CAWP,SAAK0B,KAAwBxoB,SAC3B+G,KAAKigB,OAAO5Z,OAASrG,KAAKqG,OAC1BrG,KAAKigB,OAAOyB,cAAgB1hB,aACvBigB,QAAO0B,cAAKF,UAAgBxoB,4BAQnC,SAAUwI,GACRzB,KAAKigB,OAAO2B,SAASngB,0BAWvB,SAAQggB,KAAwBxoB,SAC9B+G,KAAKigB,OAAO5Z,OAASrG,KAAKqG,eACrB4Z,QAAO4B,iBAAQJ,UAAgBxoB,6BAStC,SAAUwoB,KAAwBxoB,GAChCwJ,OAAO9I,KAAKqG,KAAKiL,UAAUvI,QAAQ9I,kBAC5BqR,SAASrR,IAAKioB,iBAAQJ,UAAgBxoB,wBAW/C,SAAI0O,EAAiBlG,GACnBzB,KAAKigB,OAAOoB,GAAG1Z,EAASlG,sBAO1B,SAAKkG,EAAiBlG,GACpBzB,KAAKigB,OAAOvY,IAAIC,EAASlG,4BA2B3B,SAAUA,EAAoBof,EAAiB,EAAGE,EAAiB,GACjE,MAAMnhB,eAAkB2a,OAElBiG,EAAcxgB,KAAKohB,oBAAoBxhB,EAAI6B,GAIjD,OAFAzB,KAAKigB,OAAOoB,GAAGzhB,EAAI4gB,EAAaxgB,KAAM6gB,EAAgBE,GAAgB,GAAuB,GAEtFnhB,WCxOEkiB,MAAAA,GAAQ,CAACC,EAAoCrH,EAAqB,MAE7E,MAAMmB,EAAa/P,GAAIwB,cAAOoN,SAAAA,EAAKsH,YAAa9V,SAAS0F,MAEnDqQ,EAAM,IAAIF,EAAarH,QACxBA,GACHkF,MAAOlF,EAAIkF,OAAS,IAAI3Z,MAK1B,OAFAgc,EAAI9E,OAAOtB,GAEJoG"}